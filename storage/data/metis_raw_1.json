{
  "results": [
    {
      "hits": [
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "zVrzS6x9k0wmDU1xpZ1l",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Getting Started",
          "description": "",
          "sheet": "xokQ3kNnshQ8QnD7rMZs",
          "path": "cli-tool/getting-started",
          "editedBy": [
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zVrzS6x9k0wmDU1xpZ1l",
          "_highlightResult": {
            "title": {
              "value": "Getting Started",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Python - SQLAlchemy",
          "description": "",
          "sheet": "GN5Z8rZq4NB0EtT1tPji",
          "path": "sdk-integration/python-sqlalchemy",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q",
          "_highlightResult": {
            "title": {
              "value": "Python - SQLAlchemy",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "x9E6CZ6JCMqt4Qa5TK9c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Query Analyzer",
          "description": "",
          "sheet": "vf3IyXVM3ipUt40fNTXw",
          "path": "web-app/query-analyzer",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/x9E6CZ6JCMqt4Qa5TK9c",
          "_highlightResult": {
            "title": {
              "value": "Query Analyzer",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View in Web App",
          "description": "",
          "sheet": "WDzrGdM9fmV48O4fu48K",
          "path": "cli-tool/view-in-web-app",
          "editedBy": [
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt",
          "_highlightResult": {
            "title": {
              "value": "View in Web App",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "sSwaPjy5ND5k78yDzIF8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Advanced",
          "description": "",
          "sheet": "x2TyJB14yo6xXXWQyanZ",
          "path": "sdk-integration/javascript-prisma/nestjs/advanced",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/sSwaPjy5ND5k78yDzIF8",
          "_highlightResult": {
            "title": {
              "value": "Advanced",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "pqYnQtkGsBSTxKDZxb83",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Get an API Key",
          "description": "",
          "sheet": "M1Bdx1ufbNdE6IBng2RW",
          "path": "web-app/get-an-api-key",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/pqYnQtkGsBSTxKDZxb83",
          "_highlightResult": {
            "title": {
              "value": "Get an API Key",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "General",
          "description": "",
          "sheet": "C21v9qqsylxHHqovZREu",
          "path": "production-metadata-collector-pmc/general",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm",
          "_highlightResult": {
            "title": {
              "value": "General",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "NestJS",
          "description": "",
          "sheet": "YDyJcrXA0wKgzCkNm6sF",
          "path": "sdk-integration/javascript-prisma/nestjs",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4",
          "_highlightResult": {
            "title": {
              "value": "NestJS",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "kauVdraAA9xNwV7UZjta",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "FAQ",
          "description": "",
          "sheet": "pvtlG6RkWdfg6ouHkKTa",
          "path": "support/faq",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/kauVdraAA9xNwV7UZjta",
          "_highlightResult": {
            "title": {
              "value": "FAQ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "k6GF8RLzolpbnDFbTZbQ",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Built-in Help",
          "description": "",
          "sheet": "mCP9xFXrIbgoEEA3Pt5g",
          "path": "cli-tool/built-in-help",
          "editedBy": [
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "TXzZcmY9lJVVEWCKcnsrTqvjtYg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/k6GF8RLzolpbnDFbTZbQ",
          "_highlightResult": {
            "title": {
              "value": "Built-in Help",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "j0KVIDUrlqRBTvuEteXR",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Simple",
          "description": "",
          "sheet": "HSr7aWsPKoEM8FXPmcaw",
          "path": "sdk-integration/javascript-prisma/express/simple",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/j0KVIDUrlqRBTvuEteXR",
          "_highlightResult": {
            "title": {
              "value": "Simple",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "iJBanjnHOTdN6NiKSbs3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "description": "",
          "sheet": "f5dTeWV591wWhSsHpozT",
          "path": "web-app/production",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/iJBanjnHOTdN6NiKSbs3",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Metis Building Blocks",
          "description": "",
          "sheet": "CBjzArX2AZp5sVPpL9Dq",
          "path": "getting-started/metis-building-blocks",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE",
          "_highlightResult": {
            "title": {
              "value": "Metis Building Blocks",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "d57DKzmNUioEFHM0nNSi",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Plan Your Implementation",
          "description": "",
          "sheet": "LSXCodwP16CQNRvYOGjm",
          "path": "getting-started/plan-your-implementation",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi",
          "_highlightResult": {
            "title": {
              "value": "Plan Your Implementation",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "General",
          "description": "Using the Metis Command Line Interface (CLI)",
          "sheet": "eCN5z4t6W6juzDB4Hwxx",
          "path": "cli-tool/general",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2",
            "TXzZcmY9lJVVEWCKcnsrTqvjtYg2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7",
          "_highlightResult": {
            "title": {
              "value": "General",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "Using the Metis Command Line Interface (CLI)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "cGXA3suw6W5sHplXfROF",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Advanced",
          "description": "",
          "sheet": "a3X7rQOSlRUuPs9jVPCK",
          "path": "sdk-integration/javascript-prisma/express/advanced",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF",
          "_highlightResult": {
            "title": {
              "value": "Advanced",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Connect to AWS",
          "description": "",
          "sheet": "TGKqg7D2C3oQ8NPrnu2x",
          "path": "cli-tool/connect-to-aws",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d",
          "_highlightResult": {
            "title": {
              "value": "Connect to AWS",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "a24I6tPnrpHJvFvmdrS1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Tests",
          "description": "",
          "sheet": "XqNwN6INoZs1hDjOTZdR",
          "path": "ci-cd/tests",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/a24I6tPnrpHJvFvmdrS1",
          "_highlightResult": {
            "title": {
              "value": "Tests",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Commands List",
          "description": "Documentation for all the available CLI/REPL/Server actions",
          "sheet": "JIoZU4mHfKlnGiuFvyc1",
          "path": "cli-tool/commands-list",
          "editedBy": [
            "TXzZcmY9lJVVEWCKcnsrTqvjtYg2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61",
          "_highlightResult": {
            "title": {
              "value": "Commands List",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "Documentation for all the available CLI/REPL/Server actions",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "YnAIqkowVvfhdleLWxHO",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Under the Hood",
          "description": "",
          "sheet": "ZMdYP5I1pBSuBcsAmj9k",
          "path": "getting-started/under-the-hood",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO",
          "_highlightResult": {
            "title": {
              "value": "Under the Hood",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "XBuc3tDRWkNn2Ts2amEW",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "description": "",
          "sheet": "7SWVJlkfth8NtMhWWdWs",
          "path": "cli-tool/repl",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/XBuc3tDRWkNn2Ts2amEW",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "UCKV4UjR4uGYzUZtkQjA",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Pull Requests",
          "description": "",
          "sheet": "f5vY8DMS0ARePg3uMwKs",
          "path": "web-app/pull-requests",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/UCKV4UjR4uGYzUZtkQjA",
          "_highlightResult": {
            "title": {
              "value": "Pull Requests",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "PJqDm9VFd1aQn5gV7ZYN",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Tutorials",
          "description": "",
          "sheet": "EwU1vZPK7G6QOeqF8fJB",
          "path": "support/tutorials",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/PJqDm9VFd1aQn5gV7ZYN",
          "_highlightResult": {
            "title": {
              "value": "Tutorials",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "O3MpHZJyqpP7l0vLyj6t",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Getting Started",
          "description": "",
          "sheet": "kTwhz7uDl7qz0vhZZH20",
          "path": "getting-started/getting-started",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/O3MpHZJyqpP7l0vLyj6t",
          "_highlightResult": {
            "title": {
              "value": "Getting Started",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "NsL8gzK0buon8ujbPmXc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "JavaScript - Prisma",
          "description": "Quickstart Guide",
          "sheet": "knTa1O2N2g8Zg3POciZs",
          "path": "sdk-integration/javascript-prisma",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc",
          "_highlightResult": {
            "title": {
              "value": "JavaScript - Prisma",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "Quickstart Guide",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "NjykeFiFtev3OuYGf2bl",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Set Up",
          "description": "Enrich the Insights Engine with metadata from your Production Environment",
          "sheet": "xfzbK5z8yJnPMg2qr4Z5",
          "path": "production-metadata-collector-pmc/set-up",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NjykeFiFtev3OuYGf2bl",
          "_highlightResult": {
            "title": {
              "value": "Set Up",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "Enrich the Insights Engine with metadata from your Production Environment",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "JWwx9ybR7q10Z0iSbVOL",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Trace Details",
          "description": "",
          "sheet": "aNCFx0ZW5HpXp1rEQQel",
          "path": "web-app/trace-details",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/JWwx9ybR7q10Z0iSbVOL",
          "_highlightResult": {
            "title": {
              "value": "Trace Details",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "HWfFNVYog5wia7jS45oE",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Analyzing a Query",
          "description": "",
          "sheet": "lVZ4mOiazakypAO1z8k1",
          "path": "cli-tool/analyzing-a-query",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE",
          "_highlightResult": {
            "title": {
              "value": "Analyzing a Query",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI - Query Analysis",
          "description": "",
          "sheet": "ueft5TEVj76EVmCyrmD9",
          "path": "support/tutorials/cli-query-analysis",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn",
          "_highlightResult": {
            "title": {
              "value": "CLI - Query Analysis",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "E61cZGkIipfjFKNYiEBT",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "General",
          "description": "",
          "sheet": "2DQj2FOkG9YgFd4S8Jxw",
          "path": "sdk-integration/general",
          "editedBy": [
            "SBhFB1P7WEbKevG32uIYBrcSlVA3",
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT",
          "_highlightResult": {
            "title": {
              "value": "General",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "DXpVPMjdyT5XurjqDup4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Express",
          "description": "",
          "sheet": "txbHqgSiiZrCzh72LNHs",
          "path": "sdk-integration/javascript-prisma/express",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4",
          "_highlightResult": {
            "title": {
              "value": "Express",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "AzSzkwybKMSW3LMokr4a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "What is Metis?",
          "description": "",
          "sheet": "M9TOwbrJSExXgufz9qCV",
          "path": "getting-started/what-is-metis",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a",
          "_highlightResult": {
            "title": {
              "value": "What is Metis?",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Projects",
          "description": "",
          "sheet": "UjUHPPoh4h7E8NOM8QGP",
          "path": "web-app/projects",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6",
          "_highlightResult": {
            "title": {
              "value": "Projects",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "ExpressJS - Sequelize",
          "description": "",
          "sheet": "wDfzeLUMzXnoNwIpgBXD",
          "path": "sdk-integration/expressjs-sequelize",
          "editedBy": [
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "TXzZcmY9lJVVEWCKcnsrTqvjtYg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX",
          "_highlightResult": {
            "title": {
              "value": "ExpressJS - Sequelize",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "65qcWBHPhJIRDX5woVi5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environments",
          "description": "",
          "sheet": "kfKB733qCr6YmLzIC19C",
          "path": "web-app/environments",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/65qcWBHPhJIRDX5woVi5",
          "_highlightResult": {
            "title": {
              "value": "Environments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "35NaFSV2xM9V2JhI0lXC",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Simple",
          "description": "",
          "sheet": "Z6iigzHBy6YlvBQsLrcq",
          "path": "sdk-integration/javascript-prisma/nestjs/simple",
          "editedBy": [
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/35NaFSV2xM9V2JhI0lXC",
          "_highlightResult": {
            "title": {
              "value": "Simple",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Database Connections",
          "description": "",
          "sheet": "Hh43r1gIM61wLVcL47us",
          "path": "cli-tool/database-connections",
          "editedBy": [
            "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
            "Hs7ga4qsiBPfCtLSZ0fnJBI8GfM2"
          ],
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2",
          "_highlightResult": {
            "title": {
              "value": "Database Connections",
              "matchLevel": "none",
              "matchedWords": []
            },
            "description": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        }
      ],
      "nbHits": 37,
      "page": 0,
      "nbPages": 1,
      "hitsPerPage": 1000,
      "exhaustiveNbHits": true,
      "exhaustiveTypo": true,
      "exhaustive": {
        "nbHits": true,
        "typo": true
      },
      "query": "",
      "params": "query=&hitsPerPage=100000&analyticsTags=%5B%22space%2F-MiqIHa1G-OhMZ7Fui__%22%5D&highlightPreTag=%3Cgb-search-highlight%3E&highlightPostTag=%3C%2Fgb-search-highlight%3E&filters=(viewableByPublicSpaces%3A-MiqIHa1G-OhMZ7Fui__-1)%20AND%20projectId%3Agitbook-x-prod",
      "index": "pages",
      "renderingContent": {},
      "processingTimeMS": 8,
      "processingTimingsMS": {
        "afterFetch": {
          "format": {
            "total": 1
          },
          "total": 1
        },
        "fetch": {
          "total": 3
        },
        "getIdx": {
          "load": {
            "dicts": 2,
            "total": 3
          },
          "total": 3
        },
        "request": {
          "roundTrip": 364
        },
        "total": 9
      },
      "serverTimeMS": 10
    },
    {
      "hits": [
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xKzynioSzwYhoO3Sp8qE",
          "page": "zguS6jsa6GD3SmlyGU8a",
          "section": "initial_zguS6jsa6GD3SmlyGU8a_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Here you can find a few end-to-end tutorials, to get a better understanding of how to use Metis. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zguS6jsa6GD3SmlyGU8a/initial_zguS6jsa6GD3SmlyGU8a_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Here you can find a few end-to-end tutorials, to get a better understanding of how to use Metis. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ITf2dAOCxYlK2q3RAb9G",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "initial_zJ2RJMv8yEVHZPunBB3q_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "On this page, we get you up and running with Metis' SDK for Python, so that it will automatically send the SQL commands, with their caller REST / GraphQL, from the application. Metis SDK supports Python  SQLAlchemy with FastAPI and or Flask. \nSupporting Django is coming soon.\n\nIf you don't have an API Key yet, sign up to Metis at http://metisdata.io to get one. It can be found under the API Key page. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/initial_zJ2RJMv8yEVHZPunBB3q_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "On this page, we get you up and running with Metis' SDK for Python, so that it will automatically send the SQL commands, with their caller REST / GraphQL, from the application. Metis SDK supports Python  SQLAlchemy with FastAPI and or Flask. \nSupporting Django is coming soon.\n\nIf you don't have an API Key yet, sign up to Metis at http://metisdata.io to get one. It can be found under the API Key page. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "d53c5405b6fa4c18ac62d7fb2490f59d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Install our Python SDK using pip",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/d53c5405b6fa4c18ac62d7fb2490f59d",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Install our Python SDK using pip",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dSaR11sIU2lRQ8ehGNZA",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "cbf9867c61e940579db0ae48aca2f969",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Source Code",
          "body": "The Source code of the Python SDK and a demo app can be found on our GitHub. ",
          "anchor": "source-code",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/cbf9867c61e940579db0ae48aca2f969",
          "_highlightResult": {
            "title": {
              "value": "Source Code",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Source code of the Python SDK and a demo app can be found on our GitHub. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "be86cd945dfd4322b1be185129efebbc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/be86cd945dfd4322b1be185129efebbc",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "bde93d5360e64c3399f85f6c6ee4199a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "FastAPI (Sync)",
          "body": "pip install fastapialchemycollector",
          "anchor": "fastapi-sync",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/bde93d5360e64c3399f85f6c6ee4199a",
          "_highlightResult": {
            "title": {
              "value": "FastAPI (Sync)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "pip install fastapialchemycollector",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "ae11dbcdb68741f5a68beb478e9985f9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "FastAPI (Async)",
          "body": "pip install fastapialchemycollector",
          "anchor": "fastapi-async",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/ae11dbcdb68741f5a68beb478e9985f9",
          "_highlightResult": {
            "title": {
              "value": "FastAPI (Async)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "pip install fastapialchemycollector",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "980fbb3d13d74bfca156b76bf8cb6482",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Sync",
          "body": "DATABASE_URI=postgresql://postgres:postgres@postgres:5432/fastapi",
          "anchor": "sync",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/980fbb3d13d74bfca156b76bf8cb6482",
          "_highlightResult": {
            "title": {
              "value": "Sync",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "DATABASE_URI=postgresql://postgres:postgres@postgres:5432/fastapi",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dSaR11sIU2lRQ8ehGNZA",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "97257ed3dcd948a7a4f813285418aca6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "SQLAlchemy + Flask",
          "body": "from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom sqlalchemycollector import setup, MetisInstrumentor, PlanCollectType\n# existing app initialization\napp = Flask(...)\ndb = SQLAlchemy(app)\n# The default log file name is 'metis-log-collector.log. You can change the default name. \noptional_log_file_name = 'new_file_name_of_sqlalchemy_logs.log'\n# By default, the package logs the SQL commands and their execution plan. \n# It can also be configured manually to collect only the SQL commands using PlanCollectType.NONE. \n# We recommend collecting the estimated plan too.\noptional_plan_collect_type = PlanCollectType.NONE\n# class PlanCollectType(Enum):\n#     NONE = 0\n#     ESTIMATED = 1\n# To start collecting the logs:\ninstrumentation: MetisInstrumentor = setup('service-name',\n                                           service_version='1.0.0',\n                                           plan_collection_option=PlanCollectType.ESTIMATED,\n                                           dsn=\"<URL>\",\n                                           api_key='<API_KEY>')\ninstrumentation.instrument_app(app, db.get_engine())",
          "anchor": "sqlalchemy-+-flask",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/97257ed3dcd948a7a4f813285418aca6",
          "_highlightResult": {
            "title": {
              "value": "SQLAlchemy + Flask",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom sqlalchemycollector import setup, MetisInstrumentor, PlanCollectType\n# existing app initialization\napp = Flask(...)\ndb = SQLAlchemy(app)\n# The default log file name is 'metis-log-collector.log. You can change the default name. \noptional_log_file_name = 'new_file_name_of_sqlalchemy_logs.log'\n# By default, the package logs the SQL commands and their execution plan. \n# It can also be configured manually to collect only the SQL commands using PlanCollectType.NONE. \n# We recommend collecting the estimated plan too.\noptional_plan_collect_type = PlanCollectType.NONE\n# class PlanCollectType(Enum):\n#     NONE = 0\n#     ESTIMATED = 1\n# To start collecting the logs:\ninstrumentation: MetisInstrumentor = setup('service-name',\n                                           service_version='1.0.0',\n                                           plan_collection_option=PlanCollectType.ESTIMATED,\n                                           dsn=\"<URL>\",\n                                           api_key='<API_KEY>')\ninstrumentation.instrument_app(app, db.get_engine())",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "9519eb85e3bb4da89fa8d1d47e84f82a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Flask",
          "body": "from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom sqlalchemycollector import setup, MetisInstrumentor, PlanCollectType\napp = Flask(__name__)\ndb = SQLAlchemy(app)\nwith app.app_context():\n    instrumentation: MetisInstrumentor = setup(\n        service_name='<SERVICE_NAME>',\n        api_key='<API_KEY>',\n        service_version='<SERVICE_VERSION>'\n    )\n    instrumentation.instrument_app(app, db.get_engine())\n@app.route(\"/hello\")\ndef home():\n    return \"Hello, Flask!\"",
          "anchor": "flask-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/9519eb85e3bb4da89fa8d1d47e84f82a",
          "_highlightResult": {
            "title": {
              "value": "Flask",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom sqlalchemycollector import setup, MetisInstrumentor, PlanCollectType\napp = Flask(__name__)\ndb = SQLAlchemy(app)\nwith app.app_context():\n    instrumentation: MetisInstrumentor = setup(\n        service_name='<SERVICE_NAME>',\n        api_key='<API_KEY>',\n        service_version='<SERVICE_VERSION>'\n    )\n    instrumentation.instrument_app(app, db.get_engine())\n@app.route(\"/hello\")\ndef home():\n    return \"Hello, Flask!\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "80818224a1c24199a9ff83d92492af0f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Python SQLAlchemy ORM with FastAPI or Flask.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/80818224a1c24199a9ff83d92492af0f",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Python SQLAlchemy ORM with FastAPI or Flask.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "o3MtIq1cNmJW0q7UYFpb",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "7eea00d6c55a4f3bbb265a5bfa847056",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Configure",
          "body": "Open your app's main.py and add the following code-",
          "anchor": "2.-configure",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/7eea00d6c55a4f3bbb265a5bfa847056",
          "_highlightResult": {
            "title": {
              "value": "2. Configure",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open your app's main.py and add the following code-",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "7c679641546d4c29915a95ba2d9e3fc2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/7c679641546d4c29915a95ba2d9e3fc2",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "6615beeb71a34746b0f3f348b90c3574",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "FastAPI (Async)",
          "body": "from fastapi import FastAPI, APIRouter\nfrom sqlalchemy.ext.asyncio import create_async_engine\nfrom fastapialchemycollector import setup, MetisInstrumentor, PlanCollectType\napp = FastAPI()\napi_router = APIRouter()\napp.include_router(api_router)\nDATABASE_URL = \"postgresql+asyncpg://user_name:user_password@host_name:port/db_name\"\nasync_engine = create_async_engine(DATABASE_URL, echo=True)\ninstrumentation: MetisInstrumentor = setup(\n    service_name='<SERVICE_NAME>',\n    api_key='<API_KEY>',\n    service_version='<SERVICE_VERSION>',\n)\ninstrumentation.instrument_app(app, async_engine)",
          "anchor": "fastapi-async-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/6615beeb71a34746b0f3f348b90c3574",
          "_highlightResult": {
            "title": {
              "value": "FastAPI (Async)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "from fastapi import FastAPI, APIRouter\nfrom sqlalchemy.ext.asyncio import create_async_engine\nfrom fastapialchemycollector import setup, MetisInstrumentor, PlanCollectType\napp = FastAPI()\napi_router = APIRouter()\napp.include_router(api_router)\nDATABASE_URL = \"postgresql+asyncpg://user_name:user_password@host_name:port/db_name\"\nasync_engine = create_async_engine(DATABASE_URL, echo=True)\ninstrumentation: MetisInstrumentor = setup(\n    service_name='<SERVICE_NAME>',\n    api_key='<API_KEY>',\n    service_version='<SERVICE_VERSION>',\n)\ninstrumentation.instrument_app(app, async_engine)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "4b6fe17875e94c41a221b0b8b204fb8d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Flask",
          "body": "pip install sqlalchemycollector",
          "anchor": "flask",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/4b6fe17875e94c41a221b0b8b204fb8d",
          "_highlightResult": {
            "title": {
              "value": "Flask",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "pip install sqlalchemycollector",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "3863755d7d964067a9cdbe04a371bd54",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_INSTRUMENTATION\nSet false to stop all data collection, any other value activates Metis.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/3863755d7d964067a9cdbe04a371bd54",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_INSTRUMENTATION\nSet false to stop all data collection, any other value activates Metis.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "37fb97aa1c7445dfbde6cc0b1c6b05e5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/37fb97aa1c7445dfbde6cc0b1c6b05e5",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dSaR11sIU2lRQ8ehGNZA",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "29c881773de64e008094001a8b5736c3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "SQLAlchemy + Fast API",
          "body": "import os\nfrom sqlalchemy import create_engine\nfrom fastapi import FastAPI\nfrom fastapialchemycollector import setup, MetisInstrumentor, PlanCollectType\n# existing app initialization\napp = FastAPI()\nengine = create_engine(os.environ['DATABASE_URI'])\n# To start collecting the logs:\ninstrumentation: MetisInstrumentor = setup('<SERVICE_NAME>',\n                                           service_version='<SERVICE_VERSION>',\n                                           plan_collection_option=PlanCollectType.ESTIMATED,\n                                           dsn=\"<URL>\",\n                                           api_key='<API_KEY>')\ninstrumentation.instrument_app(app, engine)\n\nThe property DATABASE_URI can be used in sync or a-sync mode. \n\nAsync: DATABASE_URI=postgresql+asyncpg://postgres:postgres@postgres:5432/fastap \nSync:\nDATABASE_URI=postgresql://postgres:postgres@postgres:5432/fastapi",
          "anchor": "sqlalchemy-+-fast-api",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/29c881773de64e008094001a8b5736c3",
          "_highlightResult": {
            "title": {
              "value": "SQLAlchemy + Fast API",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "import os\nfrom sqlalchemy import create_engine\nfrom fastapi import FastAPI\nfrom fastapialchemycollector import setup, MetisInstrumentor, PlanCollectType\n# existing app initialization\napp = FastAPI()\nengine = create_engine(os.environ['DATABASE_URI'])\n# To start collecting the logs:\ninstrumentation: MetisInstrumentor = setup('<SERVICE_NAME>',\n                                           service_version='<SERVICE_VERSION>',\n                                           plan_collection_option=PlanCollectType.ESTIMATED,\n                                           dsn=\"<URL>\",\n                                           api_key='<API_KEY>')\ninstrumentation.instrument_app(app, engine)\n\nThe property DATABASE_URI can be used in sync or a-sync mode. \n\nAsync: DATABASE_URI=postgresql+asyncpg://postgres:postgres@postgres:5432/fastap \nSync:\nDATABASE_URI=postgresql://postgres:postgres@postgres:5432/fastapi",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "22d52ff7df8c4126a28f33f07f51d484",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/22d52ff7df8c4126a28f33f07f51d484",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "1ee79ed10a23430393bc45e9eb75083a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/1ee79ed10a23430393bc45e9eb75083a",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "1e77eae26f6d47c89100307bd19fa976",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Configuration Parameters",
          "body": "SERVICE_NAME\nA short name to easily group data coming from the service.\norders-service\nSERVICE_VERSION\nOptional. An internal version of the service, to help the developers to distinguish between data from different versions.\n1.2.3\nAPI_KEY\nYour project's API key.\nz9bayHMU69amS9KmdjnTo1bqVqoX1Fa11IlRp2Aq",
          "anchor": "configuration-parameters",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/1e77eae26f6d47c89100307bd19fa976",
          "_highlightResult": {
            "title": {
              "value": "Configuration Parameters",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "SERVICE_NAME\nA short name to easily group data coming from the service.\norders-service\nSERVICE_VERSION\nOptional. An internal version of the service, to help the developers to distinguish between data from different versions.\n1.2.3\nAPI_KEY\nYour project's API key.\nz9bayHMU69amS9KmdjnTo1bqVqoX1Fa11IlRp2Aq",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "13039f44a8ee48deb9c4037f301b837a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Async",
          "body": "DATABASE_URI=postgresql+asyncpg://postgres:postgres@postgres:5432/fastap ",
          "anchor": "async",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/13039f44a8ee48deb9c4037f301b837a",
          "_highlightResult": {
            "title": {
              "value": "Async",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "DATABASE_URI=postgresql+asyncpg://postgres:postgres@postgres:5432/fastap ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "zJ2RJMv8yEVHZPunBB3q",
          "section": "10f3da7e2089428cbef62f44800bce4c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "FastAPI (Sync)",
          "body": "from fastapi import FastAPI, APIRouter\nfrom fastapialchemycollector import setup, MetisInstrumentor, PlanCollectType\nfrom database.connection import engine\napp = FastAPI()\napi_router = APIRouter()\napp.include_router(api_router)\nDATABASE_URL = \"postgresql://user_name:user_password@host_name:port/db_name\"\nengine = create_engine(DATABASE_URL)\ninstrumentation: MetisInstrumentor = setup(\n    service_name='<SERVICE_NAME>',\n    api_key='<API_KEY>',\n    service_version='<SERVICE_VERSION>'\n)\ninstrumentation.instrument_app(app, engine)\n@api_router.get(\"/hello\", status_code=200)\ndef helloWorld():\n    return \"Hello World!\"",
          "anchor": "fastapi-sync-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/zJ2RJMv8yEVHZPunBB3q/10f3da7e2089428cbef62f44800bce4c",
          "_highlightResult": {
            "title": {
              "value": "FastAPI (Sync)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "from fastapi import FastAPI, APIRouter\nfrom fastapialchemycollector import setup, MetisInstrumentor, PlanCollectType\nfrom database.connection import engine\napp = FastAPI()\napi_router = APIRouter()\napp.include_router(api_router)\nDATABASE_URL = \"postgresql://user_name:user_password@host_name:port/db_name\"\nengine = create_engine(DATABASE_URL)\ninstrumentation: MetisInstrumentor = setup(\n    service_name='<SERVICE_NAME>',\n    api_key='<API_KEY>',\n    service_version='<SERVICE_VERSION>'\n)\ninstrumentation.instrument_app(app, engine)\n@api_router.get(\"/hello\", status_code=200)\ndef helloWorld():\n    return \"Hello World!\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "abtMvPjv7fFoVKAVMG6W",
          "page": "x9E6CZ6JCMqt4Qa5TK9c",
          "section": "e57dd60891404773ab44a25006176d90",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Quickly analyze a query, without any instrumentation.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/x9E6CZ6JCMqt4Qa5TK9c/e57dd60891404773ab44a25006176d90",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Quickly analyze a query, without any instrumentation.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "abtMvPjv7fFoVKAVMG6W",
          "page": "x9E6CZ6JCMqt4Qa5TK9c",
          "section": "c77f176f4635439b801ab5c1a1de122d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Retrieve the Execution Plan",
          "body": "To get the execution plan of the SQL Code add the following code to it-\n\nEXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, TIMING, FORMAT JSON)\nselect *\nfrom postgres_air.flight\nwhere flight_id = 108340\n\nThe execution plan must be created using either \nActual - EXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, TIMING, FORMAT JSON)\nEstimated - EXPLAIN (COSTS, VERBOSE, BUFFERS, FORMAT JSON)\n\nRunning this code generates the following JSON string-\n\n{\n  \"Plan\": {\n    \"Node Type\": \"Index Scan\",\n    \"Parallel Aware\": false,\n    \"Scan Direction\": \"Forward\",\n    \"Index Name\": \"flight_pkey\",\n    \"Relation Name\": \"flight\",\n    \"Schema\": \"postgres_air\",\n    \"Alias\": \"flight\",\n    \"Startup Cost\": 0.42,\n    \"Total Cost\": 8.44,\n    \"Plan Rows\": 1,\n    \"Plan Width\": 71,\n    \"Output\": [\n      \"flight_id\",\n      \"flight_no\",\n      \"scheduled_departure\",\n      \"scheduled_arrival\",\n      \"departure_airport\",\n      \"arrival_airport\",\n      \"status\",\n      \"aircraft_code\",\n      \"actual_departure\",\n      \"actual_arrival\",\n      \"update_ts\"\n    ],\n    \"Index Cond\": \"(flight.flight_id = 108340)\",\n    \"Shared Hit Blocks\": 0,\n    \"Shared Read Blocks\": 0,\n    \"Shared Dirtied Blocks\": 0,\n    \"Shared Written Blocks\": 0,\n    \"Local Hit Blocks\": 0,\n    \"Local Read Blocks\": 0,\n    \"Local Dirtied Blocks\": 0,\n    \"Local Written Blocks\": 0,\n    \"Temp Read Blocks\": 0,\n    \"Temp Written Blocks\": 0,\n    \"I/O Read Time\": 0,\n    \"I/O Write Time\": 0\n  },\n  \"Planning\": {\n    \"Shared Hit Blocks\": 0,\n    \"Shared Read Blocks\": 0,\n    \"Shared Dirtied Blocks\": 0,\n    \"Shared Written Blocks\": 0,\n    \"Local Hit Blocks\": 0,\n    \"Local Read Blocks\": 0,\n    \"Local Dirtied Blocks\": 0,\n    \"Local Written Blocks\": 0,\n    \"Temp Read Blocks\": 0,\n    \"Temp Written Blocks\": 0,\n    \"I/O Read Time\": 0,\n    \"I/O Write Time\": 0\n  },\n  \"Planning Time\": 0.066\n}",
          "anchor": "2.-retrieve-the-execution-plan",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/x9E6CZ6JCMqt4Qa5TK9c/c77f176f4635439b801ab5c1a1de122d",
          "_highlightResult": {
            "title": {
              "value": "2. Retrieve the Execution Plan",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To get the execution plan of the SQL Code add the following code to it-\n\nEXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, TIMING, FORMAT JSON)\nselect *\nfrom postgres_air.flight\nwhere flight_id = 108340\n\nThe execution plan must be created using either \nActual - EXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, TIMING, FORMAT JSON)\nEstimated - EXPLAIN (COSTS, VERBOSE, BUFFERS, FORMAT JSON)\n\nRunning this code generates the following JSON string-\n\n{\n  \"Plan\": {\n    \"Node Type\": \"Index Scan\",\n    \"Parallel Aware\": false,\n    \"Scan Direction\": \"Forward\",\n    \"Index Name\": \"flight_pkey\",\n    \"Relation Name\": \"flight\",\n    \"Schema\": \"postgres_air\",\n    \"Alias\": \"flight\",\n    \"Startup Cost\": 0.42,\n    \"Total Cost\": 8.44,\n    \"Plan Rows\": 1,\n    \"Plan Width\": 71,\n    \"Output\": [\n      \"flight_id\",\n      \"flight_no\",\n      \"scheduled_departure\",\n      \"scheduled_arrival\",\n      \"departure_airport\",\n      \"arrival_airport\",\n      \"status\",\n      \"aircraft_code\",\n      \"actual_departure\",\n      \"actual_arrival\",\n      \"update_ts\"\n    ],\n    \"Index Cond\": \"(flight.flight_id = 108340)\",\n    \"Shared Hit Blocks\": 0,\n    \"Shared Read Blocks\": 0,\n    \"Shared Dirtied Blocks\": 0,\n    \"Shared Written Blocks\": 0,\n    \"Local Hit Blocks\": 0,\n    \"Local Read Blocks\": 0,\n    \"Local Dirtied Blocks\": 0,\n    \"Local Written Blocks\": 0,\n    \"Temp Read Blocks\": 0,\n    \"Temp Written Blocks\": 0,\n    \"I/O Read Time\": 0,\n    \"I/O Write Time\": 0\n  },\n  \"Planning\": {\n    \"Shared Hit Blocks\": 0,\n    \"Shared Read Blocks\": 0,\n    \"Shared Dirtied Blocks\": 0,\n    \"Shared Written Blocks\": 0,\n    \"Local Hit Blocks\": 0,\n    \"Local Read Blocks\": 0,\n    \"Local Dirtied Blocks\": 0,\n    \"Local Written Blocks\": 0,\n    \"Temp Read Blocks\": 0,\n    \"Temp Written Blocks\": 0,\n    \"I/O Read Time\": 0,\n    \"I/O Write Time\": 0\n  },\n  \"Planning Time\": 0.066\n}",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "abtMvPjv7fFoVKAVMG6W",
          "page": "x9E6CZ6JCMqt4Qa5TK9c",
          "section": "babaac86ad95454d97eb2df9e67117fe",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Run Query Analyzer",
          "body": "Go to Query Analyzer, paste and submit the sql code and execution plan accordingly.\n\nQuery Analyzer Page\n\nFurther Details\nRead the Official PostgreSQL documentation about Execution Plans.",
          "anchor": "3.-run-query-analyzer",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/x9E6CZ6JCMqt4Qa5TK9c/babaac86ad95454d97eb2df9e67117fe",
          "_highlightResult": {
            "title": {
              "value": "3. Run Query Analyzer",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Go to Query Analyzer, paste and submit the sql code and execution plan accordingly.\n\nQuery Analyzer Page\n\nFurther Details\nRead the Official PostgreSQL documentation about Execution Plans.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "abtMvPjv7fFoVKAVMG6W",
          "page": "x9E6CZ6JCMqt4Qa5TK9c",
          "section": "77016eba731b40ce946c079cef77982d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Learn by Example",
          "body": "",
          "anchor": "learn-by-example",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/x9E6CZ6JCMqt4Qa5TK9c/77016eba731b40ce946c079cef77982d",
          "_highlightResult": {
            "title": {
              "value": "Learn by Example",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "abtMvPjv7fFoVKAVMG6W",
          "page": "x9E6CZ6JCMqt4Qa5TK9c",
          "section": "152410446c6f48f2a57a96318fbbefc3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Note the SQL Command",
          "body": "select *\nfrom postgres_air.flight\nwhere flight_id = 108340",
          "anchor": "1.-note-the-sql-command",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/x9E6CZ6JCMqt4Qa5TK9c/152410446c6f48f2a57a96318fbbefc3",
          "_highlightResult": {
            "title": {
              "value": "1. Note the SQL Command",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "select *\nfrom postgres_air.flight\nwhere flight_id = 108340",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7rb5lqsMvPDavz7rhwI6",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "initial_wpnCWEctIv7dLYP2sPSV_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Install the SDK - links to our documentation. Get inspiration from Datree. https://hub.datree.io/ ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/initial_wpnCWEctIv7dLYP2sPSV_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Install the SDK - links to our documentation. Get inspiration from Datree. https://hub.datree.io/ ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ag6ZOG5OJFtG8B8hCpC8",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "eba7fca7f9434d12bc2f33449cdd065c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Enrich the Collected Data for Better Insights ",
          "body": "Collect data from the Production environment to provide the Rule Engine with more information to work with. Some data, such as table size and index usage, only exist in the Production env. and can be used to fine-tune the recommendations. \n\nThe system only collects metadata and does NOT use any of the data in the tables. It uses lightweight queries with no impact on the performance of the Production environment. ",
          "anchor": "enrich-the-collected-data-for-better-insights",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/eba7fca7f9434d12bc2f33449cdd065c",
          "_highlightResult": {
            "title": {
              "value": "Enrich the Collected Data for Better Insights ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Collect data from the Production environment to provide the Rule Engine with more information to work with. Some data, such as table size and index usage, only exist in the Production env. and can be used to fine-tune the recommendations. \n\nThe system only collects metadata and does NOT use any of the data in the tables. It uses lightweight queries with no impact on the performance of the Production environment. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ag6ZOG5OJFtG8B8hCpC8",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "dec44128fd404bc0a8f2222b1da75e0b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View the data in the Web App ",
          "body": "Login to the Metis Web App to view the recent activity. \n\nReview the REST / GraphQL commands and the SQL Commands they generated. The UI helps detect the most problematic Traces. \nClick on a trace to view the Insights of each SQL command. Metis shows the main problems, suggested solutions and all the metadata used to process the information. ",
          "anchor": "view-the-data-in-the-web-app",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/dec44128fd404bc0a8f2222b1da75e0b",
          "_highlightResult": {
            "title": {
              "value": "View the data in the Web App ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Login to the Metis Web App to view the recent activity. \n\nReview the REST / GraphQL commands and the SQL Commands they generated. The UI helps detect the most problematic Traces. \nClick on a trace to view the Insights of each SQL command. Metis shows the main problems, suggested solutions and all the metadata used to process the information. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TDXBiI4xF3PPhLmh0KvU",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "bfcfbea18c24435ea91511d024de87bd",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Step 1 - Sign Up",
          "body": " Sign Up to Metis, you can start with the free tier. Sign up using your Google or GitHub account. \n\nThe On-Boarding wizard will open automatically after the sign-up. It guides you on what to do next. The first step is installing the SDK. \nMetis SDK is used to send traces to our servers for deep analysis. We provide SDK for Python and JS. The next page guides you on how to get an API Key and use it for the instrumentation.  It is a pretty simple step, using a few lines of code.   ",
          "anchor": "step-1-sign-up",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/bfcfbea18c24435ea91511d024de87bd",
          "_highlightResult": {
            "title": {
              "value": "Step 1 - Sign Up",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": " Sign Up to Metis, you can start with the free tier. Sign up using your Google or GitHub account. \n\nThe On-Boarding wizard will open automatically after the sign-up. It guides you on what to do next. The first step is installing the SDK. \nMetis SDK is used to send traces to our servers for deep analysis. We provide SDK for Python and JS. The next page guides you on how to get an API Key and use it for the instrumentation.  It is a pretty simple step, using a few lines of code.   ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ag6ZOG5OJFtG8B8hCpC8",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "a7a9422c67024ef9b1ef03f38b0bb9eb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Run the Application",
          "body": "Run the Application as usual. It can be done manually, via your QA tests or using CI/CD. As long as the app is working, it sends traces to Metis. The impact on performance is almost zero. ",
          "anchor": "run-the-application",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/a7a9422c67024ef9b1ef03f38b0bb9eb",
          "_highlightResult": {
            "title": {
              "value": "Run the Application",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the Application as usual. It can be done manually, via your QA tests or using CI/CD. As long as the app is working, it sends traces to Metis. The impact on performance is almost zero. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ag6ZOG5OJFtG8B8hCpC8",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "9be1bfb876b74dc299b3cbd7e3b37adb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Sign Up",
          "body": "Sign Up to Metis free tier. You can sign up using your Google or GitHub account. \nThe on-boarding wizard helps you to set up everything and view a sample trace in the Web App.  ",
          "anchor": "sign-up",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/9be1bfb876b74dc299b3cbd7e3b37adb",
          "_highlightResult": {
            "title": {
              "value": "Sign Up",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Sign Up to Metis free tier. You can sign up using your Google or GitHub account. \nThe on-boarding wizard helps you to set up everything and view a sample trace in the Web App.  ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ag6ZOG5OJFtG8B8hCpC8",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "572eb0dd80914afb86de79c032362a79",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Instrumentation",
          "body": "Metis provides an SDK for the main ORM and Frameworks in JavaScript and Python with more programming languages and ORM coming soon. The installation and instrumentation are very simple, with just a few lines of code. ",
          "anchor": "instrumentation",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/572eb0dd80914afb86de79c032362a79",
          "_highlightResult": {
            "title": {
              "value": "Instrumentation",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis provides an SDK for the main ORM and Frameworks in JavaScript and Python with more programming languages and ORM coming soon. The installation and instrumentation are very simple, with just a few lines of code. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ag6ZOG5OJFtG8B8hCpC8",
          "page": "wpnCWEctIv7dLYP2sPSV",
          "section": "198e63a11df54139ad215bb7ebbdf06d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Ready to gain visibility and a deeper understanding of your SQL commands? Would you like to solve DB-related problems quickly? Get started with Metis in just 3 easy steps:\n\nSign up for a Metis Account (it's free!)\nInstall the Metis SDK\nAccess and observe your tracing data from Metis Web App",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/wpnCWEctIv7dLYP2sPSV/198e63a11df54139ad215bb7ebbdf06d",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Ready to gain visibility and a deeper understanding of your SQL commands? Would you like to solve DB-related problems quickly? Get started with Metis in just 3 easy steps:\n\nSign up for a Metis Account (it's free!)\nInstall the Metis SDK\nAccess and observe your tracing data from Metis Web App",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "SwTvDYEN3FK5pO6afFr4",
          "page": "upVwY9WvXQzZizHMjD1m",
          "section": "826b454c0c1743738b167fa232b9774c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Not sure if we need this page. The MMC doesn't have a stand-alone UI, it uses the Reports page to show its data and the Settings to show if something went wrong. ",
          "body": "",
          "anchor": "not-sure-if-we-need-this-page.-the-mmc-doesnt-have-a-stand-alone-ui-it-uses-the-reports-page-to-show",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/upVwY9WvXQzZizHMjD1m/826b454c0c1743738b167fa232b9774c",
          "_highlightResult": {
            "title": {
              "value": "Not sure if we need this page. The MMC doesn't have a stand-alone UI, it uses the Reports page to show its data and the Settings to show if something went wrong. ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "GdIRWAvEHZCsIbU1joHT",
          "page": "upVwY9WvXQzZizHMjD1m",
          "section": "464433104ccf478dadd49e7f21ce0540",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Web App - Reports",
          "body": "The collected data and insights on that data can be found under the page \"Reports\" in the web app",
          "anchor": "web-app-reports",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/upVwY9WvXQzZizHMjD1m/464433104ccf478dadd49e7f21ce0540",
          "_highlightResult": {
            "title": {
              "value": "Web App - Reports",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The collected data and insights on that data can be found under the page \"Reports\" in the web app",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "GdIRWAvEHZCsIbU1joHT",
          "page": "upVwY9WvXQzZizHMjD1m",
          "section": "376db2b510a641caa8d05e427a14acc0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "About the Production Metadata Collector",
          "body": "The Production Metadata Collector (PMC) collects metadata to improve the quality of the insights by analyzing not just the Dev environment but also the Production one. \nSince the collector was designed for the Production env, it was built using the following principles: \n\nData Security - The collector only pushes data out and never listens to external requests\nData Privacy - the collector only collects metadata, such as table sizes and indexes usage. \nPerformance - super efficient SQL queries which work on the system catalog and finish in less than 1 second. The queries run every 6-24 hours. \nPerformance - collects only the necessary data for insights. An SQL query is added only if it is used by an insight. \nTransparency - The code is open-sourced, MIT license. ",
          "anchor": "about-the-production-metadata-collector",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/upVwY9WvXQzZizHMjD1m/376db2b510a641caa8d05e427a14acc0",
          "_highlightResult": {
            "title": {
              "value": "About the Production Metadata Collector",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Production Metadata Collector (PMC) collects metadata to improve the quality of the insights by analyzing not just the Dev environment but also the Production one. \nSince the collector was designed for the Production env, it was built using the following principles: \n\nData Security - The collector only pushes data out and never listens to external requests\nData Privacy - the collector only collects metadata, such as table sizes and indexes usage. \nPerformance - super efficient SQL queries which work on the system catalog and finish in less than 1 second. The queries run every 6-24 hours. \nPerformance - collects only the necessary data for insights. An SQL query is added only if it is used by an insight. \nTransparency - The code is open-sourced, MIT license. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "initial_uYh11iYyd7fOl2YYkiwt_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The CLI has limited UI, viewing Query Analysis in our Web App provides a much better UX, richer insights and tools to understand them and fix them. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/initial_uYh11iYyd7fOl2YYkiwt_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The CLI has limited UI, viewing Query Analysis in our Web App provides a much better UX, richer insights and tools to understand them and fix them. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "ddde1f26b5274fca90ce712b9c2a4377",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Run",
          "body": "",
          "anchor": "2.-run",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/ddde1f26b5274fca90ce712b9c2a4377",
          "_highlightResult": {
            "title": {
              "value": "2. Run",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "bd18fa8644cf40219f6d9f16d0a034fb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Open",
          "body": "Web App view of Query Analysis results",
          "anchor": "3.-open",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/bd18fa8644cf40219f6d9f16d0a034fb",
          "_highlightResult": {
            "title": {
              "value": "3. Open",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Web App view of Query Analysis results",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "afcd59b87ba748d38947de8d73129479",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Configure",
          "body": "Open your projects page and copy your API Key.\n\nProjects Page\n\nEnter API Key",
          "anchor": "1.-configure",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/afcd59b87ba748d38947de8d73129479",
          "_highlightResult": {
            "title": {
              "value": "1. Configure",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open your projects page and copy your API Key.\n\nProjects Page\n\nEnter API Key",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "a3947aa0fedb4d91a10256d39f49c9f0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "metis-cli set-api-key '<API_KEY>'",
          "anchor": "cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/a3947aa0fedb4d91a10256d39f49c9f0",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli set-api-key '<API_KEY>'",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "7b9b6876eff74fb5ac8cb9aad7794a11",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "setApiKey('<API_KEY>')",
          "anchor": "repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/7b9b6876eff74fb5ac8cb9aad7794a11",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "setApiKey('<API_KEY>')",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "6dd7472931274d1eb8415ba2e977c976",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "metis-cli query-analysis \"select count (*) from sales.order_lines where quantity > 315\"",
          "anchor": "cli-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/6dd7472931274d1eb8415ba2e977c976",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli query-analysis \"select count (*) from sales.order_lines where quantity > 315\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "2ce6fdb91b2a414989e03d7959f4437e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "You're all Set! ",
          "body": "",
          "anchor": "youre-all-set",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/2ce6fdb91b2a414989e03d7959f4437e",
          "_highlightResult": {
            "title": {
              "value": "You're all Set! ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "12f2054c60044dcd86576dde260ffaf3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "How it Works",
          "body": "Configure the CLI with an API Key.\nNow, whenever you run query-analysis from the CLI, you will be provided with a link to view the results on our web app.\nOpen the link ",
          "anchor": "how-it-works",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/12f2054c60044dcd86576dde260ffaf3",
          "_highlightResult": {
            "title": {
              "value": "How it Works",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Configure the CLI with an API Key.\nNow, whenever you run query-analysis from the CLI, you will be provided with a link to view the results on our web app.\nOpen the link ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "LE49HurAzymfwjOTv2Qs",
          "page": "uYh11iYyd7fOl2YYkiwt",
          "section": "12d37cae6f5545a2bcacf0709819cafa",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "queryAnalysis(\"select count (*) from sales.order_lines where quantity > 315\")",
          "anchor": "repl-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/uYh11iYyd7fOl2YYkiwt/12d37cae6f5545a2bcacf0709819cafa",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "queryAnalysis(\"select count (*) from sales.order_lines where quantity > 315\")",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "sSwaPjy5ND5k78yDzIF8",
          "section": "83902e589da34a8c9c5736fd763a6bdf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/sSwaPjy5ND5k78yDzIF8/83902e589da34a8c9c5736fd763a6bdf",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "sSwaPjy5ND5k78yDzIF8",
          "section": "551f69b79efa4e368be40c549f5472fc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nIf you followed the NestJS docs to implement Prisma, you already created a prisma.service.ts. Open it and add the following code-\n\nimport { setInstrumentedPrismaClient } from \"@metis-data/prisma-interceptor\";\nimport { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    constructor() {\n        super({\n            log: [{\n                emit: \"event\",\n                level: \"query\",\n            }]\n        });\n    }\n    async onModuleInit() {\n        await this.$connect();\n        setInstrumentedPrismaClient(this)\n    }\n}\n\nOpen your main.ts and add the following code-\n\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { StartMetisInstrumentation } from './tracer' \nStartMetisInstrumentation()\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3001);\n}\nbootstrap();\n\nCreate tracer.ts with the following code-\n\nimport opentelemetry from '@opentelemetry/api';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { Resource } from '@opentelemetry/resources';\nimport {\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { AsyncHooksContextManager } from '@opentelemetry/context-async-hooks';\nimport {\n  createFilter,\n  getPrismaInstrumentation,\n  markSpan,\n  getMetisExporter,\n} from '@metis-data/prisma-interceptor';\nimport { IncomingMessage } from 'http';\n// @ts-ignore\nBigInt.prototype.toJSON = function () {\n    return this.toString();\n};\nexport const StartMetisInstrumentation = (\n  apiKey: string = process.env.METIS_API_KEY,\n  serviceName: string = process.env.METIS_SERVICE_NAME,\n  serviceVersion: string = process.env.npm_package_version,\n  environmentName: string = process.env.METIS_ENVIRONMENT,\n  enabled: string = !process.env.METIS_DISABLED) => {\n  const tracerProvider = new BasicTracerProvider({\n    resource: new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n      [SemanticResourceAttributes.SERVICE_VERSION]: serviceVersion,\n    }),\n  });\n  const metisExporter = getMetisExporter(apiKey, environmentName, enabled);\n  tracerProvider.addSpanProcessor(new BatchSpanProcessor(metisExporter));\n  const contextManager = new AsyncHooksContextManager().enable();\n  opentelemetry.context.setGlobalContextManager(contextManager);\n  tracerProvider.register();\n  const urlsFilter = createFilter([/favicon.ico/]);\n  registerInstrumentations({\n    instrumentations: [\n      new HttpInstrumentation({\n        ignoreOutgoingRequestHook: () => true,\n        ignoreIncomingRequestHook: (request: IncomingMessage) => {\n          return urlsFilter(request.url);\n        },\n        requestHook: markSpan,\n      }),\n      getPrismaInstrumentation(),\n    ],\n  });\n};",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/sSwaPjy5ND5k78yDzIF8/551f69b79efa4e368be40c549f5472fc",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nIf you followed the NestJS docs to implement Prisma, you already created a prisma.service.ts. Open it and add the following code-\n\nimport { setInstrumentedPrismaClient } from \"@metis-data/prisma-interceptor\";\nimport { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    constructor() {\n        super({\n            log: [{\n                emit: \"event\",\n                level: \"query\",\n            }]\n        });\n    }\n    async onModuleInit() {\n        await this.$connect();\n        setInstrumentedPrismaClient(this)\n    }\n}\n\nOpen your main.ts and add the following code-\n\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { StartMetisInstrumentation } from './tracer' \nStartMetisInstrumentation()\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3001);\n}\nbootstrap();\n\nCreate tracer.ts with the following code-\n\nimport opentelemetry from '@opentelemetry/api';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { Resource } from '@opentelemetry/resources';\nimport {\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { AsyncHooksContextManager } from '@opentelemetry/context-async-hooks';\nimport {\n  createFilter,\n  getPrismaInstrumentation,\n  markSpan,\n  getMetisExporter,\n} from '@metis-data/prisma-interceptor';\nimport { IncomingMessage } from 'http';\n// @ts-ignore\nBigInt.prototype.toJSON = function () {\n    return this.toString();\n};\nexport const StartMetisInstrumentation = (\n  apiKey: string = process.env.METIS_API_KEY,\n  serviceName: string = process.env.METIS_SERVICE_NAME,\n  serviceVersion: string = process.env.npm_package_version,\n  environmentName: string = process.env.METIS_ENVIRONMENT,\n  enabled: string = !process.env.METIS_DISABLED) => {\n  const tracerProvider = new BasicTracerProvider({\n    resource: new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n      [SemanticResourceAttributes.SERVICE_VERSION]: serviceVersion,\n    }),\n  });\n  const metisExporter = getMetisExporter(apiKey, environmentName, enabled);\n  tracerProvider.addSpanProcessor(new BatchSpanProcessor(metisExporter));\n  const contextManager = new AsyncHooksContextManager().enable();\n  opentelemetry.context.setGlobalContextManager(contextManager);\n  tracerProvider.register();\n  const urlsFilter = createFilter([/favicon.ico/]);\n  registerInstrumentations({\n    instrumentations: [\n      new HttpInstrumentation({\n        ignoreOutgoingRequestHook: () => true,\n        ignoreIncomingRequestHook: (request: IncomingMessage) => {\n          return urlsFilter(request.url);\n        },\n        requestHook: markSpan,\n      }),\n      getPrismaInstrumentation(),\n    ],\n  });\n};",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "sSwaPjy5ND5k78yDzIF8",
          "section": "2780c88dea7c4d14894a1511c17b32ae",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/sSwaPjy5ND5k78yDzIF8/2780c88dea7c4d14894a1511c17b32ae",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "sSwaPjy5ND5k78yDzIF8",
          "section": "0bd73026381d4994941cc56ce097171b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/sSwaPjy5ND5k78yDzIF8/0bd73026381d4994941cc56ce097171b",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PhcmoIicm0CluYcHfwCp",
          "page": "s0TGz4zCmmH6hN6Wjdju",
          "section": "initial_s0TGz4zCmmH6hN6Wjdju_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "API Keys are required by the SDK and the Metadata Collector to send data for analysis. \n\nOn this page you can: \n\nView the API Key automatically generated when you signed up\nAdd a new API Key \nGive a meaningful name and description to an API Key\nDelete an API Key",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/s0TGz4zCmmH6hN6Wjdju/initial_s0TGz4zCmmH6hN6Wjdju_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "API Keys are required by the SDK and the Metadata Collector to send data for analysis. \n\nOn this page you can: \n\nView the API Key automatically generated when you signed up\nAdd a new API Key \nGive a meaningful name and description to an API Key\nDelete an API Key",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "f2ioallliVpfbjHTroga",
          "page": "pqYnQtkGsBSTxKDZxb83",
          "section": "d34e3751cbba4ef48b4f0c7fd20b37de",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Projects Page",
          "body": "Your API Key is located in the Project Page on each Project's card.\n\nProjects Page",
          "anchor": "projects-page",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/pqYnQtkGsBSTxKDZxb83/d34e3751cbba4ef48b4f0c7fd20b37de",
          "_highlightResult": {
            "title": {
              "value": "Projects Page",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Your API Key is located in the Project Page on each Project's card.\n\nProjects Page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "f2ioallliVpfbjHTroga",
          "page": "pqYnQtkGsBSTxKDZxb83",
          "section": "74e8b2ac29d546679a78d342a03373a9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "API Keys are required by the SDK and the Production Metadata Collector to send data for analysis.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/pqYnQtkGsBSTxKDZxb83/74e8b2ac29d546679a78d342a03373a9",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "API Keys are required by the SDK and the Production Metadata Collector to send data for analysis.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EHRFKJGhYveZ4gJjSgZj",
          "page": "o6QkfbASnXrKCJR6A4bC",
          "section": "initial_o6QkfbASnXrKCJR6A4bC_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "On this page you can:\n\nView the recent activity\nFilter the data by date, API Key and other filters\nView how many problems were found for each REST API call\n\nTraces - Recent Activity\n\nClick on a Trace to view its details: \n\nA Trace UI component to see the duration of each span (SQL command related to the trace). Notice that Metis only shows the SQL spans of a trace. \nMain metrics of the Trace\n\nClick on an SQL span to view all its details. If there is only one SQL span, it got selected automatically. \n\nThe insights with the remediation plan and the reason behind the rule. \nThe SQL command\nThe JSON of the execution plan \nA graphic UI of the execution plan, powered by http://explain.dalibo.com.\nDetailed Metrics the Rule Engine uses to check the rules. \nDetailed information about each table used by the query\nThe tags used by the Trace  \n\nexplain.dalibo.com\n\nTables Info",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/o6QkfbASnXrKCJR6A4bC/initial_o6QkfbASnXrKCJR6A4bC_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "On this page you can:\n\nView the recent activity\nFilter the data by date, API Key and other filters\nView how many problems were found for each REST API call\n\nTraces - Recent Activity\n\nClick on a Trace to view its details: \n\nA Trace UI component to see the duration of each span (SQL command related to the trace). Notice that Metis only shows the SQL spans of a trace. \nMain metrics of the Trace\n\nClick on an SQL span to view all its details. If there is only one SQL span, it got selected automatically. \n\nThe insights with the remediation plan and the reason behind the rule. \nThe SQL command\nThe JSON of the execution plan \nA graphic UI of the execution plan, powered by http://explain.dalibo.com.\nDetailed Metrics the Rule Engine uses to check the rules. \nDetailed information about each table used by the query\nThe tags used by the Trace  \n\nexplain.dalibo.com\n\nTables Info",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "ed76e6d8c87f46b59fd4db55ae245705",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "About the Production Metadata Collector",
          "body": "The Production Metadata Collector (PMC) collects metadata to improve the quality of the insights by analyzing not just the Dev environment but also the Production one. \nSince the collector was designed for the Production env, it was built using the following principles: \n\nData Security - The collector only pushes data out and never listens to external requests\nData Privacy - the collector only collects metadata, such as table sizes and indexes usage. \nPerformance - super efficient SQL queries which work on the system catalog and finish in less than 1 second. The queries run every 6-24 hours. \nPerformance - collects only the necessary data for insights. An SQL query is added only if it is used by an insight. \nTransparency - The code is open-sourced, MIT license. ",
          "anchor": "about-the-production-metadata-collector",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/ed76e6d8c87f46b59fd4db55ae245705",
          "_highlightResult": {
            "title": {
              "value": "About the Production Metadata Collector",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Production Metadata Collector (PMC) collects metadata to improve the quality of the insights by analyzing not just the Dev environment but also the Production one. \nSince the collector was designed for the Production env, it was built using the following principles: \n\nData Security - The collector only pushes data out and never listens to external requests\nData Privacy - the collector only collects metadata, such as table sizes and indexes usage. \nPerformance - super efficient SQL queries which work on the system catalog and finish in less than 1 second. The queries run every 6-24 hours. \nPerformance - collects only the necessary data for insights. An SQL query is added only if it is used by an insight. \nTransparency - The code is open-sourced, MIT license. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "dab069a0faeb422680a0085ebec85f3d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Data Security",
          "body": "The collector only pushes data out and never listens to external requests.",
          "anchor": "data-security",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/dab069a0faeb422680a0085ebec85f3d",
          "_highlightResult": {
            "title": {
              "value": "Data Security",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The collector only pushes data out and never listens to external requests.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "a31a65d7576b4b99aaabb3fa406d20d2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Data Privacy",
          "body": "The collector collects metadata, such as tables structure, tables size, indexes structure, schema and functions.",
          "anchor": "data-privacy",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/a31a65d7576b4b99aaabb3fa406d20d2",
          "_highlightResult": {
            "title": {
              "value": "Data Privacy",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The collector collects metadata, such as tables structure, tables size, indexes structure, schema and functions.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "a19ab0857c324ae9a0b75028658607c5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Transparency",
          "body": " The code is Open Source (MIT license).",
          "anchor": "transparency",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/a19ab0857c324ae9a0b75028658607c5",
          "_highlightResult": {
            "title": {
              "value": "Transparency",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": " The code is Open Source (MIT license).",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "6c4f15b70fa148b7b6653d277ab959c7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Performance",
          "body": "Super efficient SQL queries which work on the system catalog and finish in less than 1 second. The queries run every 4-24 hours.",
          "anchor": "performance",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/6c4f15b70fa148b7b6653d277ab959c7",
          "_highlightResult": {
            "title": {
              "value": "Performance",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Super efficient SQL queries which work on the system catalog and finish in less than 1 second. The queries run every 4-24 hours.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "5b09b0bf08c74299aabf3e1c4e33de1f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Web App - Reports",
          "body": "The collected data and insights on that data can be found under the page \"Reports\" in the web app",
          "anchor": "web-app-reports",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/5b09b0bf08c74299aabf3e1c4e33de1f",
          "_highlightResult": {
            "title": {
              "value": "Web App - Reports",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The collected data and insights on that data can be found under the page \"Reports\" in the web app",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "4ec8b5dee6c54b3487b4a101f3b74a38",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View Collected Metadata",
          "body": "Note the PMC on the right side\n\nMetadata from PMC",
          "anchor": "view-collected-metadata",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/4ec8b5dee6c54b3487b4a101f3b74a38",
          "_highlightResult": {
            "title": {
              "value": "View Collected Metadata",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Note the PMC on the right side\n\nMetadata from PMC",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "3688c1ab707a4784a735dedef9f07f80",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "How it Works",
          "body": "The Production Metadata Collector (PMC) collects metadata from your production database. It then uses the metadata to predict how queries from Local and Staging environments would perform on your real production database, without actually running them on it.\n\n\nSince the collector was designed for the Production env, it was built using the following principles:",
          "anchor": "how-it-works",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/3688c1ab707a4784a735dedef9f07f80",
          "_highlightResult": {
            "title": {
              "value": "How it Works",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Production Metadata Collector (PMC) collects metadata from your production database. It then uses the metadata to predict how queries from Local and Staging environments would perform on your real production database, without actually running them on it.\n\n\nSince the collector was designed for the Production env, it was built using the following principles:",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "RPHjoV9yvz6imcEQoxKD",
          "page": "nhx9GsDQ4l7N7nVLOdPm",
          "section": "1b59677bb6fd40efafbe349f06354c29",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Since our SDK collects actual query data, we advise our users to not install it in Production Environment, as it will expose Metis to users' data, and might slow down performance.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/nhx9GsDQ4l7N7nVLOdPm/1b59677bb6fd40efafbe349f06354c29",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Since our SDK collects actual query data, we advise our users to not install it in Production Environment, as it will expose Metis to users' data, and might slow down performance.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ZgO99hZoSv2xkMgEOAgs",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "d33e312aba9645c5844ae1c181f1588a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/d33e312aba9645c5844ae1c181f1588a",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ZgO99hZoSv2xkMgEOAgs",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "bb39d4e0e1314e3eb57e0011d9567c3f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-nest-interceptor\n\nWhen using @prisma/client above 4.6.1 running the following command is sometimes needed -\nnpm install --save @metis-data/prisma-nest-interceptor --legacy-peer-d\neps\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nCreate prismaService and make sure it has the following code-\n\nimport { setPrismaClient } from \"@metis-data/prisma-nest-interceptor\";\nimport { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    constructor() {\n        super({\n            log: [{\n                emit: \"event\",\n                level: \"query\",\n            }]\n        });\n    }\n    async onModuleInit() {\n        await this.$connect();\n        setPrismaClient(this)\n    }\n}\n\nOpen your main.ts and add the following code-\n\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { PrismaNestInterceptor } from '@metis-data/prisma-nest-interceptor';\n// @ts-ignore\nBigInt.prototype.toJSON = function () {\n  return this.toString();\n};\nconst interceptor = PrismaNestInterceptor.create({\n  serviceName: <SERVICE_NAME>,\n  serviceVersion: <SERVICE_VERSION>,\n  exporterApiKey: <YOUR_API_KEY>\n});\ninterceptor.instrument();\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3001);\n}\nbootstrap();",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/bb39d4e0e1314e3eb57e0011d9567c3f",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-nest-interceptor\n\nWhen using @prisma/client above 4.6.1 running the following command is sometimes needed -\nnpm install --save @metis-data/prisma-nest-interceptor --legacy-peer-d\neps\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nCreate prismaService and make sure it has the following code-\n\nimport { setPrismaClient } from \"@metis-data/prisma-nest-interceptor\";\nimport { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    constructor() {\n        super({\n            log: [{\n                emit: \"event\",\n                level: \"query\",\n            }]\n        });\n    }\n    async onModuleInit() {\n        await this.$connect();\n        setPrismaClient(this)\n    }\n}\n\nOpen your main.ts and add the following code-\n\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { PrismaNestInterceptor } from '@metis-data/prisma-nest-interceptor';\n// @ts-ignore\nBigInt.prototype.toJSON = function () {\n  return this.toString();\n};\nconst interceptor = PrismaNestInterceptor.create({\n  serviceName: <SERVICE_NAME>,\n  serviceVersion: <SERVICE_VERSION>,\n  exporterApiKey: <YOUR_API_KEY>\n});\ninterceptor.instrument();\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3001);\n}\nbootstrap();",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "0euTFoz6OdVwwlc01ZqE",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "a2ef1f3bd53a4abca86ced8fa653a783",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM, Node.js and NestJS.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/a2ef1f3bd53a4abca86ced8fa653a783",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM, Node.js and NestJS.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "0euTFoz6OdVwwlc01ZqE",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "96b70ac01ccb435d93b994a2bccefc26",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Already have OpenTelemetry in your app?",
          "body": "",
          "anchor": "already-have-opentelemetry-in-your-app",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/96b70ac01ccb435d93b994a2bccefc26",
          "_highlightResult": {
            "title": {
              "value": "Already have OpenTelemetry in your app?",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ZgO99hZoSv2xkMgEOAgs",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "6ec6610dd3b44658982aea6e0e19cc2d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/6ec6610dd3b44658982aea6e0e19cc2d",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ZgO99hZoSv2xkMgEOAgs",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "0ceb053f684640029fa2853a9b79ed4b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "METIS_TAG=PRODUCTION",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/0ceb053f684640029fa2853a9b79ed4b",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=PRODUCTION",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "0euTFoz6OdVwwlc01ZqE",
          "page": "n2EGAHlwEz6xUBDXUtT4",
          "section": "0528838213a04d5db317ebe915f1f93b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "New to OpenTelemetry?",
          "body": "",
          "anchor": "new-to-opentelemetry",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/n2EGAHlwEz6xUBDXUtT4/0528838213a04d5db317ebe915f1f93b",
          "_highlightResult": {
            "title": {
              "value": "New to OpenTelemetry?",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "k6GF8RLzolpbnDFbTZbQ",
          "section": "initial_k6GF8RLzolpbnDFbTZbQ_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "View All Supported Commands.\n\nmetis-cli help\n\nView detailed help of a specific command.\n\nmetis-cli doc <command-name>",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/k6GF8RLzolpbnDFbTZbQ/initial_k6GF8RLzolpbnDFbTZbQ_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "View All Supported Commands.\n\nmetis-cli help\n\nView detailed help of a specific command.\n\nmetis-cli doc <command-name>",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "M565A3DvvaEggFTdMoln",
          "page": "k6GF8RLzolpbnDFbTZbQ",
          "section": "c9fbc5d5710549f2bf8de25a5e40fc78",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Auto Complete",
          "body": "Some of the commands has built-in auto complete. When you start typing, the CLI suggest parameter's values or relevant objects. You can also click twice on TAB to see all relevant options. \n\nExample - The command connect() expects an existing connection name to a database. The auto completion suggests a connection name from the list of existing connections. Tapping TAB twice will show all possible connections.\n\nAuto Complete",
          "anchor": "auto-complete",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/k6GF8RLzolpbnDFbTZbQ/c9fbc5d5710549f2bf8de25a5e40fc78",
          "_highlightResult": {
            "title": {
              "value": "Auto Complete",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Some of the commands has built-in auto complete. When you start typing, the CLI suggest parameter's values or relevant objects. You can also click twice on TAB to see all relevant options. \n\nExample - The command connect() expects an existing connection name to a database. The auto completion suggests a connection name from the list of existing connections. Tapping TAB twice will show all possible connections.\n\nAuto Complete",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "M565A3DvvaEggFTdMoln",
          "page": "k6GF8RLzolpbnDFbTZbQ",
          "section": "877b698446a84a088c612aa99b0f782e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View Detailed Command's Documentation",
          "body": "To learn more about a specific command run doc(command-name). For ex. The command queryAnalysis() is quite complicated, and expect a few parameters. Run doc(\"queryAnalysis\") to learn how to use it (or continue reading the documentation). \n\ndoc(\"queryAnalysis\")",
          "anchor": "view-detailed-commands-documentation",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/k6GF8RLzolpbnDFbTZbQ/877b698446a84a088c612aa99b0f782e",
          "_highlightResult": {
            "title": {
              "value": "View Detailed Command's Documentation",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To learn more about a specific command run doc(command-name). For ex. The command queryAnalysis() is quite complicated, and expect a few parameters. Run doc(\"queryAnalysis\") to learn how to use it (or continue reading the documentation). \n\ndoc(\"queryAnalysis\")",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "j0KVIDUrlqRBTvuEteXR",
          "section": "98e22d15b6b341b4bc10e2e54b7e2228",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/j0KVIDUrlqRBTvuEteXR/98e22d15b6b341b4bc10e2e54b7e2228",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "j0KVIDUrlqRBTvuEteXR",
          "section": "55106afb9cb847758f0679eaa99edc8c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-express-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nOpen your main.ts and add the following code-\n\nimport { PrismaClient } from \"@prisma/client\";\nimport { PrismaExpressInterceptor } from '@metis-data/prisma-express-interceptor';\nconst prisma = new PrismaClient({\n  log: [\n    {\n      emit: 'event',\n      level: 'query'\n    }\n  ]\n});\nconst interceptor = PrismaExpressInterceptor.create({\n  serviceName: '<SERVICE_NAME>',\n  serviceVersion: '<SERVICE_VERSION>',\n  apiKey: '<API_KEY>'\n});\ninterceptor.instrument(prisma, {\n    // Add URL Regex to exclude instrumentation from.\n    excludedUrls: [/favicon.ico/],\n});\n// Import Express after the instrumentation.\nimport express from \"express\";\nconst app = express();\nconst port = 8000;\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}`);\n});",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/j0KVIDUrlqRBTvuEteXR/55106afb9cb847758f0679eaa99edc8c",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-express-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nOpen your main.ts and add the following code-\n\nimport { PrismaClient } from \"@prisma/client\";\nimport { PrismaExpressInterceptor } from '@metis-data/prisma-express-interceptor';\nconst prisma = new PrismaClient({\n  log: [\n    {\n      emit: 'event',\n      level: 'query'\n    }\n  ]\n});\nconst interceptor = PrismaExpressInterceptor.create({\n  serviceName: '<SERVICE_NAME>',\n  serviceVersion: '<SERVICE_VERSION>',\n  apiKey: '<API_KEY>'\n});\ninterceptor.instrument(prisma, {\n    // Add URL Regex to exclude instrumentation from.\n    excludedUrls: [/favicon.ico/],\n});\n// Import Express after the instrumentation.\nimport express from \"express\";\nconst app = express();\nconst port = 8000;\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}`);\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "j0KVIDUrlqRBTvuEteXR",
          "section": "3a90856382474d1c91be3b0c27f5eee7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/j0KVIDUrlqRBTvuEteXR/3a90856382474d1c91be3b0c27f5eee7",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "j0KVIDUrlqRBTvuEteXR",
          "section": "3138c62a96f647359068dcd3c29ef68c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/j0KVIDUrlqRBTvuEteXR/3138c62a96f647359068dcd3c29ef68c",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "JILX4GdpdPxS23Yo7Anw",
          "page": "iJBanjnHOTdN6NiKSbs3",
          "section": "f2d4b80e63ca48bc8eb2d337a23a066b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Since our SDK collects actual query data, we advise our users to not install it in Production Environment, as it will expose Metis to users' data, and might slow down performance.\n\nInstead we offer a Production Metadata Collector (PMC) that collects only metadata from the production database. The metadata gathered by it is then used to enrich insights in earlier stages of the software development life cycle.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/iJBanjnHOTdN6NiKSbs3/f2d4b80e63ca48bc8eb2d337a23a066b",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Since our SDK collects actual query data, we advise our users to not install it in Production Environment, as it will expose Metis to users' data, and might slow down performance.\n\nInstead we offer a Production Metadata Collector (PMC) that collects only metadata from the production database. The metadata gathered by it is then used to enrich insights in earlier stages of the software development life cycle.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "JILX4GdpdPxS23Yo7Anw",
          "page": "iJBanjnHOTdN6NiKSbs3",
          "section": "eddc59b926be415dbac5a2db838e1dc9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View Collected Metadata",
          "body": "Note the PMC on the right side\n\nMetadata from PMC",
          "anchor": "view-collected-metadata",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/iJBanjnHOTdN6NiKSbs3/eddc59b926be415dbac5a2db838e1dc9",
          "_highlightResult": {
            "title": {
              "value": "View Collected Metadata",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Note the PMC on the right side\n\nMetadata from PMC",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "JILX4GdpdPxS23Yo7Anw",
          "page": "iJBanjnHOTdN6NiKSbs3",
          "section": "d1ddf6c4d1ec47f38a9c19e07e53013b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Set Up a PMC",
          "body": "",
          "anchor": "set-up-a-pmc",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/iJBanjnHOTdN6NiKSbs3/d1ddf6c4d1ec47f38a9c19e07e53013b",
          "_highlightResult": {
            "title": {
              "value": "Set Up a PMC",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "sNLl78JWrPJCYfapQQ92",
          "page": "f9F0iqOqfee9cWmhy9SB",
          "section": "initial_f9F0iqOqfee9cWmhy9SB_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Adding a New Test using the SDK",
          "body": "The technical implementation of a Test called Tag. When a Trace is created using the SDK, you can add a Tag to it. Adding Tags is optional. \nA tag is a key:value pair. The page \"Tests\" is looking for traces with a tag with the key \"PR\". \n\nWhen the SDK runs as part of testing a specific Pull Request, the SDK should be configured with that PR id. Ror ex. for the web app to show all the traces grouped under the tag \"v12345\", configure the SDK to add the Tag\n \"PR\":\"v12345\"",
          "anchor": "adding-a-new-test-using-the-sdk",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/f9F0iqOqfee9cWmhy9SB/initial_f9F0iqOqfee9cWmhy9SB_block",
          "_highlightResult": {
            "title": {
              "value": "Adding a New Test using the SDK",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The technical implementation of a Test called Tag. When a Trace is created using the SDK, you can add a Tag to it. Adding Tags is optional. \nA tag is a key:value pair. The page \"Tests\" is looking for traces with a tag with the key \"PR\". \n\nWhen the SDK runs as part of testing a specific Pull Request, the SDK should be configured with that PR id. Ror ex. for the web app to show all the traces grouped under the tag \"v12345\", configure the SDK to add the Tag\n \"PR\":\"v12345\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "IO6A6Mtu3Y2m2aKyietf",
          "page": "f9F0iqOqfee9cWmhy9SB",
          "section": "ad81ee2343c84b70b492024f05206097",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The page: Tests",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/f9F0iqOqfee9cWmhy9SB/ad81ee2343c84b70b492024f05206097",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The page: Tests",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "sNLl78JWrPJCYfapQQ92",
          "page": "f9F0iqOqfee9cWmhy9SB",
          "section": "38c404cb4328468ca12a38280e7aff74",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "What is a Test? ",
          "body": "A Test is a group of traces. By default, the SDK streams all the traces to Metis servers. It is hard to understand which trace belongs to a QA test of a specific Pull Request (PR) and which trace doesn't. Adding a test name (Tag) when running the app \"signs\" each trace with it. \nThe UI then shows a card for each Test dynamically detected in the system. \n\nThe page: Tests",
          "anchor": "what-is-a-test",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/f9F0iqOqfee9cWmhy9SB/38c404cb4328468ca12a38280e7aff74",
          "_highlightResult": {
            "title": {
              "value": "What is a Test? ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A Test is a group of traces. By default, the SDK streams all the traces to Metis servers. It is hard to understand which trace belongs to a QA test of a specific Pull Request (PR) and which trace doesn't. Adding a test name (Tag) when running the app \"signs\" each trace with it. \nThe UI then shows a card for each Test dynamically detected in the system. \n\nThe page: Tests",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Yz6iosNLXxCInohmx2Rk",
          "page": "f88f37vCf9iHHyzsE8oP",
          "section": "initial_f88f37vCf9iHHyzsE8oP_block",
          "user": "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
          "title": "Automated Best Practices and Guardrails ",
          "body": "The modern Data Stack (MDS) and the Cloud environments become more and more complicated. Developers want to, and should, focus on building a better product and growing the company. This is especially true with the databases of the organization. \n\nApplying best practices is critical for: \n\nGood performances to prevent bad customer experience\nPreventing Data Loss\nUsing bad data",
          "anchor": "automated-best-practices-and-guardrails",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/f88f37vCf9iHHyzsE8oP/initial_f88f37vCf9iHHyzsE8oP_block",
          "_highlightResult": {
            "title": {
              "value": "Automated Best Practices and Guardrails ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The modern Data Stack (MDS) and the Cloud environments become more and more complicated. Developers want to, and should, focus on building a better product and growing the company. This is especially true with the databases of the organization. \n\nApplying best practices is critical for: \n\nGood performances to prevent bad customer experience\nPreventing Data Loss\nUsing bad data",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Yz6iosNLXxCInohmx2Rk",
          "page": "f88f37vCf9iHHyzsE8oP",
          "section": "0ea6a1ac6b4148a38d613553bce9fea2",
          "user": "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
          "title": "Metis Insights Engine ",
          "body": "The heart of the product is a sophisticated engine which consumes data from various resources. The engine organizes the collected data into Metrics. Metrics are facts, not good, not bad. For ex. the number of rows read by the query, a query which didn't use an index, the structure of a table, the configuration of a db, Tables size in the Production env. ...\n\nThe Metrics are calculated using: \n\nThe Traces of the App Server's activity\nThe SQL Commands and their execution plans, actual or estimated\nThe structure of tables and indexes\nConfiguration of the Server and Databases \nActual tables and indexes size in the Production Env\nActual usage of tables and indexes in the Production Env\n\nThe engine evaluates Insights to find problems in the DB. An insight, by definition, must have a severity of the problem. If no problems were found then the severity will be INFO, which means \"FYI, we checked something and everything is ok\"\n\nAn insight contains: \n\nMetadata: Title, summary, category, ID\nSeverity\nAutomated Investigation - detailed analysis of the internal checks to explain the user what was checked.  \nImpact \nRemediation Plan\nKnowledgebase - to learn more about the subject. ",
          "anchor": "metis-insights-engine",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/f88f37vCf9iHHyzsE8oP/0ea6a1ac6b4148a38d613553bce9fea2",
          "_highlightResult": {
            "title": {
              "value": "Metis Insights Engine ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The heart of the product is a sophisticated engine which consumes data from various resources. The engine organizes the collected data into Metrics. Metrics are facts, not good, not bad. For ex. the number of rows read by the query, a query which didn't use an index, the structure of a table, the configuration of a db, Tables size in the Production env. ...\n\nThe Metrics are calculated using: \n\nThe Traces of the App Server's activity\nThe SQL Commands and their execution plans, actual or estimated\nThe structure of tables and indexes\nConfiguration of the Server and Databases \nActual tables and indexes size in the Production Env\nActual usage of tables and indexes in the Production Env\n\nThe engine evaluates Insights to find problems in the DB. An insight, by definition, must have a severity of the problem. If no problems were found then the severity will be INFO, which means \"FYI, we checked something and everything is ok\"\n\nAn insight contains: \n\nMetadata: Title, summary, category, ID\nSeverity\nAutomated Investigation - detailed analysis of the internal checks to explain the user what was checked.  \nImpact \nRemediation Plan\nKnowledgebase - to learn more about the subject. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "NHD5FJ2N6RppI3ruYIBF",
          "page": "exU0nCGyYVRsM2cBSYm9",
          "section": "initial_exU0nCGyYVRsM2cBSYm9_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "The problem",
          "body": "When you try to Login the web app shows a white screen. ",
          "anchor": "the-problem",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/exU0nCGyYVRsM2cBSYm9/initial_exU0nCGyYVRsM2cBSYm9_block",
          "_highlightResult": {
            "title": {
              "value": "The problem",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "When you try to Login the web app shows a white screen. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "NHD5FJ2N6RppI3ruYIBF",
          "page": "exU0nCGyYVRsM2cBSYm9",
          "section": "c6af99758b31467486195e0db73d7be9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Suggested Solutions",
          "body": "Check your Ad Blocker. Maybe it prevents the web app from opening the Google Account login page. Allow the Ad Blocker to open app.metisdata.io ",
          "anchor": "suggested-solutions",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/exU0nCGyYVRsM2cBSYm9/c6af99758b31467486195e0db73d7be9",
          "_highlightResult": {
            "title": {
              "value": "Suggested Solutions",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Check your Ad Blocker. Maybe it prevents the web app from opening the Google Account login page. Allow the Ad Blocker to open app.metisdata.io ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "AnEt983bRdN3IPPOpC41",
          "page": "dq8eXMdC3Oz8jHMjqWAE",
          "section": "initial_dq8eXMdC3Oz8jHMjqWAE_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Here you can quickly analyze a query, without any instrumentation. Just paste the execution plan and the SQL. \n\nFor ex. Here is an SQL command: \n\nselect count(*)\nfrom postgres_air.booking b \nwhere booking_ref between 'AAA123' and 'QQQ999'\n\nTo get the execution plan of the query add the text EXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, FORMAT JSON)\n\nFor ex.\n\nEXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, FORMAT JSON)\nselect count(*)\nfrom postgres_air.booking b\nwhere booking_ref between 'AAA123' and 'QQQ999' \n\n It generates a JSON string similar to the one below:  \n\nAn example of the JSON of an execution plan\n\nTo learn more about an Execution Plan: https://www.postgresql.org/docs/current/sql-explain.html\n\nComing soon",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dq8eXMdC3Oz8jHMjqWAE/initial_dq8eXMdC3Oz8jHMjqWAE_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Here you can quickly analyze a query, without any instrumentation. Just paste the execution plan and the SQL. \n\nFor ex. Here is an SQL command: \n\nselect count(*)\nfrom postgres_air.booking b \nwhere booking_ref between 'AAA123' and 'QQQ999'\n\nTo get the execution plan of the query add the text EXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, FORMAT JSON)\n\nFor ex.\n\nEXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, FORMAT JSON)\nselect count(*)\nfrom postgres_air.booking b\nwhere booking_ref between 'AAA123' and 'QQQ999' \n\n It generates a JSON string similar to the one below:  \n\nAn example of the JSON of an execution plan\n\nTo learn more about an Execution Plan: https://www.postgresql.org/docs/current/sql-explain.html\n\nComing soon",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "fc9cnAuolM7E0KUIqMi6",
          "page": "dRA4i51yeDyvJxqhSqMB",
          "section": "initial_dRA4i51yeDyvJxqhSqMB_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Add here some background about the SDK, what frameworks are supported. ",
          "body": "",
          "anchor": "add-here-some-background-about-the-sdk-what-frameworks-are-supported.",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dRA4i51yeDyvJxqhSqMB/initial_dRA4i51yeDyvJxqhSqMB_block",
          "_highlightResult": {
            "title": {
              "value": "Add here some background about the SDK, what frameworks are supported. ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "wBkHdRx7lH33Hh5RlBay",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "initial_dOSUxY8pjBJhhCQgSWtE_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "A Trace",
          "body": "Traces give us the big picture of what happens when a request is made by user or an application. A Trace in Metis contains: \n\nA REST / GraphQL command - Routh, method, status, duration...\nThe SQL Command(s) generated by the REST / GQL. \nThe estimated execution plan of each SQL Command. \n\nMetis uses the Open Telemetry specification to define the Traces. The goal of Open Telemetry is to provide a set of standardized vendor-agnostic SDKs, APIs, and tools for ingesting, transforming, and sending data to an Observability back-end (i.e. open-source or commercial vendor).",
          "anchor": "a-trace",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/initial_dOSUxY8pjBJhhCQgSWtE_block",
          "_highlightResult": {
            "title": {
              "value": "A Trace",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Traces give us the big picture of what happens when a request is made by user or an application. A Trace in Metis contains: \n\nA REST / GraphQL command - Routh, method, status, duration...\nThe SQL Command(s) generated by the REST / GQL. \nThe estimated execution plan of each SQL Command. \n\nMetis uses the Open Telemetry specification to define the Traces. The goal of Open Telemetry is to provide a set of standardized vendor-agnostic SDKs, APIs, and tools for ingesting, transforming, and sending data to an Observability back-end (i.e. open-source or commercial vendor).",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "wBkHdRx7lH33Hh5RlBay",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "f8d1292aa60244899fcca5910b3643f4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "An Execution Plan ",
          "body": "an execution plan  is the various steps that are involved in fetching results from the database tables. Once a query is executed, the Query Optimizer of the DB Engine quickly generates multiple execution plans and selects the one which returns the results with the best performance. \n\nThere are two types of execution plans\n\nEstimated Execution Plan – As the name suggests, this type of execution plan is just a guess by the query processor about how the specific steps that are to be involved while returning the results. It is  generated BEFORE the query has been executed and usually generated very quickly. \nActual Execution Plan – The Actual Execution Plan is generated AFTER the query has been executed. It shows the actual operations and steps involved while executing the query. This may or may not differ from the Estimated Execution Plan. Since this is the actual execution of the SQL Command, it might take a long time for the command to finish. Furthermore, the INSERT / UPDATE and DELETE commands actually modify the data in the tables when the actual plan is executed. ",
          "anchor": "an-execution-plan",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/f8d1292aa60244899fcca5910b3643f4",
          "_highlightResult": {
            "title": {
              "value": "An Execution Plan ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "an execution plan  is the various steps that are involved in fetching results from the database tables. Once a query is executed, the Query Optimizer of the DB Engine quickly generates multiple execution plans and selects the one which returns the results with the best performance. \n\nThere are two types of execution plans\n\nEstimated Execution Plan – As the name suggests, this type of execution plan is just a guess by the query processor about how the specific steps that are to be involved while returning the results. It is  generated BEFORE the query has been executed and usually generated very quickly. \nActual Execution Plan – The Actual Execution Plan is generated AFTER the query has been executed. It shows the actual operations and steps involved while executing the query. This may or may not differ from the Estimated Execution Plan. Since this is the actual execution of the SQL Command, it might take a long time for the command to finish. Furthermore, the INSERT / UPDATE and DELETE commands actually modify the data in the tables when the actual plan is executed. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "e73d85ca72d2450aaa48b7cb5ae3a165",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Trace",
          "body": "Traces give us the big picture of what happens when a request is made by user or an application. A Trace in Metis contains: \n\nA REST / GraphQL command - Routh, method, status, duration...\nThe SQL Command(s) generated by the REST / GQL. \nThe estimated execution plan of each SQL Command. \n\nMetis uses the Open Telemetry specification to define the Traces. The goal of Open Telemetry is to provide a set of standardized vendor-agnostic SDKs, APIs, and tools for ingesting, transforming, and sending data to an Observability back-end (i.e. open-source or commercial vendor).",
          "anchor": "trace",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/e73d85ca72d2450aaa48b7cb5ae3a165",
          "_highlightResult": {
            "title": {
              "value": "Trace",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Traces give us the big picture of what happens when a request is made by user or an application. A Trace in Metis contains: \n\nA REST / GraphQL command - Routh, method, status, duration...\nThe SQL Command(s) generated by the REST / GQL. \nThe estimated execution plan of each SQL Command. \n\nMetis uses the Open Telemetry specification to define the Traces. The goal of Open Telemetry is to provide a set of standardized vendor-agnostic SDKs, APIs, and tools for ingesting, transforming, and sending data to an Observability back-end (i.e. open-source or commercial vendor).",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "wBkHdRx7lH33Hh5RlBay",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "b77c79d1f2e54ec8b10190b39b4d6c24",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "A Span ",
          "body": "A Span represents a unit of work or operation. Spans are the building blocks of Traces. In OpenTelemetry, they include the following information:\n\nName\nStart and End Timestamps\nSpan Context\nAttributes\nSpan Events\nSpan Links\nSpan Status",
          "anchor": "a-span",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/b77c79d1f2e54ec8b10190b39b4d6c24",
          "_highlightResult": {
            "title": {
              "value": "A Span ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A Span represents a unit of work or operation. Spans are the building blocks of Traces. In OpenTelemetry, they include the following information:\n\nName\nStart and End Timestamps\nSpan Context\nAttributes\nSpan Events\nSpan Links\nSpan Status",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "wBkHdRx7lH33Hh5RlBay",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "a50ee2131b6340b991c04c5ba0f35eae",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "An Insight",
          "body": "An Insight is the interpretation of Metrics. An insight evaluates the status and generates clear problems the user should be aware of, with a reasonable and explainable severity. \n\nAn Insight contains \n\nQuick summary of the problem\nAutomated Investigation - detailed analysis of the thought process, what Metrics were calculated, and how the severity of the problem was evaluated. \nThe Impact of ignoring the problem. \nA Remediation Plan to solve the problem. \nReferences to a Knowledge Base for more information about the problem and how to fix it.  ",
          "anchor": "an-insight",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/a50ee2131b6340b991c04c5ba0f35eae",
          "_highlightResult": {
            "title": {
              "value": "An Insight",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "An Insight is the interpretation of Metrics. An insight evaluates the status and generates clear problems the user should be aware of, with a reasonable and explainable severity. \n\nAn Insight contains \n\nQuick summary of the problem\nAutomated Investigation - detailed analysis of the thought process, what Metrics were calculated, and how the severity of the problem was evaluated. \nThe Impact of ignoring the problem. \nA Remediation Plan to solve the problem. \nReferences to a Knowledge Base for more information about the problem and how to fix it.  ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "wBkHdRx7lH33Hh5RlBay",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "8795726008c445979c4efe0c54f4f62d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "A Metric",
          "body": "A Metric describes and measures quantitatively elements of a database. The Metrics are seen as facts, not good, not bad. \n\nFor ex. \n\nThe duration of a query\nNumber of rows in a table\nLast update of the statistics in a table\nDB size\nThe cost of a specific operation in a specific query   ",
          "anchor": "a-metric",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/8795726008c445979c4efe0c54f4f62d",
          "_highlightResult": {
            "title": {
              "value": "A Metric",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A Metric describes and measures quantitatively elements of a database. The Metrics are seen as facts, not good, not bad. \n\nFor ex. \n\nThe duration of a query\nNumber of rows in a table\nLast update of the statistics in a table\nDB size\nThe cost of a specific operation in a specific query   ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "728f4d9c4f58444ba78f3fbf3eba1437",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Metric",
          "body": "A Metric describes and measures quantitatively elements of a database. The Metrics are seen as facts, not good, not bad. \n\nExamples:\n\nThe duration of a query\nNumber of rows in a table\nLast update of the statistics in a table\nDB size\nThe cost of a specific operation in a specific query   ",
          "anchor": "metric",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/728f4d9c4f58444ba78f3fbf3eba1437",
          "_highlightResult": {
            "title": {
              "value": "Metric",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A Metric describes and measures quantitatively elements of a database. The Metrics are seen as facts, not good, not bad. \n\nExamples:\n\nThe duration of a query\nNumber of rows in a table\nLast update of the statistics in a table\nDB size\nThe cost of a specific operation in a specific query   ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "716b711d3361498d8343c27155a66f30",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Execution Plan",
          "body": "an execution plan is the various steps that are involved in fetching results from the database tables. Once a query is executed, the Query Optimizer of the DB Engine quickly generates multiple execution plans and selects the one which returns the results with the best performance. \n\nThere are two types of execution plans\n\nEstimated Execution Plan – As the name suggests, this type of execution plan is just a guess by the query processor about how the specific steps that are to be involved while returning the results. It is  generated BEFORE the query has been executed and usually generated very quickly. \nActual Execution Plan – The Actual Execution Plan is generated AFTER the query has been executed. It shows the actual operations and steps involved while executing the query. This may or may not differ from the Estimated Execution Plan. Since this is the actual execution of the SQL Command, it might take a long time for the command to finish. Furthermore, the INSERT / UPDATE and DELETE commands actually modify the data in the tables when the actual plan is executed. ",
          "anchor": "execution-plan",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/716b711d3361498d8343c27155a66f30",
          "_highlightResult": {
            "title": {
              "value": "Execution Plan",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "an execution plan is the various steps that are involved in fetching results from the database tables. Once a query is executed, the Query Optimizer of the DB Engine quickly generates multiple execution plans and selects the one which returns the results with the best performance. \n\nThere are two types of execution plans\n\nEstimated Execution Plan – As the name suggests, this type of execution plan is just a guess by the query processor about how the specific steps that are to be involved while returning the results. It is  generated BEFORE the query has been executed and usually generated very quickly. \nActual Execution Plan – The Actual Execution Plan is generated AFTER the query has been executed. It shows the actual operations and steps involved while executing the query. This may or may not differ from the Estimated Execution Plan. Since this is the actual execution of the SQL Command, it might take a long time for the command to finish. Furthermore, the INSERT / UPDATE and DELETE commands actually modify the data in the tables when the actual plan is executed. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "1cd8c27942c745d88d936148b14c396d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Span ",
          "body": "A Span represents a unit of work or operation. Spans are the building blocks of Traces. In OpenTelemetry, they include the following information:\n\nName\nStart and End Timestamps\nSpan Context\nAttributes\nSpan Events\nSpan Links\nSpan Status",
          "anchor": "span",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/1cd8c27942c745d88d936148b14c396d",
          "_highlightResult": {
            "title": {
              "value": "Span ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A Span represents a unit of work or operation. Spans are the building blocks of Traces. In OpenTelemetry, they include the following information:\n\nName\nStart and End Timestamps\nSpan Context\nAttributes\nSpan Events\nSpan Links\nSpan Status",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "dOSUxY8pjBJhhCQgSWtE",
          "section": "07629cd1afe340febdf986432ecd7db8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Insight",
          "body": "An Insight is the interpretation of Metrics. An insight evaluates the status and generates clear problems the user should be aware of, with a reasonable and explainable severity. \n\nAn Insight contains \n\nQuick summary of the problem\nAutomated Investigation - detailed analysis of the thought process, what Metrics were calculated, and how the severity of the problem was evaluated. \nThe Impact of ignoring the problem. \nA Remediation Plan to solve the problem. \nReferences to a Knowledge Base for more information about the problem and how to fix it.  ",
          "anchor": "insight",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/dOSUxY8pjBJhhCQgSWtE/07629cd1afe340febdf986432ecd7db8",
          "_highlightResult": {
            "title": {
              "value": "Insight",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "An Insight is the interpretation of Metrics. An insight evaluates the status and generates clear problems the user should be aware of, with a reasonable and explainable severity. \n\nAn Insight contains \n\nQuick summary of the problem\nAutomated Investigation - detailed analysis of the thought process, what Metrics were calculated, and how the severity of the problem was evaluated. \nThe Impact of ignoring the problem. \nA Remediation Plan to solve the problem. \nReferences to a Knowledge Base for more information about the problem and how to fix it.  ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TZoFj1LMrNvwNbDJ5qYb",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "initial_d57DKzmNUioEFHM0nNSi_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "You can implement Metis in a few different ways to ensure it fits with the rest of your tech stack seamlessly, and that it respects the privacy of your organization's data.\n\nAn Illustration of how Metis is integrated at different stages of development",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/initial_d57DKzmNUioEFHM0nNSi_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "You can implement Metis in a few different ways to ensure it fits with the rest of your tech stack seamlessly, and that it respects the privacy of your organization's data.\n\nAn Illustration of how Metis is integrated at different stages of development",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TZoFj1LMrNvwNbDJ5qYb",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "e246ac23cc0644709796b413f4290132",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Analyzing SQL Commands Efficiency Locally",
          "body": "The most basic form of analysis Metis offers is done locally on the developers machine.\n\nYou can connect provide Metis a connection to any database with the same schema as your production database, and test the efficiency of queries without actually running them and affecting your database performance or data.",
          "anchor": "analyzing-sql-commands-efficiency-locally",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/e246ac23cc0644709796b413f4290132",
          "_highlightResult": {
            "title": {
              "value": "Analyzing SQL Commands Efficiency Locally",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The most basic form of analysis Metis offers is done locally on the developers machine.\n\nYou can connect provide Metis a connection to any database with the same schema as your production database, and test the efficiency of queries without actually running them and affecting your database performance or data.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TZoFj1LMrNvwNbDJ5qYb",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "ca6047c422914540ad697382c60ac3a3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Test Your Database Code In CI/CD",
          "body": "If you have unit or integration tests running as part of your CI/CD which interact with a database, you can get a report summarizing your database interactions efficiency, issues and the steps required to fix them.\n\nFor your convenience we offer an SDK and GitHub Workflows, to ease integration and present reports inside your pull request page.",
          "anchor": "test-your-database-code-in-ci-cd",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/ca6047c422914540ad697382c60ac3a3",
          "_highlightResult": {
            "title": {
              "value": "Test Your Database Code In CI/CD",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "If you have unit or integration tests running as part of your CI/CD which interact with a database, you can get a report summarizing your database interactions efficiency, issues and the steps required to fix them.\n\nFor your convenience we offer an SDK and GitHub Workflows, to ease integration and present reports inside your pull request page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "76d77b6336ef4d5294c2d016fb928bae",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Database Machine Metrics",
          "body": "You can connect Metis to your database machine in order to observe, analyze and get insights about your the efficiency of your machine.\n\nWhen changes in efficiency are detected, Metis can point out what caused the change, whether a new sub-optimal SQL Command read a large number of table rows and hurt the CPU Usage, or a frequently accessed table grew and an Index creation is required to deal with the new volume.",
          "anchor": "database-machine-metrics",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/76d77b6336ef4d5294c2d016fb928bae",
          "_highlightResult": {
            "title": {
              "value": "Database Machine Metrics",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "You can connect Metis to your database machine in order to observe, analyze and get insights about your the efficiency of your machine.\n\nWhen changes in efficiency are detected, Metis can point out what caused the change, whether a new sub-optimal SQL Command read a large number of table rows and hurt the CPU Usage, or a frequently accessed table grew and an Index creation is required to deal with the new volume.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TZoFj1LMrNvwNbDJ5qYb",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "66818b429ba643bf839a79aba612723f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production Observability",
          "body": "Metis offers two ways to observe your production database in order to analyze performance.\n\nProduction Metadata Collector (PMC)\n\nFor those who don't want to install extra SDKs in their production server, we offer another solution. \n\nBy setting up the PMC, you enable Metis to collect metadata such as the general structure, usage and statistics of the production database. Metis can then be configured to simulate  how different SQL Commands would run in production without affecting production performance, or running the risk of exposing production data.",
          "anchor": "production-observability",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/66818b429ba643bf839a79aba612723f",
          "_highlightResult": {
            "title": {
              "value": "Production Observability",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis offers two ways to observe your production database in order to analyze performance.\n\nProduction Metadata Collector (PMC)\n\nFor those who don't want to install extra SDKs in their production server, we offer another solution. \n\nBy setting up the PMC, you enable Metis to collect metadata such as the general structure, usage and statistics of the production database. Metis can then be configured to simulate  how different SQL Commands would run in production without affecting production performance, or running the risk of exposing production data.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Zxv2KTx0tzoKTkRidHhU",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "545ebe9a3ed142ea90f87cc959a7f9bc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Install Metis SDK",
          "body": "Installing our SDK in your production server enables Metis to collect all relevant data required to analyze and understand how your database perform in production.\n\nMetis does not collect sensitive data like the parameters in which sql commands ran with, or the values within the returned rows from a query run.\n\nProduction Metadata Collector (PMC)\n\nFor those who don't want to install extra SDKs in their production server, we offer another solution. \n\nBy setting up the PMC, you enable Metis to collect metadata such as the general structure, usage and statistics of the production database. Metis can then be configured to simulate  how different SQL Commands would run in production without affecting production performance, or running the risk of exposing production data.\n\nFor better analysis of your production database we recommend installing the SDK, as it gives much more accurate results.",
          "anchor": "install-metis-sdk",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/545ebe9a3ed142ea90f87cc959a7f9bc",
          "_highlightResult": {
            "title": {
              "value": "Install Metis SDK",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Installing our SDK in your production server enables Metis to collect all relevant data required to analyze and understand how your database perform in production.\n\nMetis does not collect sensitive data like the parameters in which sql commands ran with, or the values within the returned rows from a query run.\n\nProduction Metadata Collector (PMC)\n\nFor those who don't want to install extra SDKs in their production server, we offer another solution. \n\nBy setting up the PMC, you enable Metis to collect metadata such as the general structure, usage and statistics of the production database. Metis can then be configured to simulate  how different SQL Commands would run in production without affecting production performance, or running the risk of exposing production data.\n\nFor better analysis of your production database we recommend installing the SDK, as it gives much more accurate results.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TZoFj1LMrNvwNbDJ5qYb",
          "page": "d57DKzmNUioEFHM0nNSi",
          "section": "1bda3cefb4aa40218d904d22d844957c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Schema Migration Guard",
          "body": "As developers, we know how intimidating it can be to change your database schema while being live.\n\nHaving a PMC configured enables Metis to detect upcoming changes in database schemas that can potentially break production. Metis then alerts you, and gives you the solution to remediate the issue.",
          "anchor": "schema-migration-guard",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/d57DKzmNUioEFHM0nNSi/1bda3cefb4aa40218d904d22d844957c",
          "_highlightResult": {
            "title": {
              "value": "Schema Migration Guard",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "As developers, we know how intimidating it can be to change your database schema while being live.\n\nHaving a PMC configured enables Metis to detect upcoming changes in database schemas that can potentially break production. Metis then alerts you, and gives you the solution to remediate the issue.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "efd3580a094f4bf7a88cb07bc9bad9af",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Great Developer Experience (DX)",
          "body": "Metis CLI was built by developers for developers. To provide a great DX the CLI has: \n\nAutocomplete - So you won't need to remember the commands and their parameters\nBuilt-in help. Run doc(command-name)  to see a detailed explanation, with examples, of how to use each command. \nColors and text boxes for easy reading.\nSeamless integration with the web app for a deeper analysis and great visualization. ",
          "anchor": "great-developer-experience-dx",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/efd3580a094f4bf7a88cb07bc9bad9af",
          "_highlightResult": {
            "title": {
              "value": "Great Developer Experience (DX)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis CLI was built by developers for developers. To provide a great DX the CLI has: \n\nAutocomplete - So you won't need to remember the commands and their parameters\nBuilt-in help. Run doc(command-name)  to see a detailed explanation, with examples, of how to use each command. \nColors and text boxes for easy reading.\nSeamless integration with the web app for a deeper analysis and great visualization. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "tPaXL6p602vf3EBtBNqu",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "b83312c19d4349daa9f7130e36a09bd3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "\"Classic\" CLI Mode",
          "body": "The CLI can be used in a \"classic\" CLI mode , running the commands with parameters, seperated by spaces. \n\nFor ex. adding a new connection to a Postgres server\n\nmetis add-connection \"connection-name\" \"postgres\" \\\n\"postgresql://user:password@1.2.3.4:5432/database-name\" \\\n\"connection-description\"",
          "anchor": "classic-cli-mode",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/b83312c19d4349daa9f7130e36a09bd3",
          "_highlightResult": {
            "title": {
              "value": "\"Classic\" CLI Mode",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The CLI can be used in a \"classic\" CLI mode , running the commands with parameters, seperated by spaces. \n\nFor ex. adding a new connection to a Postgres server\n\nmetis add-connection \"connection-name\" \"postgres\" \\\n\"postgresql://user:password@1.2.3.4:5432/database-name\" \\\n\"connection-description\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "a6081384df2f4087b0194f0abcb60e39",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Main Features",
          "body": "Connect to a Postgres DB, MySQL is coming soon. \nAnalyze a query. The CLI uses the execution plan and schema to generate insights and recommendations. \nMonitor the DB using built-in useful commands\nIndex Analysis - coming soon\n\nThe CLI is a great solution for ad-hoc analysis of queries. Metis Web App is the recommended solution for analyzing the quality of a new version of the application. ",
          "anchor": "main-features",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/a6081384df2f4087b0194f0abcb60e39",
          "_highlightResult": {
            "title": {
              "value": "Main Features",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Connect to a Postgres DB, MySQL is coming soon. \nAnalyze a query. The CLI uses the execution plan and schema to generate insights and recommendations. \nMonitor the DB using built-in useful commands\nIndex Analysis - coming soon\n\nThe CLI is a great solution for ad-hoc analysis of queries. Metis Web App is the recommended solution for analyzing the quality of a new version of the application. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "tPaXL6p602vf3EBtBNqu",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "63af91f904cb4ca4a56da0b337fd60a8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Getting Started with Metis CLI",
          "body": "",
          "anchor": "getting-started-with-metis-cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/63af91f904cb4ca4a56da0b337fd60a8",
          "_highlightResult": {
            "title": {
              "value": "Getting Started with Metis CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "4f9ddc45c2c5447b9b533dbf19528114",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI Mode or REPL Mode",
          "body": "The CLI can work in two modes: \n1. A classic single-line CLI command \n2. An interactive CLI\n\nThe single-line CLI was built for automation, a single command contains all the necessary information to execute. While the interactive mode allows the user to explore the data. ",
          "anchor": "cli-mode-or-repl-mode",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/4f9ddc45c2c5447b9b533dbf19528114",
          "_highlightResult": {
            "title": {
              "value": "CLI Mode or REPL Mode",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The CLI can work in two modes: \n1. A classic single-line CLI command \n2. An interactive CLI\n\nThe single-line CLI was built for automation, a single command contains all the necessary information to execute. While the interactive mode allows the user to explore the data. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "402304901c954e73b9604d4245b08bd8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "About",
          "body": "Analyze query performance.\nView the schema. Detect problems and violations of best practices\nConnect to an AWS RDS to view its configuration and performance\nConnect to an AWS RDS to view the query log\n\nThe current version of the Metis CLI supports only Postgres 12 or higher. MySQL 8 support is coming soon. ",
          "anchor": "about",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/402304901c954e73b9604d4245b08bd8",
          "_highlightResult": {
            "title": {
              "value": "About",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Analyze query performance.\nView the schema. Detect problems and violations of best practices\nConnect to an AWS RDS to view its configuration and performance\nConnect to an AWS RDS to view the query log\n\nThe current version of the Metis CLI supports only Postgres 12 or higher. MySQL 8 support is coming soon. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "tPaXL6p602vf3EBtBNqu",
          "page": "cSNKfsuVfNh0UoWGfYf7",
          "section": "0e85b6f8ebeb4febb0cdfe947f8d9829",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL Mode",
          "body": "step 1 - open the REPL CLI  \n\nTo open Metis CLI in REPL mode, just call the CLI\n\nStep 2: run the command as a function, parameters are separated by commas. \n\naddConnection(\"connection-name\", \"postgres\", \"postgresql://user:password@1.2.3.4:5432/database-name\",  \"connection-description\")",
          "anchor": "repl-mode",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cSNKfsuVfNh0UoWGfYf7/0e85b6f8ebeb4febb0cdfe947f8d9829",
          "_highlightResult": {
            "title": {
              "value": "REPL Mode",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "step 1 - open the REPL CLI  \n\nTo open Metis CLI in REPL mode, just call the CLI\n\nStep 2: run the command as a function, parameters are separated by commas. \n\naddConnection(\"connection-name\", \"postgres\", \"postgresql://user:password@1.2.3.4:5432/database-name\",  \"connection-description\")",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "cGXA3suw6W5sHplXfROF",
          "section": "d538583796044763bfb5a3b9444c6b1d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF/d538583796044763bfb5a3b9444c6b1d",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "cGXA3suw6W5sHplXfROF",
          "section": "79aa1ccbb7504401a0ffb4a0fb248b3f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF/79aa1ccbb7504401a0ffb4a0fb248b3f",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "cGXA3suw6W5sHplXfROF",
          "section": "6968153088fd4629b4d842e2855bbf05",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF/6968153088fd4629b4d842e2855bbf05",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "cGXA3suw6W5sHplXfROF",
          "section": "4648ab5282424a38bcd5f6a908209011",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nCreate a file named tracer.ts, which will contain your Metis setup code.",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF/4648ab5282424a38bcd5f6a908209011",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nCreate a file named tracer.ts, which will contain your Metis setup code.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "cGXA3suw6W5sHplXfROF",
          "section": "27155a533e634f6897bcb9a6d42d18be",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF/27155a533e634f6897bcb9a6d42d18be",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "cGXA3suw6W5sHplXfROF",
          "section": "07df8a238b5d4dddaca308bc908a174a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "TypeScript",
          "body": "import opentelemetry from '@opentelemetry/api';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { Resource } from '@opentelemetry/resources';\nimport {\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { AsyncHooksContextManager } from '@opentelemetry/context-async-hooks';\nimport {\n  createFilter,\n  getPrismaInstrumentation,\n  markSpan,\n  getMetisExporter,\n} from '@metis-data/prisma-interceptor';\nimport { IncomingMessage } from 'http';\n// @ts-ignore\nBigInt.prototype.toJSON = function () {\n    return this.toString();\n};\nexport const StartMetisInstrumentation = (\n  apiKey: string = process.env.METIS_API_KEY,\n  serviceName: string = process.env.METIS_SERVICE_NAME,\n  serviceVersion: string = process.env.npm_package_version,\n  environmentName: string = process.env.METIS_ENVIRONMENT,\n  enabled: boolean = process.env.METIS_DISABLED === 'false') => {\n  const tracerProvider = new BasicTracerProvider({\n    resource: new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n      [SemanticResourceAttributes.SERVICE_VERSION]: serviceVersion,\n    }),\n  });\n  const metisExporter = getMetisExporter(apiKey, environmentName, enabled);\n  tracerProvider.addSpanProcessor(new BatchSpanProcessor(metisExporter));\n  const contextManager = new AsyncHooksContextManager().enable();\n  opentelemetry.context.setGlobalContextManager(contextManager);\n  tracerProvider.register();\n  const urlsFilter = createFilter([/favicon.ico/]);\n  registerInstrumentations({\n    instrumentations: [\n      new HttpInstrumentation({\n        ignoreOutgoingRequestHook: () => true,\n        ignoreIncomingRequestHook: (request: IncomingMessage) => {\n          return urlsFilter(request.url);\n        },\n        requestHook: markSpan,\n      }),\n      getPrismaInstrumentation(),\n    ],\n  });\n};",
          "anchor": "typescript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/cGXA3suw6W5sHplXfROF/07df8a238b5d4dddaca308bc908a174a",
          "_highlightResult": {
            "title": {
              "value": "TypeScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "import opentelemetry from '@opentelemetry/api';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { Resource } from '@opentelemetry/resources';\nimport {\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { AsyncHooksContextManager } from '@opentelemetry/context-async-hooks';\nimport {\n  createFilter,\n  getPrismaInstrumentation,\n  markSpan,\n  getMetisExporter,\n} from '@metis-data/prisma-interceptor';\nimport { IncomingMessage } from 'http';\n// @ts-ignore\nBigInt.prototype.toJSON = function () {\n    return this.toString();\n};\nexport const StartMetisInstrumentation = (\n  apiKey: string = process.env.METIS_API_KEY,\n  serviceName: string = process.env.METIS_SERVICE_NAME,\n  serviceVersion: string = process.env.npm_package_version,\n  environmentName: string = process.env.METIS_ENVIRONMENT,\n  enabled: boolean = process.env.METIS_DISABLED === 'false') => {\n  const tracerProvider = new BasicTracerProvider({\n    resource: new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n      [SemanticResourceAttributes.SERVICE_VERSION]: serviceVersion,\n    }),\n  });\n  const metisExporter = getMetisExporter(apiKey, environmentName, enabled);\n  tracerProvider.addSpanProcessor(new BatchSpanProcessor(metisExporter));\n  const contextManager = new AsyncHooksContextManager().enable();\n  opentelemetry.context.setGlobalContextManager(contextManager);\n  tracerProvider.register();\n  const urlsFilter = createFilter([/favicon.ico/]);\n  registerInstrumentations({\n    instrumentations: [\n      new HttpInstrumentation({\n        ignoreOutgoingRequestHook: () => true,\n        ignoreIncomingRequestHook: (request: IncomingMessage) => {\n          return urlsFilter(request.url);\n        },\n        requestHook: markSpan,\n      }),\n      getPrismaInstrumentation(),\n    ],\n  });\n};",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QKsYmhSldbNAhU0i2rOD",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "section": "initial_bqXPRoFRGu3Yr7G3he8d_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The guide demonstrates how to create an AWS IAM User which will be used by Metis in order to collect metrics from an AWS RDS. These metrics are used by Metis' algorithms to find, understand and fix database performance issues.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d/initial_bqXPRoFRGu3Yr7G3he8d_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The guide demonstrates how to create an AWS IAM User which will be used by Metis in order to collect metrics from an AWS RDS. These metrics are used by Metis' algorithms to find, understand and fix database performance issues.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QKsYmhSldbNAhU0i2rOD",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "section": "e5abef2ec7074635915ab943fbffb569",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Connect CLI to created AWS User",
          "body": "Open Metis-CLI in REPL Mode, type aws_configure() and enter the Access Key ID,  Secret Access Key and Region from the previous step.",
          "anchor": "3.-connect-cli-to-created-aws-user",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d/e5abef2ec7074635915ab943fbffb569",
          "_highlightResult": {
            "title": {
              "value": "3. Connect CLI to created AWS User",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Metis-CLI in REPL Mode, type aws_configure() and enter the Access Key ID,  Secret Access Key and Region from the previous step.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QKsYmhSldbNAhU0i2rOD",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "section": "d9d3cefa305c43acbf24013b7c304401",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Create IAM User",
          "body": "Create an IAM User, name it Metis, and select Access Key credentials type.\n\n2. Attach MetisPolicy created in the previous step.\n\n3. Clicking 'Next' until you reach the last step and copy the Access Key ID and Secret Access Key.",
          "anchor": "2.-create-iam-user",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d/d9d3cefa305c43acbf24013b7c304401",
          "_highlightResult": {
            "title": {
              "value": "2. Create IAM User",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Create an IAM User, name it Metis, and select Access Key credentials type.\n\n2. Attach MetisPolicy created in the previous step.\n\n3. Clicking 'Next' until you reach the last step and copy the Access Key ID and Secret Access Key.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QKsYmhSldbNAhU0i2rOD",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "section": "aa32ce0ca04f44f58f7befe5af62b5b2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "4. Test your Connection",
          "body": "Open Metis-CLI and type to test the AWS RDS integration.\n\naws_rds_get_metrics('rds-name', 'CPUUtilization', 1, 60)",
          "anchor": "4.-test-your-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d/aa32ce0ca04f44f58f7befe5af62b5b2",
          "_highlightResult": {
            "title": {
              "value": "4. Test your Connection",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Metis-CLI and type to test the AWS RDS integration.\n\naws_rds_get_metrics('rds-name', 'CPUUtilization', 1, 60)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QKsYmhSldbNAhU0i2rOD",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "section": "5c8f68c474f84ff6bc4afaf5b3101221",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Set Up IAM Policy",
          "body": "To start, go to Create IAM policy, name the new policy MetisPolicy, select JSON and paste the following policy:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\":\n        [\n            {\n                \"Action\": [\n                    \"cloudwatch:GetMetricStatistics\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"*\"\n            },\n            {\n                \"Action\": [\n                    \"rds:DescribeDBParameters\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"arn:aws:rds:*:*:pg:*\"\n            },\n            {\n                \"Action\": [\n                    \"rds:DescribeDBClusters\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"arn:aws:rds:*:*:cluster:*\"\n            }\n        ]\n}\n\nThis policy grants Read Only access to the following resources-\n\nRDS metadata.\nCloudWatch metrics.",
          "anchor": "1.-set-up-iam-policy",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d/5c8f68c474f84ff6bc4afaf5b3101221",
          "_highlightResult": {
            "title": {
              "value": "1. Set Up IAM Policy",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To start, go to Create IAM policy, name the new policy MetisPolicy, select JSON and paste the following policy:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\":\n        [\n            {\n                \"Action\": [\n                    \"cloudwatch:GetMetricStatistics\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"*\"\n            },\n            {\n                \"Action\": [\n                    \"rds:DescribeDBParameters\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"arn:aws:rds:*:*:pg:*\"\n            },\n            {\n                \"Action\": [\n                    \"rds:DescribeDBClusters\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"arn:aws:rds:*:*:cluster:*\"\n            }\n        ]\n}\n\nThis policy grants Read Only access to the following resources-\n\nRDS metadata.\nCloudWatch metrics.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QKsYmhSldbNAhU0i2rOD",
          "page": "bqXPRoFRGu3Yr7G3he8d",
          "section": "39693f935676449c8bef92285855da35",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Congratulations! ",
          "body": "Your AWS RDS database is now connected to Metis.",
          "anchor": "congratulations",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/bqXPRoFRGu3Yr7G3he8d/39693f935676449c8bef92285855da35",
          "_highlightResult": {
            "title": {
              "value": "Congratulations! ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Your AWS RDS database is now connected to Metis.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "a24I6tPnrpHJvFvmdrS1",
          "section": "a06d7a6c156342679a2485c78cc4dd9b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Developers can add their own custom tags to spans. For example, a developer can add a tag with the branch name and commit hash so the span could be correlated to a specific version of your application.\n\nThe developer can add a tag from code (see documentation in each language specific SDK), or using environment variables.\n\nTo add a tag using environment variables you must export a variable with a name that starts with METIS_TAG. For example: \n\nexport METIS_TAG_PR=$(git log -1 --format=\"%H\")\n\nThe span will have an additional tag named pr. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/a24I6tPnrpHJvFvmdrS1/a06d7a6c156342679a2485c78cc4dd9b",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Developers can add their own custom tags to spans. For example, a developer can add a tag with the branch name and commit hash so the span could be correlated to a specific version of your application.\n\nThe developer can add a tag from code (see documentation in each language specific SDK), or using environment variables.\n\nTo add a tag using environment variables you must export a variable with a name that starts with METIS_TAG. For example: \n\nexport METIS_TAG_PR=$(git log -1 --format=\"%H\")\n\nThe span will have an additional tag named pr. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "fe322ecaa98248d089d4212ae4d2b8af",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "indexAnalysis (static-analysis)",
          "body": "run static analysis on table",
          "anchor": "indexanalysis-static-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/fe322ecaa98248d089d4212ae4d2b8af",
          "_highlightResult": {
            "title": {
              "value": "indexAnalysis (static-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "run static analysis on table",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "fddaa11a96aa485b84f40c6014de9bcb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - the name of the scenario to run, required",
          "anchor": "arguments-32",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/fddaa11a96aa485b84f40c6014de9bcb",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - the name of the scenario to run, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "f9f145e279834b2f8dfa844ef5d3cfe7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "connect (connection)",
          "body": "The 'connect' action connects to a given connection by name. If the connection exists, the tables, and their additional information would be pulled from the database. The connection is not actually kept open. A connection will be made whenever a request to the database is made.",
          "anchor": "connect-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/f9f145e279834b2f8dfa844ef5d3cfe7",
          "_highlightResult": {
            "title": {
              "value": "connect (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The 'connect' action connects to a given connection by name. If the connection exists, the tables, and their additional information would be pulled from the database. The connection is not actually kept open. A connection will be made whenever a request to the database is made.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "f66c0d1d2dcd406b96545203cf20f2c6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listConnections (connection)",
          "body": "show the existing connections",
          "anchor": "listconnections-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/f66c0d1d2dcd406b96545203cf20f2c6",
          "_highlightResult": {
            "title": {
              "value": "listConnections (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "show the existing connections",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "f5c3903c784f4d65b3c251eb0e7a2232",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "mode (string) - the mode, one of: [pretty, json, silent], default: \"pretty\", required",
          "anchor": "arguments-18",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/f5c3903c784f4d65b3c251eb0e7a2232",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "mode (string) - the mode, one of: [pretty, json, silent], default: \"pretty\", required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "f31328e7d26048c7a714a75d468cd723",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descRule (describe)",
          "body": "describe a rule by given id",
          "anchor": "descrule-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/f31328e7d26048c7a714a75d468cd723",
          "_highlightResult": {
            "title": {
              "value": "descRule (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describe a rule by given id",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "eeb39f5197be41cc802e6af5f6f682af",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "config (repl)",
          "body": "prints the current configuration",
          "anchor": "config-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/eeb39f5197be41cc802e6af5f6f682af",
          "_highlightResult": {
            "title": {
              "value": "config (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the current configuration",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ed34cb2d2b034215813f22960b881e96",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "withProgress (repl)",
          "body": "enables printing of progress bars",
          "anchor": "withprogress-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ed34cb2d2b034215813f22960b881e96",
          "_highlightResult": {
            "title": {
              "value": "withProgress (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "enables printing of progress bars",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ed1fdff5f9234f5ca7028387102253bd",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "updateConnectionName (connection)",
          "body": "Change the name of a given connection",
          "anchor": "updateconnectionname-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ed1fdff5f9234f5ca7028387102253bd",
          "_highlightResult": {
            "title": {
              "value": "updateConnectionName (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Change the name of a given connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ece74300757c4ea28a30b35c3d8ab3b6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "logo (repl)",
          "body": "prints the logo",
          "anchor": "logo-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ece74300757c4ea28a30b35c3d8ab3b6",
          "_highlightResult": {
            "title": {
              "value": "logo (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the logo",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ec61f32c22e4468ab43040014f5ac6ba",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "testConnection (connection)",
          "body": "test the given connection",
          "anchor": "testconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ec61f32c22e4468ab43040014f5ac6ba",
          "_highlightResult": {
            "title": {
              "value": "testConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "test the given connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "e5c4105fbb55414596531d502f0bcb6f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "name (string) - the name of the updated connection\ntype (string) - the type of the updated connection\nusername (string) - the user name for the updated connection\npassword (string) - the password for the updated connection\nhost (string) - the host for the updated connection\nport (number) - the port for the updated connection\ndescription (string) - the updated connetion description",
          "anchor": "options",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/e5c4105fbb55414596531d502f0bcb6f",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - the name of the updated connection\ntype (string) - the type of the updated connection\nusername (string) - the user name for the updated connection\npassword (string) - the password for the updated connection\nhost (string) - the host for the updated connection\nport (number) - the port for the updated connection\ndescription (string) - the updated connetion description",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "e0fda6641dc94f5f8e3b70cc9a95170c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "path (string) - path to macro file, required",
          "anchor": "arguments-29",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/e0fda6641dc94f5f8e3b70cc9a95170c",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "path (string) - path to macro file, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "df0195cf5b1b445bb4596591a7bb3887",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "generateDocs (repl)",
          "body": "generate markdown documentation file from all actions",
          "anchor": "generatedocs-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/df0195cf5b1b445bb4596591a7bb3887",
          "_highlightResult": {
            "title": {
              "value": "generateDocs (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "generate markdown documentation file from all actions",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "de506ed606eb49f48e030b207b564e80",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "args (array) - the cli input, default: [], optional",
          "anchor": "arguments-13",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/de506ed606eb49f48e030b207b564e80",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "args (array) - the cli input, default: [], optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ddea4d8b62764a8a8771f561bd9c0100",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
          "anchor": "options-4",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ddea4d8b62764a8a8771f561bd9c0100",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "dc750ad5f97146fab47897fe8c92fed6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-4",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/dc750ad5f97146fab47897fe8c92fed6",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "dc22c0b31f96424e853293ebfd2741d6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "twoPartName (string) - name of the database and table connected with a dot, required",
          "anchor": "arguments-12",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/dc22c0b31f96424e853293ebfd2741d6",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "twoPartName (string) - name of the database and table connected with a dot, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "daa4cff7d8b14fdaa6a65dc7973c1c81",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "testScenario (test)",
          "body": "run a scneario",
          "anchor": "testscenario-test",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/daa4cff7d8b14fdaa6a65dc7973c1c81",
          "_highlightResult": {
            "title": {
              "value": "testScenario (test)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "run a scneario",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d68d88faa2a94dbeaf3b72f561be512d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "actionName (string) - the name of the action to print, required",
          "anchor": "arguments-27",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d68d88faa2a94dbeaf3b72f561be512d",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "actionName (string) - the name of the action to print, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d4fe26a95f624b4fbd8816a8f8814add",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "resetLogCollector (logs)",
          "body": "Clear all logs from log file",
          "anchor": "resetlogcollector-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d4fe26a95f624b4fbd8816a8f8814add",
          "_highlightResult": {
            "title": {
              "value": "resetLogCollector (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Clear all logs from log file",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d437ee346e434fa7a3fab215d862e1a7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "tableName (string) - table name, required",
          "anchor": "arguments-34",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d437ee346e434fa7a3fab215d862e1a7",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "tableName (string) - table name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d4215809b13944699f8349628fcee29c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listFunctions (query-analysis)",
          "body": "Show the User Defined Functions (UDF) in the DB",
          "anchor": "listfunctions-query-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d4215809b13944699f8349628fcee29c",
          "_highlightResult": {
            "title": {
              "value": "listFunctions (query-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Show the User Defined Functions (UDF) in the DB",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d3c0735ea93b47f7ad67e47b702b7aba",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nupdateConnectionName(\"old-connection-name\", \"new-connection-name\")\n\nShell\n\nmetis update-connection-name \"old-connection-name\" \"new-connection-name\"",
          "anchor": "usage-4",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d3c0735ea93b47f7ad67e47b702b7aba",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nupdateConnectionName(\"old-connection-name\", \"new-connection-name\")\n\nShell\n\nmetis update-connection-name \"old-connection-name\" \"new-connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d1f3bde33b46466fa80368d66e8353e8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ntempConnect(\"Server=myServer.com;Database=myDB;User Id=myUser;Password=myPass;\", \"mssql\")\n\nShell\n\nmetis temp-connect \"Server=myServer.com;Database=myDB;User Id=myUser;Password=myPass;\" \"mssql\"",
          "anchor": "usage-3",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d1f3bde33b46466fa80368d66e8353e8",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ntempConnect(\"Server=myServer.com;Database=myDB;User Id=myUser;Password=myPass;\", \"mssql\")\n\nShell\n\nmetis temp-connect \"Server=myServer.com;Database=myDB;User Id=myUser;Password=myPass;\" \"mssql\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "d17570cd5aad4cce904484bfc6d09ce1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nparse(\"SELECT * FROM table\").\n\nShell\n\nmetis parse \"SELECT * FROM table\" \n\nJavascript\n\nparse(\"SELECT * FROM table\").type(\"mssql\")\n\nShell\n\nmetis parse \"SELECT * FROM table\" --type \"mssql\"\n\nJavascript\n\nparse(\"SELECT * FROM table\").type(\"postgres\")\n\nShell\n\nmetis parse \"SELECT * FROM table\" --type \"postgres\"",
          "anchor": "usage-11",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/d17570cd5aad4cce904484bfc6d09ce1",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nparse(\"SELECT * FROM table\").\n\nShell\n\nmetis parse \"SELECT * FROM table\" \n\nJavascript\n\nparse(\"SELECT * FROM table\").type(\"mssql\")\n\nShell\n\nmetis parse \"SELECT * FROM table\" --type \"mssql\"\n\nJavascript\n\nparse(\"SELECT * FROM table\").type(\"postgres\")\n\nShell\n\nmetis parse \"SELECT * FROM table\" --type \"postgres\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ccbd5948591742868e559ea565b711ab",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "deleteConnection (connection)",
          "body": "remove a given connection from file",
          "anchor": "deleteconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ccbd5948591742868e559ea565b711ab",
          "_highlightResult": {
            "title": {
              "value": "deleteConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "remove a given connection from file",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "cba6ffcc50274713967f44225eceeee8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "connectPG (connection)",
          "body": "connects to 'aws_pg'",
          "anchor": "connectpg-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/cba6ffcc50274713967f44225eceeee8",
          "_highlightResult": {
            "title": {
              "value": "connectPG (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connects to 'aws_pg'",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "cb51fcdce0ca4603848f89147d84c6e6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nsqlCmd(\"SELECT * FROM table\").\n\nShell\n\nmetis sql-cmd \"SELECT * FROM table\" ",
          "anchor": "usage-15",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/cb51fcdce0ca4603848f89147d84c6e6",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nsqlCmd(\"SELECT * FROM table\").\n\nShell\n\nmetis sql-cmd \"SELECT * FROM table\" ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ca5e4ca277314ceaadb504b6269eccf2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "getPlan (query-analysis)",
          "body": "get query plan",
          "anchor": "getplan-query-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ca5e4ca277314ceaadb504b6269eccf2",
          "_highlightResult": {
            "title": {
              "value": "getPlan (query-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "get query plan",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c9d11f70b75f45548c9ca6756da2f08d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "path (string) - file path to write the markdown, required",
          "anchor": "arguments-28",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c9d11f70b75f45548c9ca6756da2f08d",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "path (string) - file path to write the markdown, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c921ea731b1542b78f0d8e544ab8fef1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndescQuery(\"example-package\", \"example-query\").\n\nShell\n\nmetis desc-query \"example-package\" \"example-query\" ",
          "anchor": "usage-6",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c921ea731b1542b78f0d8e544ab8fef1",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndescQuery(\"example-package\", \"example-query\").\n\nShell\n\nmetis desc-query \"example-package\" \"example-query\" ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c7ea3d0278e64640a6a1e1d21d65c753",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "key (string) - key name, required\nvalue (any) - the value, can be of any type, required",
          "anchor": "arguments-15",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c7ea3d0278e64640a6a1e1d21d65c753",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "key (string) - key name, required\nvalue (any) - the value, can be of any type, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c56bc96cc01346b48ac1184a9dd1c9de",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndescPackage(\"example-package\")\n\nShell\n\nmetis desc-package \"example-package\"",
          "anchor": "usage-5",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c56bc96cc01346b48ac1184a9dd1c9de",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndescPackage(\"example-package\")\n\nShell\n\nmetis desc-package \"example-package\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c50a563e15dd4b28b228634dc440c911",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nformat(\"SELECT * FROM table\").\n\nShell\n\nmetis format \"SELECT * FROM table\" \n\nJavascript\n\nformat(\"SELECT * FROM table\").type(\"mssql\")\n\nShell\n\nmetis format \"SELECT * FROM table\" --type \"mssql\"\n\nJavascript\n\nformat(\"SELECT * FROM table\").type(\"postgres\")\n\nShell\n\nmetis format \"SELECT * FROM table\" --type \"postgres\"",
          "anchor": "usage-10",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c50a563e15dd4b28b228634dc440c911",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nformat(\"SELECT * FROM table\").\n\nShell\n\nmetis format \"SELECT * FROM table\" \n\nJavascript\n\nformat(\"SELECT * FROM table\").type(\"mssql\")\n\nShell\n\nmetis format \"SELECT * FROM table\" --type \"mssql\"\n\nJavascript\n\nformat(\"SELECT * FROM table\").type(\"postgres\")\n\nShell\n\nmetis format \"SELECT * FROM table\" --type \"postgres\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c296b72495d74363b21f68324288c0e9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descMetric (describe)",
          "body": "describes a given metric",
          "anchor": "descmetric-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c296b72495d74363b21f68324288c0e9",
          "_highlightResult": {
            "title": {
              "value": "descMetric (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describes a given metric",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c1fff4389440412f8b81c9a485d32ae8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "parse (query)",
          "body": "parse a query with a given type and return an object",
          "anchor": "parse-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c1fff4389440412f8b81c9a485d32ae8",
          "_highlightResult": {
            "title": {
              "value": "parse (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "parse a query with a given type and return an object",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c18941a50935469d868ea1422dd098a9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c18941a50935469d868ea1422dd098a9",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c0250a56841943fcb5b7fd8cb89f2204",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "filterProps (object) - filters to filter the logs",
          "anchor": "options-4",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c0250a56841943fcb5b7fd8cb89f2204",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "filterProps (object) - filters to filter the logs",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "c0028755367a49ab82503b3810032921",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - the name of the new connection, optional\ntype (string) - the type of the connection, optional\nconnectionString (string) - the connection string, optional\ndescription (string) - the connetion description, optional",
          "anchor": "arguments",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/c0028755367a49ab82503b3810032921",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - the name of the new connection, optional\ntype (string) - the type of the connection, optional\nconnectionString (string) - the connection string, optional\ndescription (string) - the connetion description, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "beb0182cceab4faa8a6727a881ea5d4a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "query (string) - the query to format, required",
          "anchor": "arguments-20",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/beb0182cceab4faa8a6727a881ea5d4a",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "query (string) - the query to format, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "be48c49943974cb897a629e7109d31c6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "noProgress (repl)",
          "body": "disable printing of progress bars",
          "anchor": "noprogress-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/be48c49943974cb897a629e7109d31c6",
          "_highlightResult": {
            "title": {
              "value": "noProgress (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "disable printing of progress bars",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "bd448bfdb0c0435ab8caad11268b0345",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nupdateConnectionName(\"old-connection-name\", \"new-connection-name\")\n\nShell\n\nmetis update-connection-name \"old-connection-name\" \"new-connection-name\"",
          "anchor": "usage-4",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/bd448bfdb0c0435ab8caad11268b0345",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nupdateConnectionName(\"old-connection-name\", \"new-connection-name\")\n\nShell\n\nmetis update-connection-name \"old-connection-name\" \"new-connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "bb48a2f26a4e48bdb555c5ba638703bd",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "deleteLogCollector (logs)",
          "body": "Delete log collector",
          "anchor": "deletelogcollector-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/bb48a2f26a4e48bdb555c5ba638703bd",
          "_highlightResult": {
            "title": {
              "value": "deleteLogCollector (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Delete log collector",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ba7e659643da4b60af72b1823a36f07f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descTable (describe)",
          "body": "describes a given table",
          "anchor": "desctable-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ba7e659643da4b60af72b1823a36f07f",
          "_highlightResult": {
            "title": {
              "value": "descTable (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describes a given table",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b9a31964934943b6bf9dd022520a0ca2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "complete (repl)",
          "body": "exits the REPL",
          "anchor": "complete-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b9a31964934943b6bf9dd022520a0ca2",
          "_highlightResult": {
            "title": {
              "value": "complete (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "exits the REPL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b8da5f1c0ec347ada6193d9186ffa4f4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-5",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b8da5f1c0ec347ada6193d9186ffa4f4",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b7e9dd25f9a24c55b4932a9c452280c7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "description (string) - the description of the collector\nconnectionName (string) - the name of the connection to associate with the logs for Silk",
          "anchor": "options-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b7e9dd25f9a24c55b4932a9c452280c7",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "description (string) - the description of the collector\nconnectionName (string) - the name of the connection to associate with the logs for Silk",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b761fdf4b4794b379aac1cac19f33777",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "version (repl)",
          "body": "prints the version",
          "anchor": "version-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b761fdf4b4794b379aac1cac19f33777",
          "_highlightResult": {
            "title": {
              "value": "version (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the version",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b71c025a054d405e9588f5a00601a3cc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "rowNumber (number) - the number of the row that would be used as input of the command, required\ncommandName (string) - the name of the command to run, required",
          "anchor": "arguments-23",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b71c025a054d405e9588f5a00601a3cc",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "rowNumber (number) - the number of the row that would be used as input of the command, required\ncommandName (string) - the name of the command to run, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b61ebd3480104d1eaf7954a67aa959e0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "tableAnalysis (static-analysis)",
          "body": "run static analysis on table",
          "anchor": "tableanalysis-static-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b61ebd3480104d1eaf7954a67aa959e0",
          "_highlightResult": {
            "title": {
              "value": "tableAnalysis (static-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "run static analysis on table",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b2f702e970fe4e3ab981fffdc9ade7e9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Start an add-connection prompt\n\nJavascript\n\naddConnection()\n\nShell\n\nmetis add-connection \n\nAdd a connection with name, type, connection-string and description\n\nJavascript\n\naddConnection(\"localPostgresDB\", \"postgres\", \"postgresql://user:pass@localhost:5432/dbname\", \"Dev Postgres connection\")\n\nShell\n\nmetis add-connection \"localPostgresDB\" \"postgres\" \"postgresql://user:pass@localhost:5432/dbname\" \"Dev Postgres connection\"\n\nJavascript\n\naddConnection(\"mysqlLocalCon\", \"mysql\", \"mysql://root:pass@3.69.95.41:3306/database_name\", \"Dev Mysql connection\")\n\nShell\n\nmetis add-connection \"mysqlLocalCon\" \"mysql\" \"mysql://root:pass@3.69.95.41:3306/database_name\" \"Dev Mysql connection\"",
          "anchor": "usage",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b2f702e970fe4e3ab981fffdc9ade7e9",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Start an add-connection prompt\n\nJavascript\n\naddConnection()\n\nShell\n\nmetis add-connection \n\nAdd a connection with name, type, connection-string and description\n\nJavascript\n\naddConnection(\"localPostgresDB\", \"postgres\", \"postgresql://user:pass@localhost:5432/dbname\", \"Dev Postgres connection\")\n\nShell\n\nmetis add-connection \"localPostgresDB\" \"postgres\" \"postgresql://user:pass@localhost:5432/dbname\" \"Dev Postgres connection\"\n\nJavascript\n\naddConnection(\"mysqlLocalCon\", \"mysql\", \"mysql://root:pass@3.69.95.41:3306/database_name\", \"Dev Mysql connection\")\n\nShell\n\nmetis add-connection \"mysqlLocalCon\" \"mysql\" \"mysql://root:pass@3.69.95.41:3306/database_name\" \"Dev Mysql connection\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "b12e75a1ce5a46c5be3a57477d21d777",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "name (string) - the name of the updated connection\ntype (string) - the type of the updated connection\nusername (string) - the user name for the updated connection\npassword (string) - the password for the updated connection\nhost (string) - the host for the updated connection\nport (number) - the port for the updated connection\ndescription (string) - the updated connetion description",
          "anchor": "options",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/b12e75a1ce5a46c5be3a57477d21d777",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - the name of the updated connection\ntype (string) - the type of the updated connection\nusername (string) - the user name for the updated connection\npassword (string) - the password for the updated connection\nhost (string) - the host for the updated connection\nport (number) - the port for the updated connection\ndescription (string) - the updated connetion description",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "ae5bf7706e1f4e7897fada85ee8bbef1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "query (string) - query to analyze, required",
          "anchor": "arguments-22",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/ae5bf7706e1f4e7897fada85ee8bbef1",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "query (string) - query to analyze, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "abedd480312c4e1785155cc6ffded5cb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "withProgress (repl)",
          "body": "enables printing of progress bars",
          "anchor": "withprogress-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/abedd480312c4e1785155cc6ffded5cb",
          "_highlightResult": {
            "title": {
              "value": "withProgress (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "enables printing of progress bars",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "aa9fcbe464c74e9fad8ffa8c4ce2cf11",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "clientMode (repl)",
          "body": "replace func implementation with a REST client func",
          "anchor": "clientmode-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/aa9fcbe464c74e9fad8ffa8c4ce2cf11",
          "_highlightResult": {
            "title": {
              "value": "clientMode (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "replace func implementation with a REST client func",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "aa1930a2e40c492b82b57a004994efad",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndescTable(\"schema.table-name\")\n\nShell\n\nmetis desc-table \"schema.table-name\"",
          "anchor": "usage-8",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/aa1930a2e40c492b82b57a004994efad",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndescTable(\"schema.table-name\")\n\nShell\n\nmetis desc-table \"schema.table-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a89c337d172246e4ade763de9d1ec7b9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "id (string) - the id of the rule, required\nfacts (object) - an object containing facts, optional",
          "anchor": "arguments-8",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a89c337d172246e4ade763de9d1ec7b9",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "id (string) - the id of the rule, required\nfacts (object) - an object containing facts, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a83077d8d65248818357070811cc3e18",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "viewLogCollector (logs)",
          "body": "view a specific log",
          "anchor": "viewlogcollector-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a83077d8d65248818357070811cc3e18",
          "_highlightResult": {
            "title": {
              "value": "viewLogCollector (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "view a specific log",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a7298ba23f7b4caea67884a68a223e2e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - log collector name, required",
          "anchor": "arguments-15",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a7298ba23f7b4caea67884a68a223e2e",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - log collector name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a58920b3723f4da1b055711e7ba9bba3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "query (string) - query to analyze, required",
          "anchor": "arguments-11",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a58920b3723f4da1b055711e7ba9bba3",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "query (string) - query to analyze, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a52681b7fd1d42bc97e37d99db3d3749",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "tempConnect (connection)",
          "body": "connects to server using connection string, this connection would not be saved",
          "anchor": "tempconnect-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a52681b7fd1d42bc97e37d99db3d3749",
          "_highlightResult": {
            "title": {
              "value": "tempConnect (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connects to server using connection string, this connection would not be saved",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a52271810a98439b8173a7d9d63f7b2d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "indexAnalysis (static-analysis)",
          "body": "run static analysis on table",
          "anchor": "indexanalysis-static-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a52271810a98439b8173a7d9d63f7b2d",
          "_highlightResult": {
            "title": {
              "value": "indexAnalysis (static-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "run static analysis on table",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "a4dd8706a5424699b4552d5469ae62e2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "twoPartName (string) - name of the database and table connected with a dot, required",
          "anchor": "arguments-9",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/a4dd8706a5424699b4552d5469ae62e2",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "twoPartName (string) - name of the database and table connected with a dot, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9c82ebf3191b403584c1443c4e0436ed",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "type (string) - select dialect, default: \"mssql\"",
          "anchor": "options-5",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9c82ebf3191b403584c1443c4e0436ed",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "type (string) - select dialect, default: \"mssql\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9b5e30ba3fff4cf5b5e99d99ac912697",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-19",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9b5e30ba3fff4cf5b5e99d99ac912697",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9b24079e351e49b4b78f2f983011ec10",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "relatedCommand (query)",
          "body": "runs a related command on the last result",
          "anchor": "relatedcommand-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9b24079e351e49b4b78f2f983011ec10",
          "_highlightResult": {
            "title": {
              "value": "relatedCommand (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "runs a related command on the last result",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "993681dcde004a9cba06f47e6c8b41fc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "sqlQuery (string) - regular sql query, required",
          "anchor": "arguments-25",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/993681dcde004a9cba06f47e6c8b41fc",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "sqlQuery (string) - regular sql query, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9854385533d34c01979fc680712693ff",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nlogAnalysis(\"logCollectorName\").restCommandType(\"GET\").minSeverity(\"low\")\n\nShell\n\nmetis log-analysis \"logCollectorName\" --rest-command-type \"GET\" --min-severity \"low\"\n\nJavascript\n\nlogAnalysis(\"logCollectorName\").fromDate(\"2022-01-01T10:38:52.209Z\").minSeverity(\"info\")\n\nShell\n\nmetis log-analysis \"logCollectorName\" --from-date \"2022-01-01T10:38:52.209Z\" --min-severity \"info\"",
          "anchor": "usage-9",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9854385533d34c01979fc680712693ff",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nlogAnalysis(\"logCollectorName\").restCommandType(\"GET\").minSeverity(\"low\")\n\nShell\n\nmetis log-analysis \"logCollectorName\" --rest-command-type \"GET\" --min-severity \"low\"\n\nJavascript\n\nlogAnalysis(\"logCollectorName\").fromDate(\"2022-01-01T10:38:52.209Z\").minSeverity(\"info\")\n\nShell\n\nmetis log-analysis \"logCollectorName\" --from-date \"2022-01-01T10:38:52.209Z\" --min-severity \"info\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "96b1010903354808b88f853cb872b3c4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "connect (connection)",
          "body": "The 'connect' action connects to a given connection by name. If the connection exists, the tables, and their additional information would be pulled from the database. The connection is not actually kept open. A connection will be made whenever a request to the database is made.",
          "anchor": "connect-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/96b1010903354808b88f853cb872b3c4",
          "_highlightResult": {
            "title": {
              "value": "connect (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The 'connect' action connects to a given connection by name. If the connection exists, the tables, and their additional information would be pulled from the database. The connection is not actually kept open. A connection will be made whenever a request to the database is made.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "963f97b1e88d498c874bfdaa6b8a6d9b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "logName (string) - the name of the log file, required\nuuid (string) - the uuid of the log, required",
          "anchor": "arguments-14",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/963f97b1e88d498c874bfdaa6b8a6d9b",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "logName (string) - the name of the log file, required\nuuid (string) - the uuid of the log, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "95a83aa2291d44349c9da990e68c09cf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "indexName (string) - index name, required",
          "anchor": "arguments-33",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/95a83aa2291d44349c9da990e68c09cf",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "indexName (string) - index name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "95981213295e428a887461a298ed3139",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "query (string) - query to analyze , required",
          "anchor": "arguments-10",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/95981213295e428a887461a298ed3139",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "query (string) - query to analyze , required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "951e4810c5fc47c9a92082a94b4a2c37",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "category (string) - select category to show\nsearch (string) - fuzzy search phrase",
          "anchor": "options-9",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/951e4810c5fc47c9a92082a94b4a2c37",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "category (string) - select category to show\nsearch (string) - fuzzy search phrase",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "94613629f30f4689bf5f853fec0d5caf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "disableClientMode (repl)",
          "body": "disable client mode",
          "anchor": "disableclientmode-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/94613629f30f4689bf5f853fec0d5caf",
          "_highlightResult": {
            "title": {
              "value": "disableClientMode (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "disable client mode",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "932aa0bd13564a03bcb86772de22425c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listTestScenarios (test)",
          "body": "show list of test scenarios",
          "anchor": "listtestscenarios-test",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/932aa0bd13564a03bcb86772de22425c",
          "_highlightResult": {
            "title": {
              "value": "listTestScenarios (test)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "show list of test scenarios",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "92f673ad1b4d4a099992ce2b655a3f40",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nsetDefaultConnection(\"connection-name\")\n\nShell\n\nmetis set-default-connection \"connection-name\"",
          "anchor": "usage-3",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/92f673ad1b4d4a099992ce2b655a3f40",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nsetDefaultConnection(\"connection-name\")\n\nShell\n\nmetis set-default-connection \"connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "929f1ab1970d4edcb44a68704765c268",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "addConnection (connection)",
          "body": "add a new connection",
          "anchor": "addconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/929f1ab1970d4edcb44a68704765c268",
          "_highlightResult": {
            "title": {
              "value": "addConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "add a new connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9241fde519084cc4b4dbf3d1c8cb1283",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - the name of the new connection, optional\ntype (string) - the type of the connection, optional\nconnectionString (string) - the connection string, optional\ndescription (string) - the connetion description, optional",
          "anchor": "arguments",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9241fde519084cc4b4dbf3d1c8cb1283",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - the name of the new connection, optional\ntype (string) - the type of the connection, optional\nconnectionString (string) - the connection string, optional\ndescription (string) - the connetion description, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9116bfb05f2d4097af3095a756c1049a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "productionAgentTableSize (production-agent)",
          "body": "Get the tables size between the connection config and its production",
          "anchor": "productionagenttablesize-production-agent",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9116bfb05f2d4097af3095a756c1049a",
          "_highlightResult": {
            "title": {
              "value": "productionAgentTableSize (production-agent)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Get the tables size between the connection config and its production",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "9094f65d2ee646018b17b33f674622ab",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "config (repl)",
          "body": "prints the current configuration",
          "anchor": "config-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/9094f65d2ee646018b17b33f674622ab",
          "_highlightResult": {
            "title": {
              "value": "config (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the current configuration",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "8eb18ced0804440283da12db0b90035f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "expressServer (repl)",
          "body": "start an express server based on the actions",
          "anchor": "expressserver-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/8eb18ced0804440283da12db0b90035f",
          "_highlightResult": {
            "title": {
              "value": "expressServer (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "start an express server based on the actions",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "8deb6cc5b3c04237b1080fab14363e61",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "scenario (scenario)",
          "body": "runs a scenario",
          "anchor": "scenario-scenario",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/8deb6cc5b3c04237b1080fab14363e61",
          "_highlightResult": {
            "title": {
              "value": "scenario (scenario)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "runs a scenario",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "87e63a2c895342bf8285589fca00b17f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listConnections (connection)",
          "body": "show the existing connections",
          "anchor": "listconnections-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/87e63a2c895342bf8285589fca00b17f",
          "_highlightResult": {
            "title": {
              "value": "listConnections (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "show the existing connections",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "87c3101e6b7a48c8922ffe3875169f7c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "tableAnalysisReport (describe)",
          "body": "print a report of available facts",
          "anchor": "tableanalysisreport-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/87c3101e6b7a48c8922ffe3875169f7c",
          "_highlightResult": {
            "title": {
              "value": "tableAnalysisReport (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "print a report of available facts",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "854dec8bcf8b4b0ebfbb337dd414834e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "setApiKey (repl)",
          "body": "add metis api key",
          "anchor": "setapikey-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/854dec8bcf8b4b0ebfbb337dd414834e",
          "_highlightResult": {
            "title": {
              "value": "setApiKey (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "add metis api key",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "852608cf60f1498691b434d5322aeeba",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "welcome (repl)",
          "body": "prints the welcome message",
          "anchor": "welcome-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/852608cf60f1498691b434d5322aeeba",
          "_highlightResult": {
            "title": {
              "value": "welcome (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the welcome message",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "84a035716852482e8a7ecc8acf56b2d6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "printMode (repl)",
          "body": "set the print mode",
          "anchor": "printmode-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/84a035716852482e8a7ecc8acf56b2d6",
          "_highlightResult": {
            "title": {
              "value": "printMode (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "set the print mode",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "81ada32cb4bb4ca58f4acb5cc52baa86",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "tableAnalysisReport (describe)",
          "body": "prints a report of available facts",
          "anchor": "tableanalysisreport-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/81ada32cb4bb4ca58f4acb5cc52baa86",
          "_highlightResult": {
            "title": {
              "value": "tableAnalysisReport (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints a report of available facts",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "81892914634243d08d54302424c09673",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "addLogCollector (logs)",
          "body": "Add a new Log Collector",
          "anchor": "addlogcollector-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/81892914634243d08d54302424c09673",
          "_highlightResult": {
            "title": {
              "value": "addLogCollector (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Add a new Log Collector",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "8162377597a348df8efef03986b3111a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "port (number) - the server port",
          "anchor": "options-8",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/8162377597a348df8efef03986b3111a",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "port (number) - the server port",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "80b52de10206420ebfc144d5bc1b5b3d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "secanrioName (string) - the name of the test scenario, required",
          "anchor": "arguments-35",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/80b52de10206420ebfc144d5bc1b5b3d",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "secanrioName (string) - the name of the test scenario, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "8045fd5545d442d6a58dd73b3167454a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "loadScenario (scenario)",
          "body": "load scenarios and save them to state",
          "anchor": "loadscenario-scenario",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/8045fd5545d442d6a58dd73b3167454a",
          "_highlightResult": {
            "title": {
              "value": "loadScenario (scenario)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "load scenarios and save them to state",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "7ed9fbe8ee914dadbaa81ac0973f7740",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "filterProps (object) - filters to filter the logs\nminDuration (number) - filter logs by duration (EQUALS_OR_HIGHER_THAN)\nfromDate (string) - filter logs by date\ntoDate (string) - filter logs by date\nrestCommandType (enum) - filter logs rest command (GET or POST), values: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"]\ncommandContains (string) - filter log query which contain the word\nminSeverity (enum) - filter log query by severity, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
          "anchor": "options-3",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/7ed9fbe8ee914dadbaa81ac0973f7740",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "filterProps (object) - filters to filter the logs\nminDuration (number) - filter logs by duration (EQUALS_OR_HIGHER_THAN)\nfromDate (string) - filter logs by date\ntoDate (string) - filter logs by date\nrestCommandType (enum) - filter logs rest command (GET or POST), values: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"]\ncommandContains (string) - filter log query which contain the word\nminSeverity (enum) - filter log query by severity, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "7d68a014c12942beab7663e716646ea6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "type (string) - select dialect, default: \"mssql\"",
          "anchor": "options-6",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/7d68a014c12942beab7663e716646ea6",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "type (string) - select dialect, default: \"mssql\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "7d29e3f3b85640fca0d7955daa9a2147",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "deleteConnection (connection)",
          "body": "remove a given connection from file",
          "anchor": "deleteconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/7d29e3f3b85640fca0d7955daa9a2147",
          "_highlightResult": {
            "title": {
              "value": "deleteConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "remove a given connection from file",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "7ad36a4ae30c415e9a32a7c02f461291",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "help (repl)",
          "body": "prints the description of all available functions",
          "anchor": "help-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/7ad36a4ae30c415e9a32a7c02f461291",
          "_highlightResult": {
            "title": {
              "value": "help (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the description of all available functions",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "7a971dc5e6b144e6bfd288045a27ab4a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - log collector name, required",
          "anchor": "arguments-17",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/7a971dc5e6b144e6bfd288045a27ab4a",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - log collector name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "78c1f988d108461d9c61fe023f92c24e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndeleteConnection(\"connection-name\")\n\nShell\n\nmetis delete-connection \"connection-name\"",
          "anchor": "usage-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/78c1f988d108461d9c61fe023f92c24e",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndeleteConnection(\"connection-name\")\n\nShell\n\nmetis delete-connection \"connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "774e20a8c9e341d8bc8a28bafa872881",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "name (string) - log collector name\nsource (string) - the url to load the logs from (uri path/file path/silk)\ndescription (string) - the description of the collector\nconnectionName (string) - the name of the connection to associate with the logs for Silk",
          "anchor": "options-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/774e20a8c9e341d8bc8a28bafa872881",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - log collector name\nsource (string) - the url to load the logs from (uri path/file path/silk)\ndescription (string) - the description of the collector\nconnectionName (string) - the name of the connection to associate with the logs for Silk",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "758210ed1ac0477eb571ef6cf018a6a9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "apiKey (string) - the metis api key value, required",
          "anchor": "arguments-19",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/758210ed1ac0477eb571ef6cf018a6a9",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "apiKey (string) - the metis api key value, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "74edf736d2b746318449916836dc95c4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "sqlCmd (query-analysis)",
          "body": "execute an SQL command",
          "anchor": "sqlcmd-query-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/74edf736d2b746318449916836dc95c4",
          "_highlightResult": {
            "title": {
              "value": "sqlCmd (query-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "execute an SQL command",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "748a5f4c69fe48958ba796971eb2f0c8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "tableName (string) - table name, required",
          "anchor": "arguments-21",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/748a5f4c69fe48958ba796971eb2f0c8",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "tableName (string) - table name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "725b6a9c5807495cae78c7e1198e6036",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "loadMacro (repl)",
          "body": "load a macro from a directory",
          "anchor": "loadmacro-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/725b6a9c5807495cae78c7e1198e6036",
          "_highlightResult": {
            "title": {
              "value": "loadMacro (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "load a macro from a directory",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "70fb0af674f7412092734047b327eaa0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "analyzeQueryByLogID (logs)",
          "body": "Analysis a specific log by id",
          "anchor": "analyzequerybylogid-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/70fb0af674f7412092734047b327eaa0",
          "_highlightResult": {
            "title": {
              "value": "analyzeQueryByLogID (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Analysis a specific log by id",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "704ec33b837c47f4a6f91b6501782bf5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "sqlCmd (query)",
          "body": "run sql command",
          "anchor": "sqlcmd-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/704ec33b837c47f4a6f91b6501782bf5",
          "_highlightResult": {
            "title": {
              "value": "sqlCmd (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "run sql command",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "700724e20d1149389bffd2c2feb3dc4e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listFunctions (query)",
          "body": "Show the User Defined Functions (UDF) in the DB",
          "anchor": "listfunctions-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/700724e20d1149389bffd2c2feb3dc4e",
          "_highlightResult": {
            "title": {
              "value": "listFunctions (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Show the User Defined Functions (UDF) in the DB",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "6c1f79c6828a4bdd9dc494f2e1ff5f89",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "setDefaultConnection (connection)",
          "body": "set the default connection and connects to it",
          "anchor": "setdefaultconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/6c1f79c6828a4bdd9dc494f2e1ff5f89",
          "_highlightResult": {
            "title": {
              "value": "setDefaultConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "set the default connection and connects to it",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "6b236551ae98444f94a12375390bd51c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "getPlan (query-analysis)",
          "body": "get an execution plan for a given query",
          "anchor": "getplan-query-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/6b236551ae98444f94a12375390bd51c",
          "_highlightResult": {
            "title": {
              "value": "getPlan (query-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "get an execution plan for a given query",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "6ae96f227fe74b34a9666e911f2a17e5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndescRule(\"QRY000001\")\n\nShell\n\nmetis desc-rule \"QRY000001\"\n\nJavascript\n\ndescRule(\"QRY000001\", { 'actual-rows-read': 1000000 })\n\nShell\n\nmetis desc-rule \"QRY000001\" '{\"actual-rows-read\":1000000}'",
          "anchor": "usage-7",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/6ae96f227fe74b34a9666e911f2a17e5",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndescRule(\"QRY000001\")\n\nShell\n\nmetis desc-rule \"QRY000001\"\n\nJavascript\n\ndescRule(\"QRY000001\", { 'actual-rows-read': 1000000 })\n\nShell\n\nmetis desc-rule \"QRY000001\" '{\"actual-rows-read\":1000000}'",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "6a456131f2424ce38f92c1e1b450d6f1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nqueryAnalysis(\"SELECT * FROM TableName\")\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\"\n\nClient\n\ncurl -X GET \"http://localhost:3001:3001/query-analysis?query=SELECT%20%2A%20FROM%20TableName\"\n\nJavascript\n\nqueryAnalysis(\"SELECT * FROM TableName\").showPlan(true)\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\" --show-plan\n\nClient\n\ncurl -X GET \"http://localhost:3001:3001/query-analysis?query=SELECT%20%2A%20FROM%20TableName&show-plan=true\"",
          "anchor": "usage-12",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/6a456131f2424ce38f92c1e1b450d6f1",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nqueryAnalysis(\"SELECT * FROM TableName\")\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\"\n\nClient\n\ncurl -X GET \"http://localhost:3001:3001/query-analysis?query=SELECT%20%2A%20FROM%20TableName\"\n\nJavascript\n\nqueryAnalysis(\"SELECT * FROM TableName\").showPlan(true)\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\" --show-plan\n\nClient\n\ncurl -X GET \"http://localhost:3001:3001/query-analysis?query=SELECT%20%2A%20FROM%20TableName&show-plan=true\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "69c49a62e5f64cde8ba68c0272583174",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - log collector name, required",
          "anchor": "arguments-18",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/69c49a62e5f64cde8ba68c0272583174",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - log collector name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "69320af2a14547b1bdd46b891927450c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "runNamedCmd (query)",
          "body": "runs a given query in a given package",
          "anchor": "runnamedcmd-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/69320af2a14547b1bdd46b891927450c",
          "_highlightResult": {
            "title": {
              "value": "runNamedCmd (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "runs a given query in a given package",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "6866dad2900e44988e043f25133f165f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "secanrioName (string) - the name of the scenario test to run, required",
          "anchor": "arguments-36",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/6866dad2900e44988e043f25133f165f",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "secanrioName (string) - the name of the scenario test to run, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "686396db09314a8b94d77010a3979252",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "logAnalysis (logs)",
          "body": "analyze logs",
          "anchor": "loganalysis-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/686396db09314a8b94d77010a3979252",
          "_highlightResult": {
            "title": {
              "value": "logAnalysis (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "analyze logs",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "6230013e0e0947878af1780c55270db8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listTables (describe)",
          "body": "prints the tables list for the current connection",
          "anchor": "listtables-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/6230013e0e0947878af1780c55270db8",
          "_highlightResult": {
            "title": {
              "value": "listTables (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the tables list for the current connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "614770ebe2a04d10b4a85f8233c1f9db",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "metric (string) - name of the metric, required",
          "anchor": "arguments-8",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/614770ebe2a04d10b4a85f8233c1f9db",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metric (string) - name of the metric, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5f753e7329994c57b35554bade2e98b6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descTable (describe)",
          "body": "describes a given table",
          "anchor": "desctable-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5f753e7329994c57b35554bade2e98b6",
          "_highlightResult": {
            "title": {
              "value": "descTable (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describes a given table",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5e29726231d54cfe8e6648aa4749442e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Start an add-connection prompt\n\nJavascript\n\naddConnection()\n\nShell\n\nmetis add-connection \n\nAdd a connection with name, type, connection-string and description\n\nJavascript\n\naddConnection(\"localPostgresDB\", \"postgres\", \"postgresql://user:pass@localhost:5432/dbname\", \"Dev Postgres connection\")\n\nShell\n\nmetis add-connection \"localPostgresDB\" \"postgres\" \"postgresql://user:pass@localhost:5432/dbname\" \"Dev Postgres connection\"\n\nJavascript\n\naddConnection(\"mysqlLocalCon\", \"mysql\", \"mysql://root:pass@3.69.95.41:3306/database_name\", \"Dev Mysql connection\")\n\nShell\n\nmetis add-connection \"mysqlLocalCon\" \"mysql\" \"mysql://root:pass@3.69.95.41:3306/database_name\" \"Dev Mysql connection\"",
          "anchor": "usage",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5e29726231d54cfe8e6648aa4749442e",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Start an add-connection prompt\n\nJavascript\n\naddConnection()\n\nShell\n\nmetis add-connection \n\nAdd a connection with name, type, connection-string and description\n\nJavascript\n\naddConnection(\"localPostgresDB\", \"postgres\", \"postgresql://user:pass@localhost:5432/dbname\", \"Dev Postgres connection\")\n\nShell\n\nmetis add-connection \"localPostgresDB\" \"postgres\" \"postgresql://user:pass@localhost:5432/dbname\" \"Dev Postgres connection\"\n\nJavascript\n\naddConnection(\"mysqlLocalCon\", \"mysql\", \"mysql://root:pass@3.69.95.41:3306/database_name\", \"Dev Mysql connection\")\n\nShell\n\nmetis add-connection \"mysqlLocalCon\" \"mysql\" \"mysql://root:pass@3.69.95.41:3306/database_name\" \"Dev Mysql connection\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5ca2d676b8d848e19825767e0a97aab7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "showFormattedSql (boolean) - show formatted SQL, default: true\nshowPlan (boolean) - show simplified execution plan\nshowExplain (boolean) - show explain information\nshowMetrics (boolean) - show the facts gathered from the execution plan, default: true\nshowTableInfo (boolean) - show table info, default: true\nshowTableIndexInfo (boolean) - show table index/es info\nshowInsights (boolean) - show insights information, default: true\nrouteName (string) - route name, default: \"metis/cli/queryAnalysis\"\ntag (string) - tag name, default: \"PR\"\nshowAllInsights (boolean) - show all the insight include skipped, success, low, very low and info, default: true\nexecPlanType (enum) - run execution plan with chosen mode actual/estimated, default: \"Estimated\", values: [\"Actual\", \"Estimated\"]\nshowMetricsDiff (boolean) - show the diff between all the existing metrics to the generated metrics",
          "anchor": "options-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5ca2d676b8d848e19825767e0a97aab7",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "showFormattedSql (boolean) - show formatted SQL, default: true\nshowPlan (boolean) - show simplified execution plan\nshowExplain (boolean) - show explain information\nshowMetrics (boolean) - show the facts gathered from the execution plan, default: true\nshowTableInfo (boolean) - show table info, default: true\nshowTableIndexInfo (boolean) - show table index/es info\nshowInsights (boolean) - show insights information, default: true\nrouteName (string) - route name, default: \"metis/cli/queryAnalysis\"\ntag (string) - tag name, default: \"PR\"\nshowAllInsights (boolean) - show all the insight include skipped, success, low, very low and info, default: true\nexecPlanType (enum) - run execution plan with chosen mode actual/estimated, default: \"Estimated\", values: [\"Actual\", \"Estimated\"]\nshowMetricsDiff (boolean) - show the diff between all the existing metrics to the generated metrics",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5afa9abc07104cdf8955c66d2f73d45c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descPackage (describe)",
          "body": "describes a given package",
          "anchor": "descpackage-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5afa9abc07104cdf8955c66d2f73d45c",
          "_highlightResult": {
            "title": {
              "value": "descPackage (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describes a given package",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5884b7b02f9a4bf9b679d235752ec043",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descQuery (describe)",
          "body": "describes a given query",
          "anchor": "descquery-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5884b7b02f9a4bf9b679d235752ec043",
          "_highlightResult": {
            "title": {
              "value": "descQuery (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describes a given query",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "557a7738766a4c6b97b88a446ca1a1a3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descMetric (describe)",
          "body": "describe a given metric",
          "anchor": "descmetric-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/557a7738766a4c6b97b88a446ca1a1a3",
          "_highlightResult": {
            "title": {
              "value": "descMetric (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describe a given metric",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5559d61376c145ae843e192ffb3bab9b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required\nnewConnectionName (string) - the new name for the connection, required",
          "anchor": "arguments-6",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5559d61376c145ae843e192ffb3bab9b",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required\nnewConnectionName (string) - the new name for the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "5551118d57e045078efba2d0672fd2a3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "help (repl)",
          "body": "prints the description of all available functions",
          "anchor": "help-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/5551118d57e045078efba2d0672fd2a3",
          "_highlightResult": {
            "title": {
              "value": "help (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the description of all available functions",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "54469199d3ee435e9201ca0aa1bbcb8e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "generateBashCompletions (repl)",
          "body": "generate a completion file for bash",
          "anchor": "generatebashcompletions-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/54469199d3ee435e9201ca0aa1bbcb8e",
          "_highlightResult": {
            "title": {
              "value": "generateBashCompletions (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "generate a completion file for bash",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "53641daf07cd44e086825b4bf9d8acdf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndescTable(\"schema.table-name\")\n\nShell\n\nmetis desc-table \"schema.table-name\"",
          "anchor": "usage-6",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/53641daf07cd44e086825b4bf9d8acdf",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndescTable(\"schema.table-name\")\n\nShell\n\nmetis desc-table \"schema.table-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "51438f6f17a44df5bb66a04842fabcde",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "exitCode (number) - the exit code that would be used when terminating the process, optional",
          "anchor": "arguments-16",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/51438f6f17a44df5bb66a04842fabcde",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "exitCode (number) - the exit code that would be used when terminating the process, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4fc4e6767e954714970a3243dccc8c9a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "indexName (string) - index name, required",
          "anchor": "arguments-20",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4fc4e6767e954714970a3243dccc8c9a",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "indexName (string) - index name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4f6634e18b364f80a222c078d766aa82",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "printMode (repl)",
          "body": "set the print mode",
          "anchor": "printmode-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4f6634e18b364f80a222c078d766aa82",
          "_highlightResult": {
            "title": {
              "value": "printMode (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "set the print mode",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4f43bd3cb1404cd3975fbbbf7db97071",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "editConnection (connection)",
          "body": "edit a connection",
          "anchor": "editconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4f43bd3cb1404cd3975fbbbf7db97071",
          "_highlightResult": {
            "title": {
              "value": "editConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "edit a connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4df215a8ae404573bf2785172d620d38",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "editConnection (connection)",
          "body": "edit a connection",
          "anchor": "editconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4df215a8ae404573bf2785172d620d38",
          "_highlightResult": {
            "title": {
              "value": "editConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "edit a connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4c1d45ef0f4c47439e45d0dec67a54e4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Actions",
          "body": "",
          "anchor": "actions",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4c1d45ef0f4c47439e45d0dec67a54e4",
          "_highlightResult": {
            "title": {
              "value": "Actions",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4bff8bf95bf54f78823ca0439ffcc22b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "id (string) - the id of the rule, required\nfacts (object) - an object containing facts, optional",
          "anchor": "arguments-11",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4bff8bf95bf54f78823ca0439ffcc22b",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "id (string) - the id of the rule, required\nfacts (object) - an object containing facts, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4b5cf9b042d14a848010d85952876b79",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "addPcmToConnection (connection)",
          "body": "add PCM to an exsiting connection",
          "anchor": "addpcmtoconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4b5cf9b042d14a848010d85952876b79",
          "_highlightResult": {
            "title": {
              "value": "addPcmToConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "add PCM to an exsiting connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4a9520f8afce4835b60720c6423553d9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
          "anchor": "options-3",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4a9520f8afce4835b60720c6423553d9",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "49a886b7c5b14d6bb6ae7bbc04a9791a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descTestScenario (test)",
          "body": "show test scenario cases names and details",
          "anchor": "desctestscenario-test",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/49a886b7c5b14d6bb6ae7bbc04a9791a",
          "_highlightResult": {
            "title": {
              "value": "descTestScenario (test)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "show test scenario cases names and details",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "483258988e234394ba38d09a22729658",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-4",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/483258988e234394ba38d09a22729658",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4610b75873e14f53a4dacb8c25867d64",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "doc (repl)",
          "body": "prints the description of an action",
          "anchor": "doc-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4610b75873e14f53a4dacb8c25867d64",
          "_highlightResult": {
            "title": {
              "value": "doc (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the description of an action",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "45d4687229154a689ef7d2e88c49b5e4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "queryAnalysis (query)",
          "body": "The 'queryAnalysisPG' action runs an analysis on a given query. The output can be controlled using option parameters.",
          "anchor": "queryanalysis-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/45d4687229154a689ef7d2e88c49b5e4",
          "_highlightResult": {
            "title": {
              "value": "queryAnalysis (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The 'queryAnalysisPG' action runs an analysis on a given query. The output can be controlled using option parameters.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4509e44faac54d2dbaeeea36aa221a8b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nconnect(\"connection-name\")\n\nShell\n\nmetis --connect \"connection-name\"\n\nClient\n\ncurl -X GET \"http://localhost:3001:3001/connect?connection-name=connection-name\"",
          "anchor": "usage-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4509e44faac54d2dbaeeea36aa221a8b",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nconnect(\"connection-name\")\n\nShell\n\nmetis --connect \"connection-name\"\n\nClient\n\ncurl -X GET \"http://localhost:3001:3001/connect?connection-name=connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "443c9921390a4d7394e7cdf81efad9f6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "exit (repl)",
          "body": "exits the REPL",
          "anchor": "exit-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/443c9921390a4d7394e7cdf81efad9f6",
          "_highlightResult": {
            "title": {
              "value": "exit (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "exits the REPL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "4241c677dbe3456b8b866fba6589e2c3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "log-collector-name (string) - log collector name, required",
          "anchor": "arguments-16",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/4241c677dbe3456b8b866fba6589e2c3",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "log-collector-name (string) - log collector name, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "41295c2f0ad44839a2a0524c2e9c00f8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "resetConnectionsFile (connection)",
          "body": "delete all connections from the file",
          "anchor": "resetconnectionsfile-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/41295c2f0ad44839a2a0524c2e9c00f8",
          "_highlightResult": {
            "title": {
              "value": "resetConnectionsFile (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "delete all connections from the file",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "3fb86afb399e4fb5adb7d9c54cde0430",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "addConnection (connection)",
          "body": "add a new connection",
          "anchor": "addconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/3fb86afb399e4fb5adb7d9c54cde0430",
          "_highlightResult": {
            "title": {
              "value": "addConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "add a new connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "3f94c8acfd6f405e887c4f1e3be95927",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required\npcmConnectionString (string) - connetion string for PCM, required",
          "anchor": "arguments-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/3f94c8acfd6f405e887c4f1e3be95927",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required\npcmConnectionString (string) - connetion string for PCM, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "3f353ffd16334256971ae86453ac3b1a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "editLogCollector (logs)",
          "body": "Edit log collector",
          "anchor": "editlogcollector-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/3f353ffd16334256971ae86453ac3b1a",
          "_highlightResult": {
            "title": {
              "value": "editLogCollector (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Edit log collector",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "3e9403c389114321815f67a48cccac32",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-3",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/3e9403c389114321815f67a48cccac32",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "3c76bb1c0d004856a16dff9d479f9d37",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-3",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/3c76bb1c0d004856a16dff9d479f9d37",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "3adb090f6b7e46d185b65586ffc2c941",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
          "anchor": "options-11",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/3adb090f6b7e46d185b65586ffc2c941",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "39e293164625407196b1701f1706e9b8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "category (string) - select category to show\nsearch (string) - fuzzy search phrase",
          "anchor": "options-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/39e293164625407196b1701f1706e9b8",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "category (string) - select category to show\nsearch (string) - fuzzy search phrase",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "39e02b9c613941bea5c5d06a4b22c34b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "descRule (describe)",
          "body": "describe a rule by given id",
          "anchor": "descrule-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/39e02b9c613941bea5c5d06a4b22c34b",
          "_highlightResult": {
            "title": {
              "value": "descRule (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "describe a rule by given id",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "37f782a9553144e4b12a0fa535d37302",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/37f782a9553144e4b12a0fa535d37302",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "37001d79fc0c44d29cdc3271f430a1ea",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "testConnection (connection)",
          "body": "test the given connection",
          "anchor": "testconnection-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/37001d79fc0c44d29cdc3271f430a1ea",
          "_highlightResult": {
            "title": {
              "value": "testConnection (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "test the given connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "35003078bbf84ee6a550c2578e4bd9f7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndeleteConnection(\"connection-name\")\n\nShell\n\nmetis delete-connection \"connection-name\"",
          "anchor": "usage-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/35003078bbf84ee6a550c2578e4bd9f7",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndeleteConnection(\"connection-name\")\n\nShell\n\nmetis delete-connection \"connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "338ab35a32944351bb76e2f47c81c39d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "sqlQuery (string) - regular SQL query, required",
          "anchor": "arguments-12",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/338ab35a32944351bb76e2f47c81c39d",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "sqlQuery (string) - regular SQL query, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "32bade1dfb454df3ba9f7cea18966908",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "package (string) - the name of the package, required",
          "anchor": "arguments-9",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/32bade1dfb454df3ba9f7cea18966908",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "package (string) - the name of the package, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "2f0b4780fbeb4f9d935b5db93e2b7efc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "disconnect (connection)",
          "body": "disconnect from the current connection",
          "anchor": "disconnect-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/2f0b4780fbeb4f9d935b5db93e2b7efc",
          "_highlightResult": {
            "title": {
              "value": "disconnect (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "disconnect from the current connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "2d4d7b5732a347e8bf730bd1306f0de7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "editConfig (repl)",
          "body": "edit/add key and value to config",
          "anchor": "editconfig-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/2d4d7b5732a347e8bf730bd1306f0de7",
          "_highlightResult": {
            "title": {
              "value": "editConfig (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "edit/add key and value to config",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "29632e9173164b688115826474571444",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "query (string) - the query to parse, required",
          "anchor": "arguments-21",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/29632e9173164b688115826474571444",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "query (string) - the query to parse, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "295d5ff7496e4c21bd8b3ccbf46762e8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "format (query)",
          "body": "formats a query",
          "anchor": "format-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/295d5ff7496e4c21bd8b3ccbf46762e8",
          "_highlightResult": {
            "title": {
              "value": "format (query)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "formats a query",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "292749ec572d47a8a9adf52060d95bbd",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "inventory (describe)",
          "body": "prints the inventory",
          "anchor": "inventory-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/292749ec572d47a8a9adf52060d95bbd",
          "_highlightResult": {
            "title": {
              "value": "inventory (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the inventory",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "27b965119a8c44a0829e78c24717c8d0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "query (string) - query to analyze , required",
          "anchor": "arguments-26",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/27b965119a8c44a0829e78c24717c8d0",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "query (string) - query to analyze , required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "27775144c5ac4a53a1a15e8be615116e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\ndescRule(\"QRY000001\")\n\nShell\n\nmetis desc-rule \"QRY000001\"\n\nJavascript\n\ndescRule(\"QRY000001\", { 'actual-rows-read': 1000000 })\n\nShell\n\nmetis desc-rule \"QRY000001\" '{\"actual-rows-read\":1000000}'",
          "anchor": "usage-5",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/27775144c5ac4a53a1a15e8be615116e",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\ndescRule(\"QRY000001\")\n\nShell\n\nmetis desc-rule \"QRY000001\"\n\nJavascript\n\ndescRule(\"QRY000001\", { 'actual-rows-read': 1000000 })\n\nShell\n\nmetis desc-rule \"QRY000001\" '{\"actual-rows-read\":1000000}'",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "27507cce04e14de6bb2ff2f8f0533c11",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "currentState (repl)",
          "body": "prints the current state",
          "anchor": "currentstate-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/27507cce04e14de6bb2ff2f8f0533c11",
          "_highlightResult": {
            "title": {
              "value": "currentState (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the current state",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "255f1d2d48134c30b24bf65270d33168",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "tableAnalysis (static-analysis)",
          "body": "run static analysis on table",
          "anchor": "tableanalysis-static-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/255f1d2d48134c30b24bf65270d33168",
          "_highlightResult": {
            "title": {
              "value": "tableAnalysis (static-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "run static analysis on table",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "245eded585d9445f96ab662940006949",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "file (string) - the file out path, required",
          "anchor": "arguments-17",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/245eded585d9445f96ab662940006949",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "file (string) - the file out path, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "226f07a3cca64367979dd65d2f7ac266",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listTables (describe)",
          "body": "print the tables list for the current connection",
          "anchor": "listtables-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/226f07a3cca64367979dd65d2f7ac266",
          "_highlightResult": {
            "title": {
              "value": "listTables (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "print the tables list for the current connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "1bfda135450b4e6f94f9dd350095b6b9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "pkg (string) - the package name, required\nquery (string) - the query name, required\nparameters (object) - JSON containing the parameters, optional",
          "anchor": "arguments-24",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/1bfda135450b4e6f94f9dd350095b6b9",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "pkg (string) - the package name, required\nquery (string) - the query name, required\nparameters (object) - JSON containing the parameters, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "1bfccabec1234284ae19965981224157",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required\nnewConnectionName (string) - the new name for the connection, required",
          "anchor": "arguments-7",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/1bfccabec1234284ae19965981224157",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required\nnewConnectionName (string) - the new name for the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "1bd137fc0a674ddbbc7de9e51db03d58",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/1bd137fc0a674ddbbc7de9e51db03d58",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "1ad1232328e84d139f9c811b06a653ab",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "noProgress (repl)",
          "body": "disable printing of progress bars",
          "anchor": "noprogress-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/1ad1232328e84d139f9c811b06a653ab",
          "_highlightResult": {
            "title": {
              "value": "noProgress (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "disable printing of progress bars",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "19bd91d8ddf14043860e2101629370b6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "name (string) - log collector name, required\nsource (string) - the url to load the logs from (uri path/file path/silk), required\ndescription (string) - the description of the collector, optional\nconnectionName (string) - the name of the connection to associate with the logs for Silk, optional",
          "anchor": "arguments-13",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/19bd91d8ddf14043860e2101629370b6",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "name (string) - log collector name, required\nsource (string) - the url to load the logs from (uri path/file path/silk), required\ndescription (string) - the description of the collector, optional\nconnectionName (string) - the name of the connection to associate with the logs for Silk, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "198f18b39f074a12977664488382342f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nqueryAnalysis(\"SELECT * FROM TableName\")\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\"\n\nJavascript\n\nqueryAnalysis(\"SELECT * FROM TableName\").showPlan(true)\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\" --show-plan",
          "anchor": "usage-7",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/198f18b39f074a12977664488382342f",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nqueryAnalysis(\"SELECT * FROM TableName\")\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\"\n\nJavascript\n\nqueryAnalysis(\"SELECT * FROM TableName\").showPlan(true)\n\nShell\n\nmetis query-analysis \"SELECT * FROM TableName\" --show-plan",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "19738d91ce9b4965b0c965df87d098ab",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "actionName (string) - the name of the action to print, required",
          "anchor": "arguments-14",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/19738d91ce9b4965b0c965df87d098ab",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "actionName (string) - the name of the action to print, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "17b820c7a34f4cd6ba1d16fbb49ed46c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionName (string) - the name of the connection, required",
          "anchor": "arguments-6",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/17b820c7a34f4cd6ba1d16fbb49ed46c",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionName (string) - the name of the connection, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "159338e9103f4dcbb3acbc061e1b5ed5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "package (string) - the name of the package, required\nquery (string) - the name of the query, required",
          "anchor": "arguments-10",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/159338e9103f4dcbb3acbc061e1b5ed5",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "package (string) - the name of the package, required\nquery (string) - the name of the query, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "13920837079043feaf55ead056f24917",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
          "anchor": "options-10",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/13920837079043feaf55ead056f24917",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "showQueries (boolean) - show sql queries\nseverity (enum) - severity of rules to show, default: \"low\", values: [\"critical\", \"high\", \"medium\", \"low\", \"info\"]",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "12dbc6d19811490197fd50d6dd627ee9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "reloadConnections (connection)",
          "body": "reload connections",
          "anchor": "reloadconnections-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/12dbc6d19811490197fd50d6dd627ee9",
          "_highlightResult": {
            "title": {
              "value": "reloadConnections (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "reload connections",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "12d52c5656a94feda1048a2a7e58f794",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "connectionString (string) - the connection string, required\nconnectionType (string) - the connection type, required",
          "anchor": "arguments-5",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/12d52c5656a94feda1048a2a7e58f794",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connectionString (string) - the connection string, required\nconnectionType (string) - the connection type, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "10e2fbf3ed8344fd99dfa990ccee22b3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "queryAnalysis (query-analysis)",
          "body": "The 'queryAnalysisPG' action runs an analysis on a given query. The output can be controlled using option parameters.",
          "anchor": "queryanalysis-query-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/10e2fbf3ed8344fd99dfa990ccee22b3",
          "_highlightResult": {
            "title": {
              "value": "queryAnalysis (query-analysis)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The 'queryAnalysisPG' action runs an analysis on a given query. The output can be controlled using option parameters.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "0f1fe4feeec94283a569774734638d5e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "doc (repl)",
          "body": "prints the description of an action",
          "anchor": "doc-repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/0f1fe4feeec94283a569774734638d5e",
          "_highlightResult": {
            "title": {
              "value": "doc (repl)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "prints the description of an action",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "0eb36c51f186454c834f87aeacf67a8e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nrunNamedCmd(\"example-package\", \"example-query\").\n\nShell\n\nmetis run-named-cmd \"example-package\" \"example-query\" \n\nJavascript\n\nrunNamedCmd(\"example-package\", \"example-query\").param(\"value\")\n\nShell\n\nmetis run-named-cmd \"example-package\" \"example-query\" --param \"value\"",
          "anchor": "usage-14",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/0eb36c51f186454c834f87aeacf67a8e",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nrunNamedCmd(\"example-package\", \"example-query\").\n\nShell\n\nmetis run-named-cmd \"example-package\" \"example-query\" \n\nJavascript\n\nrunNamedCmd(\"example-package\", \"example-query\").param(\"value\")\n\nShell\n\nmetis run-named-cmd \"example-package\" \"example-query\" --param \"value\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "0dbeb51ee06d4421b00c7257e0ca742d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "path (string) - path of the scenario file to load, optional",
          "anchor": "arguments-31",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/0dbeb51ee06d4421b00c7257e0ca742d",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "path (string) - path of the scenario file to load, optional",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "07c8acbd8a624b4885f5c3ea0ffbd034",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nconnect(\"connection-name\")\n\nShell\n\nmetis --connect \"connection-name\"",
          "anchor": "usage-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/07c8acbd8a624b4885f5c3ea0ffbd034",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nconnect(\"connection-name\")\n\nShell\n\nmetis --connect \"connection-name\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "07a6b088dc2746f3b44fd9dad537d060",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listPackages (describe)",
          "body": "list the packages that are relevant for the current connection, or all if no connection is set",
          "anchor": "listpackages-describe",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/07a6b088dc2746f3b44fd9dad537d060",
          "_highlightResult": {
            "title": {
              "value": "listPackages (describe)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "list the packages that are relevant for the current connection, or all if no connection is set",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "078fee6f5e9146a4a40134c864645850",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "mode (string) - the mode, one of: [pretty, json, silent], default: \"pretty\", required",
          "anchor": "arguments-30",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/078fee6f5e9146a4a40134c864645850",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "mode (string) - the mode, one of: [pretty, json, silent], default: \"pretty\", required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "05dd9b03c394443ab9390d9ec6fe06aa",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nrelatedCommand(0, \"related-command-name\").\n\nShell\n\nmetis related-command 0 \"related-command-name\" ",
          "anchor": "usage-13",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/05dd9b03c394443ab9390d9ec6fe06aa",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nrelatedCommand(0, \"related-command-name\").\n\nShell\n\nmetis related-command 0 \"related-command-name\" ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "01f903e0a2fc4fcf992412955a6a5140",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Options",
          "body": "showFormattedSql (boolean) - show formatted SQL, default: true\nshowPlan (boolean) - show simplified execution plan\nshowExplain (boolean) - show explain information\nshowMetrics (boolean) - show the facts gathered from the execution plan, default: true\nshowTableInfo (boolean) - show table info, default: true\nshowTableIndexInfo (boolean) - show table index/es info\nshowInsights (boolean) - show insights information, default: true\nshowAllInsights (boolean) - show all the insight include skipped, success, low, very low and info, default: true\nexecPlanType (enum) - run execution plan with choosen mode actual/estimated, default: \"Actual\", values: [\"Actual\", \"Estimated\"]\nshowMetricsDiff (boolean) - show the diff between all the exist metrics to the generate metrics",
          "anchor": "options-7",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/01f903e0a2fc4fcf992412955a6a5140",
          "_highlightResult": {
            "title": {
              "value": "Options",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "showFormattedSql (boolean) - show formatted SQL, default: true\nshowPlan (boolean) - show simplified execution plan\nshowExplain (boolean) - show explain information\nshowMetrics (boolean) - show the facts gathered from the execution plan, default: true\nshowTableInfo (boolean) - show table info, default: true\nshowTableIndexInfo (boolean) - show table index/es info\nshowInsights (boolean) - show insights information, default: true\nshowAllInsights (boolean) - show all the insight include skipped, success, low, very low and info, default: true\nexecPlanType (enum) - run execution plan with choosen mode actual/estimated, default: \"Actual\", values: [\"Actual\", \"Estimated\"]\nshowMetricsDiff (boolean) - show the diff between all the exist metrics to the generate metrics",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "01ed7251c071460d9a43d561931c1745",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "listLogCollectors (logs)",
          "body": "List all existing Log Collectors",
          "anchor": "listlogcollectors-logs",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/01ed7251c071460d9a43d561931c1745",
          "_highlightResult": {
            "title": {
              "value": "listLogCollectors (logs)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "List all existing Log Collectors",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "D8qsSp6bSoEKhnqsEDyi",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "016098f6e14e4b1b864c792a1dcedfc3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "updateConnectionName (connection)",
          "body": "update the connection name",
          "anchor": "updateconnectionname-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/016098f6e14e4b1b864c792a1dcedfc3",
          "_highlightResult": {
            "title": {
              "value": "updateConnectionName (connection)",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "update the connection name",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "00bef6c5bf34426f87d8b2dbd2aba864",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Arguments",
          "body": "metric (string) - name of the metric, required",
          "anchor": "arguments-7",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/00bef6c5bf34426f87d8b2dbd2aba864",
          "_highlightResult": {
            "title": {
              "value": "Arguments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metric (string) - name of the metric, required",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "ZGFk1QrCW9xctL1hOd61",
          "section": "00172ca55a6c4e3a9546a73785be402a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage",
          "body": "Javascript\n\nsqlCmd(\"SELECT * FROM table\").\n\nShell\n\nmetis sql-cmd \"SELECT * FROM table\" ",
          "anchor": "usage-8",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ZGFk1QrCW9xctL1hOd61/00172ca55a6c4e3a9546a73785be402a",
          "_highlightResult": {
            "title": {
              "value": "Usage",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Javascript\n\nsqlCmd(\"SELECT * FROM table\").\n\nShell\n\nmetis sql-cmd \"SELECT * FROM table\" ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "pS0Z2iTiNZBsFUMuOp1O",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "edace83e7cda464d9c5edf9de8f3d916",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis provides an end-to-end solution to easily detect db-related problems before they hit production. For that Metis needs to collect the SQL commands and relevant data. Then it processes the raw data into clear insights which explain the users what went wrong and how to fix that.    ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/edace83e7cda464d9c5edf9de8f3d916",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis provides an end-to-end solution to easily detect db-related problems before they hit production. For that Metis needs to collect the SQL commands and relevant data. Then it processes the raw data into clear insights which explain the users what went wrong and how to fix that.    ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "pS0Z2iTiNZBsFUMuOp1O",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "c19e930284c54f84a1f503637176d821",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Generating the Insights ",
          "body": "The Backend processes the stream of traces. It runs automatic checks for rule violations and misconfiguration of the database. When rule violations are found, Metis produces an insight which guides the developer to fix the issue while explaining the reason behind the rule. ",
          "anchor": "generating-the-insights",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/c19e930284c54f84a1f503637176d821",
          "_highlightResult": {
            "title": {
              "value": "Generating the Insights ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Backend processes the stream of traces. It runs automatic checks for rule violations and misconfiguration of the database. When rule violations are found, Metis produces an insight which guides the developer to fix the issue while explaining the reason behind the rule. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "pS0Z2iTiNZBsFUMuOp1O",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "856162f17f664904abdd37ad31e08666",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "OpenTelemetry",
          "body": "The SDK generates a Trace, the REST command caller and every SQL command generated in the code. The technical implementation is a Span (part of a Trace) for the REST command and more Spans for each SQL command, all using the same Trace ID, to allow the backend to show all the spans in the same context.\nGenerating Traces in the code is now a simple task using OpenTelemetry. OpenTelemetry is an open source, vendor agnostic, collection of tools, APIs, and SDKs. It is used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.\nOpenTelemetry provides SDKs for all major Frameworks and ORMs. \n\nAnother interesting feature in OpenTelemetry is SQLCommenter. SQLCommenter is a suite of middleware / plugins that enable your ORMs to augment SQL statements before execution, with comments containing information about the code that caused its execution. This helps in easily correlating slow performance with source code and giving insights into backend database performance. In short, it provides some observability into the state of your client-side applications and their impact on the database’s server-side.\n\nSELECT\n    booking.title AS booking_title\nFROM \n    booking\n    /*traceparent='00-59888198e0d98e0d9c1e72d4def4387019030-5fd1362f8aa2affe-1'*/",
          "anchor": "opentelemetry",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/856162f17f664904abdd37ad31e08666",
          "_highlightResult": {
            "title": {
              "value": "OpenTelemetry",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The SDK generates a Trace, the REST command caller and every SQL command generated in the code. The technical implementation is a Span (part of a Trace) for the REST command and more Spans for each SQL command, all using the same Trace ID, to allow the backend to show all the spans in the same context.\nGenerating Traces in the code is now a simple task using OpenTelemetry. OpenTelemetry is an open source, vendor agnostic, collection of tools, APIs, and SDKs. It is used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.\nOpenTelemetry provides SDKs for all major Frameworks and ORMs. \n\nAnother interesting feature in OpenTelemetry is SQLCommenter. SQLCommenter is a suite of middleware / plugins that enable your ORMs to augment SQL statements before execution, with comments containing information about the code that caused its execution. This helps in easily correlating slow performance with source code and giving insights into backend database performance. In short, it provides some observability into the state of your client-side applications and their impact on the database’s server-side.\n\nSELECT\n    booking.title AS booking_title\nFROM \n    booking\n    /*traceparent='00-59888198e0d98e0d9c1e72d4def4387019030-5fd1362f8aa2affe-1'*/",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "BEY0L5iBvDJTvCQTFW9N",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "6c7c54e780a14dbba5b12a666938c3c4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Explain about PMC, data flow, Emphasize here we don't use the data and don't impact performance. \n\nMetis' SDKs enable an automatic sending of SQL commands for analysis.\n\nThe instrumentation and configuration are very simple and can be implemented using a few lines of code. It is similar to the instrumentation of other monitoring SDKs you probably implemented already. \n\nThe SDK works well with ORMs, there is no need to search for the SQL command, as the SDK automatically maps all the SQL commands related to any REST or GraphQL request. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/6c7c54e780a14dbba5b12a666938c3c4",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Explain about PMC, data flow, Emphasize here we don't use the data and don't impact performance. \n\nMetis' SDKs enable an automatic sending of SQL commands for analysis.\n\nThe instrumentation and configuration are very simple and can be implemented using a few lines of code. It is similar to the instrumentation of other monitoring SDKs you probably implemented already. \n\nThe SDK works well with ORMs, there is no need to search for the SQL command, as the SDK automatically maps all the SQL commands related to any REST or GraphQL request. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "BEY0L5iBvDJTvCQTFW9N",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "5f4603b17dc3422abdf46f99b536204b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "The Flow is: ",
          "body": "Sign Up to Metis to get an API Key. The first API Key is created automatically, later you can generate more keys. \nInstall the SDK for your Middleware / ORM. See below the supported options\nInstrument your code to collect the SQL commands and send them to Metis. \nOpen the web app to review the Insights: problems and how to solve them. ",
          "anchor": "the-flow-is",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/5f4603b17dc3422abdf46f99b536204b",
          "_highlightResult": {
            "title": {
              "value": "The Flow is: ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Sign Up to Metis to get an API Key. The first API Key is created automatically, later you can generate more keys. \nInstall the SDK for your Middleware / ORM. See below the supported options\nInstrument your code to collect the SQL commands and send them to Metis. \nOpen the web app to review the Insights: problems and how to solve them. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "pS0Z2iTiNZBsFUMuOp1O",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "4acea3949fd543be90701bd8a29c034a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Viewing the Insights",
          "body": "The web app shows the traces sent from the users' app servers via the SDK. The users can see an overview of the recent QA tests, and quickly identify the REST commands which generated bad SQL. The web app provides deep SQL command analysis, showing all the insights related to the SQL. The insights are easy to understand and contain a remediation plan for the problem. ",
          "anchor": "viewing-the-insights",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/4acea3949fd543be90701bd8a29c034a",
          "_highlightResult": {
            "title": {
              "value": "Viewing the Insights",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The web app shows the traces sent from the users' app servers via the SDK. The users can see an overview of the recent QA tests, and quickly identify the REST commands which generated bad SQL. The web app provides deep SQL command analysis, showing all the insights related to the SQL. The insights are easy to understand and contain a remediation plan for the problem. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "pS0Z2iTiNZBsFUMuOp1O",
          "page": "YnAIqkowVvfhdleLWxHO",
          "section": "0ec5f934b2054ad38f05abdafb7eb687",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Metis SDK Instrumentation ",
          "body": "Metis provides an SDK for popular ORM and Middlewares, such as Python SQL Alchemy or JS Sequelize. The SDK provides simple installation and instrumentation with almost no impact on performance. The SDK uses only metadata about the db schema and query activity is needed. \n\nThe SDK generates Traces that link the caller REST or GraphQL with the SQL command(s) it generated. The SDK uses OpenTelemetry to generate the traces. That allows Metis easy integration with existing Open Telemetry instrumentation and other Application Performance Monitoring (APM) tools. \n\nOn top of the traces, the SDK also sends Metis the execution plan of the SQL commands, the schema of the relevant tables and indexes, tables size, and index usage. ",
          "anchor": "metis-sdk-instrumentation",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/YnAIqkowVvfhdleLWxHO/0ec5f934b2054ad38f05abdafb7eb687",
          "_highlightResult": {
            "title": {
              "value": "Metis SDK Instrumentation ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis provides an SDK for popular ORM and Middlewares, such as Python SQL Alchemy or JS Sequelize. The SDK provides simple installation and instrumentation with almost no impact on performance. The SDK uses only metadata about the db schema and query activity is needed. \n\nThe SDK generates Traces that link the caller REST or GraphQL with the SQL command(s) it generated. The SDK uses OpenTelemetry to generate the traces. That allows Metis easy integration with existing Open Telemetry instrumentation and other Application Performance Monitoring (APM) tools. \n\nOn top of the traces, the SDK also sends Metis the execution plan of the SQL commands, the schema of the relevant tables and indexes, tables size, and index usage. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "XBuc3tDRWkNn2Ts2amEW",
          "section": "e72f934ede944fdeb3bf48c1d815cc27",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Open",
          "body": "metis-cli\n\nView All Supported Commands\n\nhelp()\n\nView detailed help of a specific command.\n\ndoc(command-name)",
          "anchor": "open",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/XBuc3tDRWkNn2Ts2amEW/e72f934ede944fdeb3bf48c1d815cc27",
          "_highlightResult": {
            "title": {
              "value": "Open",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli\n\nView All Supported Commands\n\nhelp()\n\nView detailed help of a specific command.\n\ndoc(command-name)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "XBuc3tDRWkNn2Ts2amEW",
          "section": "9e07749b8170485f8a166dafc98c42b0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "You can also work with mets-cli in REPL mode. This allows for a more continuous work flow that's more convenient to some developers while investigating issues.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/XBuc3tDRWkNn2Ts2amEW/9e07749b8170485f8a166dafc98c42b0",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "You can also work with mets-cli in REPL mode. This allows for a more continuous work flow that's more convenient to some developers while investigating issues.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "XBuc3tDRWkNn2Ts2amEW",
          "section": "77f20962a38849788de1121556e586b1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Auto Complete",
          "body": "Some of the commands has built-in auto complete. When you start typing, the CLI suggest parameter's values or relevant objects. You can also click twice on TAB to see all relevant options. \n\nExample - The command connect() expects an existing connection name to a database. The auto completion suggests a connection name from the list of existing connections. Tapping TAB twice will show all possible connections.\n\nAuto Complete",
          "anchor": "auto-complete",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/XBuc3tDRWkNn2Ts2amEW/77f20962a38849788de1121556e586b1",
          "_highlightResult": {
            "title": {
              "value": "Auto Complete",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Some of the commands has built-in auto complete. When you start typing, the CLI suggest parameter's values or relevant objects. You can also click twice on TAB to see all relevant options. \n\nExample - The command connect() expects an existing connection name to a database. The auto completion suggests a connection name from the list of existing connections. Tapping TAB twice will show all possible connections.\n\nAuto Complete",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "9EZwCX4xLfTwZPXX5V3O",
          "page": "UCKV4UjR4uGYzUZtkQjA",
          "section": "5c8f10e1f1a34f919527f7b57e5502cb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Coming Soon",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/UCKV4UjR4uGYzUZtkQjA/5c8f10e1f1a34f919527f7b57e5502cb",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Coming Soon",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "PJqDm9VFd1aQn5gV7ZYN",
          "section": "c9f428e0ff96447b89c897b7ed6e26a0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Here you can find a few end-to-end tutorials, to get a better understanding of how to use Metis. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/PJqDm9VFd1aQn5gV7ZYN/c9f428e0ff96447b89c897b7ed6e26a0",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Here you can find a few end-to-end tutorials, to get a better understanding of how to use Metis. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "O3MpHZJyqpP7l0vLyj6t",
          "section": "initial_O3MpHZJyqpP7l0vLyj6t_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Sign Up",
          "body": "Through here",
          "anchor": "1.-sign-up",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/O3MpHZJyqpP7l0vLyj6t/initial_O3MpHZJyqpP7l0vLyj6t_block",
          "_highlightResult": {
            "title": {
              "value": "1. Sign Up",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Through here",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "O3MpHZJyqpP7l0vLyj6t",
          "section": "c9102826f0a543dc8cb03832a992b515",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "This is a guide to get up and running with Metis.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/O3MpHZJyqpP7l0vLyj6t/c9102826f0a543dc8cb03832a992b515",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "This is a guide to get up and running with Metis.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "O3MpHZJyqpP7l0vLyj6t",
          "section": "b990e3cd8856446fb19cb7b1dd0ef09b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Install SDK",
          "body": "The following guide will lead you through choosing the right SDK for you and link to your project.",
          "anchor": "3.-install-sdk",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/O3MpHZJyqpP7l0vLyj6t/b990e3cd8856446fb19cb7b1dd0ef09b",
          "_highlightResult": {
            "title": {
              "value": "3. Install SDK",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The following guide will lead you through choosing the right SDK for you and link to your project.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "FBcAE9xwxU4pHQt0wORB",
          "page": "O3MpHZJyqpP7l0vLyj6t",
          "section": "32c9c5e4c57647799956216e89e25b61",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Create a Project",
          "body": "In order to get your API Key you need to create a project-\n\nProjects Page",
          "anchor": "2.-create-a-project",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/O3MpHZJyqpP7l0vLyj6t/32c9c5e4c57647799956216e89e25b61",
          "_highlightResult": {
            "title": {
              "value": "2. Create a Project",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "In order to get your API Key you need to create a project-\n\nProjects Page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "initial_NsL8gzK0buon8ujbPmXc_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Overview",
          "body": "Metis offers database observability for developers who use Prisma ORM.\n\nCheck out our Prisma Advanced Guide for additional advanced configurations and use cases.",
          "anchor": "overview",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/initial_NsL8gzK0buon8ujbPmXc_block",
          "_highlightResult": {
            "title": {
              "value": "Overview",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis offers database observability for developers who use Prisma ORM.\n\nCheck out our Prisma Advanced Guide for additional advanced configurations and use cases.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "ffebecaf676448009baf6c6340825229",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "TypeScript",
          "body": "/*tracing.ts*/\nimport opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { NestInstrumentation } from \"@opentelemetry/instrumentation-nestjs-core\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan,\n  MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { IncomingMessage } from \"http\";\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: \"test-tracing-service\",\n    [SemanticResourceAttributes.SERVICE_VERSION]: \"1.0.0\",\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n  process.env.EXPORTER_URL,\n  process.env.EXPORTER_API_KEY,\n  {},\n);\ntracerProvider.addSpanProcessor(new SimpleSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager().enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\ntracerProvider.register();\nconst urlsFilter = createFilter([/favicon.ico/]);\nexport const uninstrument = registerInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        return urlsFilter(request.url);\n      },\n      requestHook: markSpan,\n    }),\n    new NestInstrumentation(),\n    getPrismaInstrumentation(),\n  ],\n});",
          "anchor": "typescript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/ffebecaf676448009baf6c6340825229",
          "_highlightResult": {
            "title": {
              "value": "TypeScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "/*tracing.ts*/\nimport opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { NestInstrumentation } from \"@opentelemetry/instrumentation-nestjs-core\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan,\n  MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { IncomingMessage } from \"http\";\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: \"test-tracing-service\",\n    [SemanticResourceAttributes.SERVICE_VERSION]: \"1.0.0\",\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n  process.env.EXPORTER_URL,\n  process.env.EXPORTER_API_KEY,\n  {},\n);\ntracerProvider.addSpanProcessor(new SimpleSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager().enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\ntracerProvider.register();\nconst urlsFilter = createFilter([/favicon.ico/]);\nexport const uninstrument = registerInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        return urlsFilter(request.url);\n      },\n      requestHook: markSpan,\n    }),\n    new NestInstrumentation(),\n    getPrismaInstrumentation(),\n  ],\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "f73cc8d58931455581b3b558cefe45f6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Run Application",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-run-application",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/f73cc8d58931455581b3b558cefe45f6",
          "_highlightResult": {
            "title": {
              "value": "2. Run Application",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "1rG2zb9hR2eCn4GGGNVr",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "df7620f487cc43239473c65a537a0c36",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Coming Soon",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/df7620f487cc43239473c65a537a0c36",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Coming Soon",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "da0124a5d1ca46bd9d7772f3513e1f56",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "After a while you should see activity in your Project's .",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/da0124a5d1ca46bd9d7772f3513e1f56",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "After a while you should see activity in your Project's .",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "0euTFoz6OdVwwlc01ZqE",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "d3dcf54222a349ff95bc42d050a103e4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM with the following frameworks-",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/d3dcf54222a349ff95bc42d050a103e4",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM with the following frameworks-",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "c1a4c175e55c4967a27fd05e55c373ac",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Development",
          "body": "METIS_TAG=DEVELOPMENT",
          "anchor": "development",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/c1a4c175e55c4967a27fd05e55c373ac",
          "_highlightResult": {
            "title": {
              "value": "Development",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=DEVELOPMENT",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "bc0e78ad43bf431c9fcea8bf0c4c5806",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Configuration Parameters",
          "body": "SERVICE_NAME\nA short name to easily group data coming from the service.\norders-service\nSERVICE_VERSION\nOptional. An internal version of the service, to help the developers to distinguish between data from different versions.\n1.2.3\nAPI_KEY\nYour project's API key.\nz9bayHMU69amS9KmdjnTo1bqVqoX1Fa11IlRp2Aq",
          "anchor": "configuration-parameters",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/bc0e78ad43bf431c9fcea8bf0c4c5806",
          "_highlightResult": {
            "title": {
              "value": "Configuration Parameters",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "SERVICE_NAME\nA short name to easily group data coming from the service.\norders-service\nSERVICE_VERSION\nOptional. An internal version of the service, to help the developers to distinguish between data from different versions.\n1.2.3\nAPI_KEY\nYour project's API key.\nz9bayHMU69amS9KmdjnTo1bqVqoX1Fa11IlRp2Aq",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "b91cb5843d784c78b66dc73f8d785c0e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/b91cb5843d784c78b66dc73f8d785c0e",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "794dee3cf75d49508a61ab028f2d7262",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-interceptor\n\nCreate a file named tracing.ts|js, which will contain your Metis setup code.",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/794dee3cf75d49508a61ab028f2d7262",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-interceptor\n\nCreate a file named tracing.ts|js, which will contain your Metis setup code.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "711f82d558984fdeba0b0a3dd6cfa3b6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/711f82d558984fdeba0b0a3dd6cfa3b6",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "6cc667821b8a4b4baa3e887700b40f14",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "npm install --save @metis-data/prisma-express-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nThe following code, has to run before your server starts listening-\n\nimport { PrismaClient } from '@prisma/client';\nimport { PrismaExpressInterceptor } from '@metis-data/prisma-express-interceptor';\nBigInt.prototype.toJSON = function () {\n  return this.toString();\n};\nconst prisma = new PrismaClient({\n  log: [\n    {\n      emit: 'event',\n      level: 'query',\n    },\n  ],\n});\nconst interceptor = PrismaExpressInterceptor.create({\n  serviceName: '<SERVICE_NAME>',\n  api_key: '<API_KEY>',\n  serviceVersion: '<SERVICE_VERSION>'\n});\ninterceptor.instrument(\n  prisma, // The application Prisma client\n  {\n    excludedUrls: [], // Add URLs regex to ignore here\n    printToConsole: false, // Print outgoing spans in console (default to false)\n  }\n);\n// Make sure to import express after instrumenting prisma.\nimport express from 'express';\nconst app = express();\napp.use(express.json());\napp.get('/hello', async (req, res) => {\n  return res.send('hello world');\n});\n\nMake sure to import express after instrumenting prisma.",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/6cc667821b8a4b4baa3e887700b40f14",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "npm install --save @metis-data/prisma-express-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nThe following code, has to run before your server starts listening-\n\nimport { PrismaClient } from '@prisma/client';\nimport { PrismaExpressInterceptor } from '@metis-data/prisma-express-interceptor';\nBigInt.prototype.toJSON = function () {\n  return this.toString();\n};\nconst prisma = new PrismaClient({\n  log: [\n    {\n      emit: 'event',\n      level: 'query',\n    },\n  ],\n});\nconst interceptor = PrismaExpressInterceptor.create({\n  serviceName: '<SERVICE_NAME>',\n  api_key: '<API_KEY>',\n  serviceVersion: '<SERVICE_VERSION>'\n});\ninterceptor.instrument(\n  prisma, // The application Prisma client\n  {\n    excludedUrls: [], // Add URLs regex to ignore here\n    printToConsole: false, // Print outgoing spans in console (default to false)\n  }\n);\n// Make sure to import express after instrumenting prisma.\nimport express from 'express';\nconst app = express();\napp.use(express.json());\napp.get('/hello', async (req, res) => {\n  return res.send('hello world');\n});\n\nMake sure to import express after instrumenting prisma.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "6b1b2e223a32489497309bd167996994",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_INSTRUMENTATION\nSet false to stop all data collection, any other value activates Metis.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/6b1b2e223a32489497309bd167996994",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_INSTRUMENTATION\nSet false to stop all data collection, any other value activates Metis.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "61cd126b1e804b3ca1e98a1e0e3c3ff8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "JavaScript",
          "body": "",
          "anchor": "javascript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/61cd126b1e804b3ca1e98a1e0e3c3ff8",
          "_highlightResult": {
            "title": {
              "value": "JavaScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "5efb1a46e5ae43a1a79985988916dce8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Initialize the Library",
          "body": "You will need your project token for initializing your library. You can get your project token from Projects Page.\n\nUse the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-interceptor\n\nCreate a file named tracing.ts|js, which will contain your Metis setup code.",
          "anchor": "1.-initialize-the-library",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/5efb1a46e5ae43a1a79985988916dce8",
          "_highlightResult": {
            "title": {
              "value": "1. Initialize the Library",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "You will need your project token for initializing your library. You can get your project token from Projects Page.\n\nUse the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-interceptor\n\nCreate a file named tracing.ts|js, which will contain your Metis setup code.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "4c65256795224d5c8ca5bdd71d2bc45f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "METIS_TAG=PRODUCTION",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/4c65256795224d5c8ca5bdd71d2bc45f",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=PRODUCTION",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "4bc87f2c6e114c1f88ff0c30caac383e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "John's Local Enviroment",
          "body": "METIS_ENVIRONMENT=JOHN_LOCAL",
          "anchor": "johns-local-enviroment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/4bc87f2c6e114c1f88ff0c30caac383e",
          "_highlightResult": {
            "title": {
              "value": "John's Local Enviroment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_ENVIRONMENT=JOHN_LOCAL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "4b35f7fea96f4f95a0015155811183bf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "John's Local Enviroment",
          "body": "METIS_TAG=JOHN_LOCAL",
          "anchor": "johns-local-enviroment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/4b35f7fea96f4f95a0015155811183bf",
          "_highlightResult": {
            "title": {
              "value": "John's Local Enviroment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=JOHN_LOCAL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "3e572935e47c4e52bd5331f533201392",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Development",
          "body": "METIS_ENVIRONMENT=DEVELOPMENT",
          "anchor": "development",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/3e572935e47c4e52bd5331f533201392",
          "_highlightResult": {
            "title": {
              "value": "Development",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_ENVIRONMENT=DEVELOPMENT",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "36a06b197a4e4a24be6135aac7979c16",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "TypeScript",
          "body": "/*tracing.ts*/\nimport opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { NestInstrumentation } from \"@opentelemetry/instrumentation-nestjs-core\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan,\n  MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { IncomingMessage } from \"http\";\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: \"test-tracing-service\",\n    [SemanticResourceAttributes.SERVICE_VERSION]: \"1.0.0\",\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n  process.env.EXPORTER_URL,\n  process.env.EXPORTER_API_KEY,\n  {},\n);\ntracerProvider.addSpanProcessor(new SimpleSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager().enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\ntracerProvider.register();\nconst urlsFilter = createFilter([/favicon.ico/]);\nexport const uninstrument = registerInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        return urlsFilter(request.url);\n      },\n      requestHook: markSpan,\n    }),\n    new NestInstrumentation(),\n    getPrismaInstrumentation(),\n  ],\n});",
          "anchor": "typescript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/36a06b197a4e4a24be6135aac7979c16",
          "_highlightResult": {
            "title": {
              "value": "TypeScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "/*tracing.ts*/\nimport opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { NestInstrumentation } from \"@opentelemetry/instrumentation-nestjs-core\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan,\n  MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { IncomingMessage } from \"http\";\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: \"test-tracing-service\",\n    [SemanticResourceAttributes.SERVICE_VERSION]: \"1.0.0\",\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n  process.env.EXPORTER_URL,\n  process.env.EXPORTER_API_KEY,\n  {},\n);\ntracerProvider.addSpanProcessor(new SimpleSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager().enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\ntracerProvider.register();\nconst urlsFilter = createFilter([/favicon.ico/]);\nexport const uninstrument = registerInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        return urlsFilter(request.url);\n      },\n      requestHook: markSpan,\n    }),\n    new NestInstrumentation(),\n    getPrismaInstrumentation(),\n  ],\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "293452d073e74ef69345ab7069863e46",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Declare Environment",
          "body": "Your Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
          "anchor": "declare-environment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/293452d073e74ef69345ab7069863e46",
          "_highlightResult": {
            "title": {
              "value": "Declare Environment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Your Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "0c77dc095aaf445fa32f57cc281c1c2f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "JavaScript",
          "body": "",
          "anchor": "javascript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/0c77dc095aaf445fa32f57cc281c1c2f",
          "_highlightResult": {
            "title": {
              "value": "JavaScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "032fac8a448e43d3bb08593580b74d9a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "METIS_ENVIRONMENT=PRODUCTION",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/032fac8a448e43d3bb08593580b74d9a",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_ENVIRONMENT=PRODUCTION",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "rDj9AYu5zsSdfBd1JgCc",
          "page": "NsL8gzK0buon8ujbPmXc",
          "section": "01ab8eb53422418aa5fa181ad46e3a40",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NsL8gzK0buon8ujbPmXc/01ab8eb53422418aa5fa181ad46e3a40",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "NjykeFiFtev3OuYGf2bl",
          "section": "d4f84b031cf64873b40681e9bb7ac8ea",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Deploy PMC using CloudFormation",
          "body": "Open our CloudFormation Template and use the following guide-\n\nMake sure the following link populates the field Template URL\n\nAWS Quick Create Stack\n\n2. Name the stack. The default name is MetisMetadataCollector.\n\n3. Enter a valid Cluster Name where you want to launch the PMC. \n\n4. Enter the Connection string to the database you would like to collect metadata from, in the following pattern-\n\npostgresql://user:password@host:port/database_name\n\nYou can also collect metadata from multiple databases by chaining multiple Connection Strings with a ; between them.\n\nFor Example- \n\npostgresql://user:password@host:port/database_name;postgresql://user:password@host:port/database_name;postgresql://user:password@host:port/database_name;postgresql://user:password@host:port/database_name\n\n4. Enter your API Key in MetisAPIKey field.\n\n5. Choose a Security Group, make sure it has access to your database. \n\n6. Choose a Subnet ID. If you run your database on AWS, make sure it's in the same VPC as your database's VPC.\n\n7. Select the 3 checkboxes to acknowledge the AWS operations. \n\nClick on Create Stack.",
          "anchor": "deploy-pmc-using-cloudformation",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NjykeFiFtev3OuYGf2bl/d4f84b031cf64873b40681e9bb7ac8ea",
          "_highlightResult": {
            "title": {
              "value": "Deploy PMC using CloudFormation",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open our CloudFormation Template and use the following guide-\n\nMake sure the following link populates the field Template URL\n\nAWS Quick Create Stack\n\n2. Name the stack. The default name is MetisMetadataCollector.\n\n3. Enter a valid Cluster Name where you want to launch the PMC. \n\n4. Enter the Connection string to the database you would like to collect metadata from, in the following pattern-\n\npostgresql://user:password@host:port/database_name\n\nYou can also collect metadata from multiple databases by chaining multiple Connection Strings with a ; between them.\n\nFor Example- \n\npostgresql://user:password@host:port/database_name;postgresql://user:password@host:port/database_name;postgresql://user:password@host:port/database_name;postgresql://user:password@host:port/database_name\n\n4. Enter your API Key in MetisAPIKey field.\n\n5. Choose a Security Group, make sure it has access to your database. \n\n6. Choose a Subnet ID. If you run your database on AWS, make sure it's in the same VPC as your database's VPC.\n\n7. Select the 3 checkboxes to acknowledge the AWS operations. \n\nClick on Create Stack.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "NjykeFiFtev3OuYGf2bl",
          "section": "1301f4abd27946499ade6ef47e859030",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Only Postgres 12 and higher is supported.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NjykeFiFtev3OuYGf2bl/1301f4abd27946499ade6ef47e859030",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Only Postgres 12 and higher is supported.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "initial_NVAo6Jrieip4MCGi2k9f_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "The Workflow",
          "body": "In this tutorial, you'll learn how to analyze an SQL command using Metis CLI. First, you'll configure a connection to the DB. Then you'll run an analysis on the SQL Command. The analysis can be based on the Estimated or the Actual plan. \nThe Estimated plan means the SQL command does not run. Instead, the DB engine uses statistics to evaluate what tables and indexes to use and how many rows will be read and returned. The process is very fast but sometimes not as accurate as Actual plan. \nThe Actual plan, as the name suggests, means the DB engine runs the query, which might take a long time. When the SQL command finishes running it provides detailed stats about its execution.\n\nAll of this information is sent to Metis' servers for deep analysis. The CLI returns a direct link to the insights (results) in the web app.   ",
          "anchor": "the-workflow",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/initial_NVAo6Jrieip4MCGi2k9f_block",
          "_highlightResult": {
            "title": {
              "value": "The Workflow",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "In this tutorial, you'll learn how to analyze an SQL command using Metis CLI. First, you'll configure a connection to the DB. Then you'll run an analysis on the SQL Command. The analysis can be based on the Estimated or the Actual plan. \nThe Estimated plan means the SQL command does not run. Instead, the DB engine uses statistics to evaluate what tables and indexes to use and how many rows will be read and returned. The process is very fast but sometimes not as accurate as Actual plan. \nThe Actual plan, as the name suggests, means the DB engine runs the query, which might take a long time. When the SQL command finishes running it provides detailed stats about its execution.\n\nAll of this information is sent to Metis' servers for deep analysis. The CLI returns a direct link to the insights (results) in the web app.   ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "f998571853c54d0fa783592c15b0873b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Configure an API Key",
          "body": "The CLI has a basic UI to show the main insights about the query, the web app provides a richer UI with many more details. An API Key can be found in the Web App, under the page \"API Key\". You can also generate new API Keys on that page. \n\nThe page \"API Keys\" in the web app\n\nIn the CLI, add the API Key using the command setApiKey. For ex. \n\nsetApiKey(\"2pqpXmJ5MKlIofNcUwAe9JECgfmKC9q3R9d5I4q0\") ",
          "anchor": "configure-an-api-key",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/f998571853c54d0fa783592c15b0873b",
          "_highlightResult": {
            "title": {
              "value": "Configure an API Key",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The CLI has a basic UI to show the main insights about the query, the web app provides a richer UI with many more details. An API Key can be found in the Web App, under the page \"API Key\". You can also generate new API Keys on that page. \n\nThe page \"API Keys\" in the web app\n\nIn the CLI, add the API Key using the command setApiKey. For ex. \n\nsetApiKey(\"2pqpXmJ5MKlIofNcUwAe9JECgfmKC9q3R9d5I4q0\") ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "b79b6c6fd73749069d1690ac36be0f40",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Analyze a query ",
          "body": "Analyze a query using the command queryAnalysis.  The command generates the estimated execution plan. The CLI shows a quick analysis of the query and also sends the data to Metis Web App.  \n\nqueryAnalysis(\"SQL_QUERY\")\n\nfor ex. \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\")\n\nYou can also analyze the query using the actual execution plan.  \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\").execPlanType(\"Actual\")va\n\nThe CLI prints a basic query analysis\n\npartial results of a query analysis",
          "anchor": "analyze-a-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/b79b6c6fd73749069d1690ac36be0f40",
          "_highlightResult": {
            "title": {
              "value": "Analyze a query ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Analyze a query using the command queryAnalysis.  The command generates the estimated execution plan. The CLI shows a quick analysis of the query and also sends the data to Metis Web App.  \n\nqueryAnalysis(\"SQL_QUERY\")\n\nfor ex. \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\")\n\nYou can also analyze the query using the actual execution plan.  \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\").execPlanType(\"Actual\")va\n\nThe CLI prints a basic query analysis\n\npartial results of a query analysis",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "b5b14c0ac48247e48a04637e64117c48",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Main Commands",
          "body": " In this tutorial you'll use the following commands: \n\nAdd a new connection to a Postgres server using a prompt\naddApiKey(api-key)\nAdd an API Key. It is required to view the results in the Metis Web App\nqueryAnalysis(sql)\nAnalyze an SQL query \nconnect(connection-name)\nConnect to the Postgres Server\naddConnection()",
          "anchor": "main-commands",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/b5b14c0ac48247e48a04637e64117c48",
          "_highlightResult": {
            "title": {
              "value": "Main Commands",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": " In this tutorial you'll use the following commands: \n\nAdd a new connection to a Postgres server using a prompt\naddApiKey(api-key)\nAdd an API Key. It is required to view the results in the Metis Web App\nqueryAnalysis(sql)\nAnalyze an SQL query \nconnect(connection-name)\nConnect to the Postgres Server\naddConnection()",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "7ff9bef008e241f59dd1a4fdc67ac568",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View the Results in the Web App",
          "body": "At the end of the results, the CLI shows a URL. Click on the link to open the web app. \nSome terminals (such as iTerm2) don't support this functionality. In this case, you'll have to manually copy the URL to the browser. \n\nThe Analysis of the query in the Web App: ",
          "anchor": "view-the-results-in-the-web-app",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/7ff9bef008e241f59dd1a4fdc67ac568",
          "_highlightResult": {
            "title": {
              "value": "View the Results in the Web App",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "At the end of the results, the CLI shows a URL. Click on the link to open the web app. \nSome terminals (such as iTerm2) don't support this functionality. In this case, you'll have to manually copy the URL to the browser. \n\nThe Analysis of the query in the Web App: ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "5fb2c56539774e7bb1242c07520d7958",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Add a New Connection to Postgres",
          "body": "Add a new connection to a Postgres DB using the command addConnection(). It starts a prompt so you can easily type the properties of the connection string. \n\naddConnection()\n\nYou can add a connection string in one line. The connection string can support advanced features the Wizard doesn't support, such as SSL. \naddConnection(\"neondb\",\"postgres\", \"postgres://itay:password@noisy-sun-123456.cloud.neon.tech:5432/main?ssl=true\")\n\nConnect to the Postgres database.\n\nconnect(\"flights\") \n\nTo view the existing connections use the command listConnections(). ",
          "anchor": "add-a-new-connection-to-postgres",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/5fb2c56539774e7bb1242c07520d7958",
          "_highlightResult": {
            "title": {
              "value": "Add a New Connection to Postgres",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Add a new connection to a Postgres DB using the command addConnection(). It starts a prompt so you can easily type the properties of the connection string. \n\naddConnection()\n\nYou can add a connection string in one line. The connection string can support advanced features the Wizard doesn't support, such as SSL. \naddConnection(\"neondb\",\"postgres\", \"postgres://itay:password@noisy-sun-123456.cloud.neon.tech:5432/main?ssl=true\")\n\nConnect to the Postgres database.\n\nconnect(\"flights\") \n\nTo view the existing connections use the command listConnections(). ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "52bbe81a3b22497b886cacb0a6078ced",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Tip - Multi-line SQL string",
          "body": "Sometimes the SQL command is a multi-line one. In this case, the CLI must work in editor mode to continue the command even when a new line starts.\nType .editor \nThen enter the SQL command using the character ` . Notice, do NOT use \" (double quote) or ' (single quote). \n\nMulti-line SQL Command. Don't forget to run CTRL + D to finish",
          "anchor": "tip-multi-line-sql-string",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/52bbe81a3b22497b886cacb0a6078ced",
          "_highlightResult": {
            "title": {
              "value": "Tip - Multi-line SQL string",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Sometimes the SQL command is a multi-line one. In this case, the CLI must work in editor mode to continue the command even when a new line starts.\nType .editor \nThen enter the SQL command using the character ` . Notice, do NOT use \" (double quote) or ' (single quote). \n\nMulti-line SQL Command. Don't forget to run CTRL + D to finish",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Be2WWIwcOdrAMOvzux6Z",
          "page": "NVAo6Jrieip4MCGi2k9f",
          "section": "2b6d21fbebce4cf28c588e6bc9790dc1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Run the CLI",
          "body": "If you haven't downloaded the CLI, please run \n\nbrew tap metis-data/homebrew-cli-brew\nbrew install metis-cli\n\n Else, you can download the binary from here. \n\nRun The CLI \n\nmetis-cli\n\nThe screenshots in this tutorial are of Warp (https://www.warp.dev/) terminal.",
          "anchor": "run-the-cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/NVAo6Jrieip4MCGi2k9f/2b6d21fbebce4cf28c588e6bc9790dc1",
          "_highlightResult": {
            "title": {
              "value": "Run the CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "If you haven't downloaded the CLI, please run \n\nbrew tap metis-data/homebrew-cli-brew\nbrew install metis-cli\n\n Else, you can download the binary from here. \n\nRun The CLI \n\nmetis-cli\n\nThe screenshots in this tutorial are of Warp (https://www.warp.dev/) terminal.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "tPaXL6p602vf3EBtBNqu",
          "page": "Lmu5MYBxyoAP6llhraEY",
          "section": "initial_Lmu5MYBxyoAP6llhraEY_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The command brew install might not update the CLI. In this case try brew update ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/Lmu5MYBxyoAP6llhraEY/initial_Lmu5MYBxyoAP6llhraEY_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The command brew install might not update the CLI. In this case try brew update ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "DvkNby836YnGmNJ7K4Gr",
          "page": "Lmu5MYBxyoAP6llhraEY",
          "section": "79c9c95a81524989b6a4e6d3e7dd3013",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The command brew install might not update the CLI. In this case try brew update \nTo be even more on the safe side try: \n\nbrew update && brew tap metis-data/cli-brew && brew reinstall metis-cli",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/Lmu5MYBxyoAP6llhraEY/79c9c95a81524989b6a4e6d3e7dd3013",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The command brew install might not update the CLI. In this case try brew update \nTo be even more on the safe side try: \n\nbrew update && brew tap metis-data/cli-brew && brew reinstall metis-cli",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "sKZQL2K3bQywhw8PFamP",
          "page": "JWwx9ybR7q10Z0iSbVOL",
          "section": "0f40dbac20a84cfd9459b51c45f359b0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Each Rest API Command received from the SDK is analyzed by Metis and insights are derived. To react the Trace Details Page, click one of the traces in the recent activity table.\n\nTrace Details\n\nThe Timeline component consists of all SQL Commands executed as part of this trace.\n\nAfter selecting an SQL command from the Timeline component, you can through the different tabs to further investigate-\n\nInsights \n\nThe list of derived insights for the selected SQL Command.\n\nSQL\n\nThe actual SQL Command code.\n\nMetrics\n\nDifferent measurments taken by Metis to perform the analysis.\n\nQuery Tale\n\nA visualization of the Execution Plan.\n\nExecution Plan\n\nThe raw Execution Plan, in JSON format.\n\nTables\n\nDetails on which table was accessed using which method.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/JWwx9ybR7q10Z0iSbVOL/0f40dbac20a84cfd9459b51c45f359b0",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Each Rest API Command received from the SDK is analyzed by Metis and insights are derived. To react the Trace Details Page, click one of the traces in the recent activity table.\n\nTrace Details\n\nThe Timeline component consists of all SQL Commands executed as part of this trace.\n\nAfter selecting an SQL command from the Timeline component, you can through the different tabs to further investigate-\n\nInsights \n\nThe list of derived insights for the selected SQL Command.\n\nSQL\n\nThe actual SQL Command code.\n\nMetrics\n\nDifferent measurments taken by Metis to perform the analysis.\n\nQuery Tale\n\nA visualization of the Execution Plan.\n\nExecution Plan\n\nThe raw Execution Plan, in JSON format.\n\nTables\n\nDetails on which table was accessed using which method.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7rb5lqsMvPDavz7rhwI6",
          "page": "IjNVGv05wtsH3ypAPx7i",
          "section": "initial_IjNVGv05wtsH3ypAPx7i_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Quick Start",
          "body": "Prevent DB-related problems from reaching production (again 😤 )! From code to production, Metis runs automatic checks for bad queries, problems with the DB schema and its configuration. Metis can be used on the command line, CI/CD Actions, or manual QA.",
          "anchor": "quick-start",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IjNVGv05wtsH3ypAPx7i/initial_IjNVGv05wtsH3ypAPx7i_block",
          "_highlightResult": {
            "title": {
              "value": "Quick Start",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Prevent DB-related problems from reaching production (again 😤 )! From code to production, Metis runs automatic checks for bad queries, problems with the DB schema and its configuration. Metis can be used on the command line, CI/CD Actions, or manual QA.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7rb5lqsMvPDavz7rhwI6",
          "page": "IjNVGv05wtsH3ypAPx7i",
          "section": "a78a670d807e4ab1ad93c7651ae89479",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Scenario 2:  I work with a Middleware or an ORM. I want to run some tests, as usual, and see if they might cause DB-related problems",
          "body": "Instrument your code with our SDK using a few lines of code. Metis will take care of everything: generating traces, linking the REST / GraphQL to the underline SQL command(s) and analyzing all the SQL commands. ",
          "anchor": "scenario-2-i-work-with-a-middleware-or-an-orm.-i-want-to-run-some-tests-as-usual-and-see-if-they-mig",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IjNVGv05wtsH3ypAPx7i/a78a670d807e4ab1ad93c7651ae89479",
          "_highlightResult": {
            "title": {
              "value": "Scenario 2:  I work with a Middleware or an ORM. I want to run some tests, as usual, and see if they might cause DB-related problems",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Instrument your code with our SDK using a few lines of code. Metis will take care of everything: generating traces, linking the REST / GraphQL to the underline SQL command(s) and analyzing all the SQL commands. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "2YgOooGy93KIq4J2QGWR",
          "page": "IjNVGv05wtsH3ypAPx7i",
          "section": "5368ef9e7c2444088c48fe115c97b284",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Option 2: Analyze a single SQL command using the CLI.",
          "body": "Run an SQL command from the CLI. Metis collects all the metadata required for the analysis: execution plan, tables' size and indexes structure. The analysis can be viewed in the web app (recommended) or in the CLI itself. \n\nThe CLI generates a URL to view the results in the web app. \n\n    ",
          "anchor": "option-2-analyze-a-single-sql-command-using-the-cli.",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IjNVGv05wtsH3ypAPx7i/5368ef9e7c2444088c48fe115c97b284",
          "_highlightResult": {
            "title": {
              "value": "Option 2: Analyze a single SQL command using the CLI.",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run an SQL command from the CLI. Metis collects all the metadata required for the analysis: execution plan, tables' size and indexes structure. The analysis can be viewed in the web app (recommended) or in the CLI itself. \n\nThe CLI generates a URL to view the results in the web app. \n\n    ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7rb5lqsMvPDavz7rhwI6",
          "page": "IjNVGv05wtsH3ypAPx7i",
          "section": "3885e74f230e46a5bfcdc466da1016ff",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "This page should be deleted. Its content should be merged into \"Getting Started\"",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IjNVGv05wtsH3ypAPx7i/3885e74f230e46a5bfcdc466da1016ff",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "This page should be deleted. Its content should be merged into \"Getting Started\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7rb5lqsMvPDavz7rhwI6",
          "page": "IjNVGv05wtsH3ypAPx7i",
          "section": "33dce9da3c56417bbdbdd190f7844bbf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Scenario 1: I have a slow SQL Command,  let's analyze it",
          "body": "Run the query from our CLI or from the Web App. Our engine collects all the necessary information (execution plan, schema or relevant tables, indexes structure, size of the tables...) and analyzes them. \nThe CLI generates a URL so you can just click it to view the detailed analysis in the Web App. ",
          "anchor": "scenario-1-i-have-a-slow-sql-command-lets-analyze-it",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IjNVGv05wtsH3ypAPx7i/33dce9da3c56417bbdbdd190f7844bbf",
          "_highlightResult": {
            "title": {
              "value": "Scenario 1: I have a slow SQL Command,  let's analyze it",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the query from our CLI or from the Web App. Our engine collects all the necessary information (execution plan, schema or relevant tables, indexes structure, size of the tables...) and analyzes them. \nThe CLI generates a URL so you can just click it to view the detailed analysis in the Web App. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7rb5lqsMvPDavz7rhwI6",
          "page": "IjNVGv05wtsH3ypAPx7i",
          "section": "2587f0f4d39a44b28b22b7d5c0c36eeb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Scenario 3: I just want to quickly get an overview of my  DB ",
          "body": "Configure Metis Metadata Collector or your Production DB. The collector has almost zero impact on performances. As the name suggests, it only collects metadata, therefore none of the actual data is used for the analysis.  \n\n    ",
          "anchor": "scenario-3-i-just-want-to-quickly-get-an-overview-of-my-db",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IjNVGv05wtsH3ypAPx7i/2587f0f4d39a44b28b22b7d5c0c36eeb",
          "_highlightResult": {
            "title": {
              "value": "Scenario 3: I just want to quickly get an overview of my  DB ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Configure Metis Metadata Collector or your Production DB. The collector has almost zero impact on performances. As the name suggests, it only collects metadata, therefore none of the actual data is used for the analysis.  \n\n    ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "IPvSrYvR5AEm1jR8PFQG",
          "section": "63eb2db71f79459996bd6ec4796f8c85",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "On this page you can:\n\nView the recent activity\nFilter the data by date, API Key and other filters\nView how many problems were found for each REST API call\n\nTraces - Recent Activity\n\nClick on a Trace to view its details:\n\nA Trace UI component to see the duration of each span (SQL command related to the trace). Notice that Metis only shows the SQL spans of a trace.\nMain metrics of the Trace\n\nClick on an SQL span to view all its details. If there is only one SQL span, it got selected automatically.\n\nThe insights with the remediation plan and the reason behind the rule.\nThe SQL command\nThe JSON of the execution plan\nA graphic UI of the execution plan, powered by http://explain.dalibo.com.\nDetailed Metrics the Rule Engine uses to check the rules.\nDetailed information about each table used by the query\nThe tags used by the Trace\n\nTables Info\n\nexplain.dalibo.com",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/IPvSrYvR5AEm1jR8PFQG/63eb2db71f79459996bd6ec4796f8c85",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "On this page you can:\n\nView the recent activity\nFilter the data by date, API Key and other filters\nView how many problems were found for each REST API call\n\nTraces - Recent Activity\n\nClick on a Trace to view its details:\n\nA Trace UI component to see the duration of each span (SQL command related to the trace). Notice that Metis only shows the SQL spans of a trace.\nMain metrics of the Trace\n\nClick on an SQL span to view all its details. If there is only one SQL span, it got selected automatically.\n\nThe insights with the remediation plan and the reason behind the rule.\nThe SQL command\nThe JSON of the execution plan\nA graphic UI of the execution plan, powered by http://explain.dalibo.com.\nDetailed Metrics the Rule Engine uses to check the rules.\nDetailed information about each table used by the query\nThe tags used by the Trace\n\nTables Info\n\nexplain.dalibo.com",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "NTGk9qFpWYpY7IcHEo47",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "initial_HWfFNVYog5wia7jS45oE_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "About Query Analysis",
          "body": "The command queryAnalysis() expects a valid SQL command. \n\nThe SQL command runs using the currently open connection, there is no need to explicitly specify its name. If you work in CLI mode, then the command uses the connections configured as the default one. ",
          "anchor": "about-query-analysis",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/initial_HWfFNVYog5wia7jS45oE_block",
          "_highlightResult": {
            "title": {
              "value": "About Query Analysis",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The command queryAnalysis() expects a valid SQL command. \n\nThe SQL command runs using the currently open connection, there is no need to explicitly specify its name. If you work in CLI mode, then the command uses the connections configured as the default one. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "cd87f125bb7e4b51aca294ce4eec382f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Features",
          "body": "Information about each table used by the query.\nThe Execution Plan.\nThe Metrics calculated from the Execution Plan, DB Schema and Data.\nInsights evaluated from the metrics.\nWeb app link for more information.",
          "anchor": "features",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/cd87f125bb7e4b51aca294ce4eec382f",
          "_highlightResult": {
            "title": {
              "value": "Features",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Information about each table used by the query.\nThe Execution Plan.\nThe Metrics calculated from the Execution Plan, DB Schema and Data.\nInsights evaluated from the metrics.\nWeb app link for more information.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "cc0b764110b34ef8a32a7f6199294ee6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "metis-cli query-analysis \"select count (*) from sales.order_lines where quantity > 315\" --show-plan",
          "anchor": "cli-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/cc0b764110b34ef8a32a7f6199294ee6",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli query-analysis \"select count (*) from sales.order_lines where quantity > 315\" --show-plan",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "NTGk9qFpWYpY7IcHEo47",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "c3cf770d4b0d46379a3261bdb534a34a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Example 4 - Show the Metrics",
          "body": "The Metrics",
          "anchor": "example-4-show-the-metrics",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/c3cf770d4b0d46379a3261bdb534a34a",
          "_highlightResult": {
            "title": {
              "value": "Example 4 - Show the Metrics",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Metrics",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "c29033debeaf47e4bd6ba0520495c54a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "queryAnalysis(\"select count (*) from sales.order_lines where quantity > 315\").showPlan(true)",
          "anchor": "repl-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/c29033debeaf47e4bd6ba0520495c54a",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "queryAnalysis(\"select count (*) from sales.order_lines where quantity > 315\").showPlan(true)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "bfc5db79fecf4c96b9913ebd18d5a40d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Actual vs Estimated Plan",
          "body": "We recommend you go over our actual vs estimated plan explanation here-\n\nBy default, the CLI uses the estimated plan.",
          "anchor": "actual-vs-estimated-plan",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/bfc5db79fecf4c96b9913ebd18d5a40d",
          "_highlightResult": {
            "title": {
              "value": "Actual vs Estimated Plan",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "We recommend you go over our actual vs estimated plan explanation here-\n\nBy default, the CLI uses the estimated plan.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "63b528a7e3b8486c8107a7d693ac9d3d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The command queryAnalysis()expects a valid SQL command. \n\nThe SQL command runs using the currently open connection (The Default Connection, or the connection you've connected to in REPL Mode), there is no need to explicitly specify its name.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/63b528a7e3b8486c8107a7d693ac9d3d",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The command queryAnalysis()expects a valid SQL command. \n\nThe SQL command runs using the currently open connection (The Default Connection, or the connection you've connected to in REPL Mode), there is no need to explicitly specify its name.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "5c169d1fa8814838aeaec1d00bd6e00e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "queryAnalysis(\"select count (*) from sales.order_lines where quantity > 315\")",
          "anchor": "repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/5c169d1fa8814838aeaec1d00bd6e00e",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "queryAnalysis(\"select count (*) from sales.order_lines where quantity > 315\")",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "55f1713fa1f442e08f66fc7d4c964450",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Multi-Line SQL Command",
          "body": "To analyze queries that do not fit in one line use a variable-\n\nmy_query=\"select * from postgres_air.flight limit 100\"\nmetis-cli query-analysis \"$my_query\"",
          "anchor": "multi-line-sql-command",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/55f1713fa1f442e08f66fc7d4c964450",
          "_highlightResult": {
            "title": {
              "value": "Multi-Line SQL Command",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To analyze queries that do not fit in one line use a variable-\n\nmy_query=\"select * from postgres_air.flight limit 100\"\nmetis-cli query-analysis \"$my_query\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "yqRFlkDud1bYGIWdRa3k",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "468b9599403c4ff5b14f12007a769049",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Example 3 - Multi-Line SQL Command",
          "body": "To analyze queries that do not fit in one line use a variable.\n\nmy_query=\"select * from postgres_air.flight limit 100\"\nmetis-cli query-analysis \"$my_query\"",
          "anchor": "example-3-multi-line-sql-command",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/468b9599403c4ff5b14f12007a769049",
          "_highlightResult": {
            "title": {
              "value": "Example 3 - Multi-Line SQL Command",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To analyze queries that do not fit in one line use a variable.\n\nmy_query=\"select * from postgres_air.flight limit 100\"\nmetis-cli query-analysis \"$my_query\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "3030a8519bf646348c47860168e8ce84",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Example 1 ",
          "body": "",
          "anchor": "example-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/3030a8519bf646348c47860168e8ce84",
          "_highlightResult": {
            "title": {
              "value": "Example 1 ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "NTGk9qFpWYpY7IcHEo47",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "2ce2e61d8af841419b4726ebe162bc75",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Analyzing a Query",
          "body": "",
          "anchor": "analyzing-a-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/2ce2e61d8af841419b4726ebe162bc75",
          "_highlightResult": {
            "title": {
              "value": "Analyzing a Query",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "2612d12dd6e94a4ab4c6aee026d97b48",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Example 2",
          "body": "Analyze a query, and show the execution plan too",
          "anchor": "example-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/2612d12dd6e94a4ab4c6aee026d97b48",
          "_highlightResult": {
            "title": {
              "value": "Example 2",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Analyze a query, and show the execution plan too",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "xzo2VzyTFcepBzjYjF5W",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "12dfe9ea520b43a7addb975886a701a3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "metis-cli query-analysis \"select count (*) from sales.order_lines where quantity > 315\"",
          "anchor": "cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/12dfe9ea520b43a7addb975886a701a3",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli query-analysis \"select count (*) from sales.order_lines where quantity > 315\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "NTGk9qFpWYpY7IcHEo47",
          "page": "HWfFNVYog5wia7jS45oE",
          "section": "0256fb4fabbb4b3fbdbd3a8c69216996",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Example 5 - Help",
          "body": "Use the .help() function to learn about all the properties and what parameters they expect\n\nREPL: queryAnalysis().help()\n\nCLI: metis query-analysis -h\n\nqueryAnalysis().help() (REPL)\n\nquery-analysis -h (CLI)",
          "anchor": "example-5-help",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HWfFNVYog5wia7jS45oE/0256fb4fabbb4b3fbdbd3a8c69216996",
          "_highlightResult": {
            "title": {
              "value": "Example 5 - Help",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Use the .help() function to learn about all the properties and what parameters they expect\n\nREPL: queryAnalysis().help()\n\nCLI: metis query-analysis -h\n\nqueryAnalysis().help() (REPL)\n\nquery-analysis -h (CLI)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "beb11f74ef00405a9a7d122fdabc68b2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Analyze a query ",
          "body": "Analyze a query using the command queryAnalysis.  The command generates the estimated execution plan. The CLI shows a quick analysis of the query and also sends the data to Metis Web App.  \n\nqueryAnalysis(\"SQL_QUERY\")\n\nfor ex. \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\")\n\nYou can also analyze the query using the actual execution plan.  \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\").execPlanType(\"Actual\")va\n\nThe CLI prints a basic query analysis",
          "anchor": "analyze-a-query",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/beb11f74ef00405a9a7d122fdabc68b2",
          "_highlightResult": {
            "title": {
              "value": "Analyze a query ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Analyze a query using the command queryAnalysis.  The command generates the estimated execution plan. The CLI shows a quick analysis of the query and also sends the data to Metis Web App.  \n\nqueryAnalysis(\"SQL_QUERY\")\n\nfor ex. \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\")\n\nYou can also analyze the query using the actual execution plan.  \n\nqueryAnalysis(\"select * from postgres_air.boarding_pass as b where passenger_id = 4484037\").execPlanType(\"Actual\")va\n\nThe CLI prints a basic query analysis",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "9a9cb1db6d3b4f85a182fb62da982fd0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Configure an API Key",
          "body": "The CLI has a basic UI to show the main insights about the query, the web app provides a richer UI with many more details. An API Key can be found in the Web App, under the page \"API Key\". You can also generate new API Keys on that page.\n\nThe page \"API Keys\" in the web app\n\nIn the CLI, add the API Key using the command setApiKey. For ex. \n\nsetApiKey(\"2pqpXmJ5MKlIofNcUwAe9JECgfmKC9q3R9d5I4q0\")",
          "anchor": "configure-an-api-key",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/9a9cb1db6d3b4f85a182fb62da982fd0",
          "_highlightResult": {
            "title": {
              "value": "Configure an API Key",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The CLI has a basic UI to show the main insights about the query, the web app provides a richer UI with many more details. An API Key can be found in the Web App, under the page \"API Key\". You can also generate new API Keys on that page.\n\nThe page \"API Keys\" in the web app\n\nIn the CLI, add the API Key using the command setApiKey. For ex. \n\nsetApiKey(\"2pqpXmJ5MKlIofNcUwAe9JECgfmKC9q3R9d5I4q0\")",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "9946679ed67945819890c30d47a361e5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Main Commands",
          "body": "In this tutorial you'll use the following commands:\n\naddConnection()\nAdd a new connection to a Postgres server using a prompt\naddApiKey(api-key)\nAdd an API Key. It is required to view the results in the Metis Web App\nconnect(connection-name)\nConnect to the Postgres Server\nqueryAnalysis(sql)\nAnalyze an SQL query",
          "anchor": "main-commands",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/9946679ed67945819890c30d47a361e5",
          "_highlightResult": {
            "title": {
              "value": "Main Commands",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "In this tutorial you'll use the following commands:\n\naddConnection()\nAdd a new connection to a Postgres server using a prompt\naddApiKey(api-key)\nAdd an API Key. It is required to view the results in the Metis Web App\nconnect(connection-name)\nConnect to the Postgres Server\nqueryAnalysis(sql)\nAnalyze an SQL query",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "5c9c3e000976493783b70ce0e4775b48",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Run the CLI",
          "body": "If you haven't downloaded the CLI, please run\n\nbrew tap metis-data/homebrew-cli-brew\nbrew install metis-cli\n\nElse, you can download the binary from here.\n\nRun The CLI\n\nmetis-cli\n\nThe screenshots in this tutorial are of Warp (https://www.warp.dev/) terminal.",
          "anchor": "run-the-cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/5c9c3e000976493783b70ce0e4775b48",
          "_highlightResult": {
            "title": {
              "value": "Run the CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "If you haven't downloaded the CLI, please run\n\nbrew tap metis-data/homebrew-cli-brew\nbrew install metis-cli\n\nElse, you can download the binary from here.\n\nRun The CLI\n\nmetis-cli\n\nThe screenshots in this tutorial are of Warp (https://www.warp.dev/) terminal.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "509ad82438274da7b738018d87af1c7b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View the Results in the Web App",
          "body": "At the end of the results, the CLI shows a URL. Click on the link to open the web app. Some terminals (such as iTerm2) don't support this functionality. In this case, you'll have to manually copy the URL to the browser.The Analysis of the query in the Web App:\n\nThe Analysis of the query in the Web App: ",
          "anchor": "view-the-results-in-the-web-app",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/509ad82438274da7b738018d87af1c7b",
          "_highlightResult": {
            "title": {
              "value": "View the Results in the Web App",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "At the end of the results, the CLI shows a URL. Click on the link to open the web app. Some terminals (such as iTerm2) don't support this functionality. In this case, you'll have to manually copy the URL to the browser.The Analysis of the query in the Web App:\n\nThe Analysis of the query in the Web App: ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "49bcc5ceec9d4e05812a47e483bdb31b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Add a New Connection to Postgres",
          "body": "Add a new connection to a Postgres DB using the command addConnection(). It starts a prompt so you can easily type the properties of the connection string\n\naddConnection()\n\nYou can add a connection string in one line. The connection string can support advanced features the Wizard doesn't support, such as SSL.\naddConnection(\"neondb\",\"postgres\", \"postgres://itay:password@noisy-sun-123456.cloud.neon.tech:5432/main?ssl=true\")​\n\nConnect to the Postgres database.\n\nconnect(\"flights\")\n\nTo view the existing connections use the command listConnections().",
          "anchor": "add-a-new-connection-to-postgres",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/49bcc5ceec9d4e05812a47e483bdb31b",
          "_highlightResult": {
            "title": {
              "value": "Add a New Connection to Postgres",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Add a new connection to a Postgres DB using the command addConnection(). It starts a prompt so you can easily type the properties of the connection string\n\naddConnection()\n\nYou can add a connection string in one line. The connection string can support advanced features the Wizard doesn't support, such as SSL.\naddConnection(\"neondb\",\"postgres\", \"postgres://itay:password@noisy-sun-123456.cloud.neon.tech:5432/main?ssl=true\")​\n\nConnect to the Postgres database.\n\nconnect(\"flights\")\n\nTo view the existing connections use the command listConnections().",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "3755d4b072854a2bbd96f327dfdc34f1",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "The Workflow",
          "body": "In this tutorial, you'll learn how to analyze an SQL command using Metis CLI. First, you'll configure a connection to the DB. Then you'll run an analysis on the SQL Command. The analysis can be based on the Estimated or the Actual plan.\n\nThe Estimated plan means the SQL command does not run. Instead, the DB engine uses statistics to evaluate what tables and indexes to use and how many rows will be read and returned. The process is very fast but sometimes not as accurate as Actual plan.\nThe Actual plan, as the name suggests, means the DB engine runs the query, which might take a long time. When the SQL command finishes running it provides detailed stats about its execution. \n\nAll of this information is sent to Metis' servers for deep analysis. The CLI returns a direct link to the insights (results) in the web app.",
          "anchor": "the-workflow",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/3755d4b072854a2bbd96f327dfdc34f1",
          "_highlightResult": {
            "title": {
              "value": "The Workflow",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "In this tutorial, you'll learn how to analyze an SQL command using Metis CLI. First, you'll configure a connection to the DB. Then you'll run an analysis on the SQL Command. The analysis can be based on the Estimated or the Actual plan.\n\nThe Estimated plan means the SQL command does not run. Instead, the DB engine uses statistics to evaluate what tables and indexes to use and how many rows will be read and returned. The process is very fast but sometimes not as accurate as Actual plan.\nThe Actual plan, as the name suggests, means the DB engine runs the query, which might take a long time. When the SQL command finishes running it provides detailed stats about its execution. \n\nAll of this information is sent to Metis' servers for deep analysis. The CLI returns a direct link to the insights (results) in the web app.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "HEUCm0xlp1Z1JpxJamvn",
          "section": "205e1fc2945843dd8cb900e6dad5d214",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Tip - Multi-line SQL string",
          "body": "Sometimes the SQL command is a multi-line one. In this case, the CLI must work in editor mode to continue the command even when a new line starts.\nType .editor \nThen enter the SQL command using the character ` . Notice, do NOT use \" (double quote) or ' (single quote). \n\nMulti-line SQL Command. Don't forget to run CTRL + D to finish",
          "anchor": "tip-multi-line-sql-string",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/HEUCm0xlp1Z1JpxJamvn/205e1fc2945843dd8cb900e6dad5d214",
          "_highlightResult": {
            "title": {
              "value": "Tip - Multi-line SQL string",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Sometimes the SQL command is a multi-line one. In this case, the CLI must work in editor mode to continue the command even when a new line starts.\nType .editor \nThen enter the SQL command using the character ` . Notice, do NOT use \" (double quote) or ' (single quote). \n\nMulti-line SQL Command. Don't forget to run CTRL + D to finish",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "946IiImcWNMUiZrH18Ad",
          "page": "GdSTSYSFTYlY8AcpYaWT",
          "section": "initial_GdSTSYSFTYlY8AcpYaWT_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "The web app shows a white screen",
          "body": "Problem Description: \n\nRoot cause: something went wrong with the authentication flow and the error messages\n\nSolution: \n1. Right click on the browser, Inspect\n2. Application, Cookies\n3. Delete the cookies\n4. Go to app.metisdata.io again",
          "anchor": "the-web-app-shows-a-white-screen",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/GdSTSYSFTYlY8AcpYaWT/initial_GdSTSYSFTYlY8AcpYaWT_block",
          "_highlightResult": {
            "title": {
              "value": "The web app shows a white screen",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Problem Description: \n\nRoot cause: something went wrong with the authentication flow and the error messages\n\nSolution: \n1. Right click on the browser, Inspect\n2. Application, Cookies\n3. Delete the cookies\n4. Go to app.metisdata.io again",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TDXBiI4xF3PPhLmh0KvU",
          "page": "F8eEw21bp8Q1dNkINTfY",
          "section": "initial_F8eEw21bp8Q1dNkINTfY_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Prevent DB-related problems from reaching production (again 😤 )! From code to production, Metis runs automatic checks for bad queries, problems with the DB schema and its configuration. Metis can be used on the command line, CI/CD Actions, or manual QA.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/F8eEw21bp8Q1dNkINTfY/initial_F8eEw21bp8Q1dNkINTfY_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Prevent DB-related problems from reaching production (again 😤 )! From code to production, Metis runs automatic checks for bad queries, problems with the DB schema and its configuration. Metis can be used on the command line, CI/CD Actions, or manual QA.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TDXBiI4xF3PPhLmh0KvU",
          "page": "F8eEw21bp8Q1dNkINTfY",
          "section": "cae35d07a2a54dcfb46c8e159bf382cf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "What we do",
          "body": "Metis proactively collects SQL commands and all the necessary metadata required for a deep analysis of those SQL commands.",
          "anchor": "what-we-do",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/F8eEw21bp8Q1dNkINTfY/cae35d07a2a54dcfb46c8e159bf382cf",
          "_highlightResult": {
            "title": {
              "value": "What we do",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis proactively collects SQL commands and all the necessary metadata required for a deep analysis of those SQL commands.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TDXBiI4xF3PPhLmh0KvU",
          "page": "F8eEw21bp8Q1dNkINTfY",
          "section": "a7cd3c745c6d40fc97787577b989eb53",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "How we do it ",
          "body": "By collecting all the relevant observability data:  the execution plan (actual or estimated), the schema of all tables used by the SQL, indexes schema, indexes usage in the production env, column statistics, and DB configuration. \nThe data is organized and prepared for analysis. \nAn advanced rule engine runs dozens of tests to find problems and their severity. The system also provides high-quality explanations about the root cause of the problems and suggests remediation plans to solve them.  ",
          "anchor": "how-we-do-it",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/F8eEw21bp8Q1dNkINTfY/a7cd3c745c6d40fc97787577b989eb53",
          "_highlightResult": {
            "title": {
              "value": "How we do it ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "By collecting all the relevant observability data:  the execution plan (actual or estimated), the schema of all tables used by the SQL, indexes schema, indexes usage in the production env, column statistics, and DB configuration. \nThe data is organized and prepared for analysis. \nAn advanced rule engine runs dozens of tests to find problems and their severity. The system also provides high-quality explanations about the root cause of the problems and suggests remediation plans to solve them.  ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "TDXBiI4xF3PPhLmh0KvU",
          "page": "F8eEw21bp8Q1dNkINTfY",
          "section": "7f47bc820a2747998d1523dfd77d66bf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Our Mission",
          "body": "To leverage impeccable engineering together with advanced tools to move fast without breaking anything in the DB so they can focus on what really matters - building world-changing products.",
          "anchor": "our-mission",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/F8eEw21bp8Q1dNkINTfY/7f47bc820a2747998d1523dfd77d66bf",
          "_highlightResult": {
            "title": {
              "value": "Our Mission",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To leverage impeccable engineering together with advanced tools to move fast without breaking anything in the DB so they can focus on what really matters - building world-changing products.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "e2896e67ceeb46f58ff0d18c1040d17e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Development",
          "body": "METIS_TAG=DEVELOPMENT",
          "anchor": "development",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/e2896e67ceeb46f58ff0d18c1040d17e",
          "_highlightResult": {
            "title": {
              "value": "Development",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=DEVELOPMENT",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "dbb917d17a7540c58a713c85c2dbca2d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "John's Local Enviroment",
          "body": "METIS_TAG=JOHN_LOCAL",
          "anchor": "johns-local-enviroment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/dbb917d17a7540c58a713c85c2dbca2d",
          "_highlightResult": {
            "title": {
              "value": "John's Local Enviroment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=JOHN_LOCAL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "d33e312aba9645c5844ae1c181f1588a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/d33e312aba9645c5844ae1c181f1588a",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "bb39d4e0e1314e3eb57e0011d9567c3f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-nest-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nCreate a file named tracing.ts, which will contain your Metis setup code.",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/bb39d4e0e1314e3eb57e0011d9567c3f",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-nest-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nCreate a file named tracing.ts, which will contain your Metis setup code.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "a2ef1f3bd53a4abca86ced8fa653a783",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM, Node.js and NestJS.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/a2ef1f3bd53a4abca86ced8fa653a783",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM, Node.js and NestJS.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ZgO99hZoSv2xkMgEOAgs",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "701ecb4c385a4a78a6bfa29891063995",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "JavaScript",
          "body": "",
          "anchor": "javascript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/701ecb4c385a4a78a6bfa29891063995",
          "_highlightResult": {
            "title": {
              "value": "JavaScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "6ec6610dd3b44658982aea6e0e19cc2d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/6ec6610dd3b44658982aea6e0e19cc2d",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "3d907f6d38eb48b1b456c61e337f91a5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Declare Environment",
          "body": "Your Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
          "anchor": "declare-environment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/3d907f6d38eb48b1b456c61e337f91a5",
          "_highlightResult": {
            "title": {
              "value": "Declare Environment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Your Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "sNJ8e33UVASrWW5tKvWD",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "2852dc12381942b6a0d4cbb123c40ebb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "TypeScript",
          "body": "/*tracing.ts*/\nimport opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { NestInstrumentation } from \"@opentelemetry/instrumentation-nestjs-core\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan,\n  MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { IncomingMessage } from \"http\";\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: \"test-tracing-service\",\n    [SemanticResourceAttributes.SERVICE_VERSION]: \"1.0.0\",\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n  process.env.EXPORTER_URL,\n  process.env.EXPORTER_API_KEY,\n  {},\n);\ntracerProvider.addSpanProcessor(new SimpleSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager().enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\ntracerProvider.register();\nconst urlsFilter = createFilter([/favicon.ico/]);\nexport const uninstrument = registerInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        return urlsFilter(request.url);\n      },\n      requestHook: markSpan,\n    }),\n    new NestInstrumentation(),\n    getPrismaInstrumentation(),\n  ],\n});",
          "anchor": "typescript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/2852dc12381942b6a0d4cbb123c40ebb",
          "_highlightResult": {
            "title": {
              "value": "TypeScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "/*tracing.ts*/\nimport opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { NestInstrumentation } from \"@opentelemetry/instrumentation-nestjs-core\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan,\n  MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { IncomingMessage } from \"http\";\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: \"test-tracing-service\",\n    [SemanticResourceAttributes.SERVICE_VERSION]: \"1.0.0\",\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n  process.env.EXPORTER_URL,\n  process.env.EXPORTER_API_KEY,\n  {},\n);\ntracerProvider.addSpanProcessor(new SimpleSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager().enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\ntracerProvider.register();\nconst urlsFilter = createFilter([/favicon.ico/]);\nexport const uninstrument = registerInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        return urlsFilter(request.url);\n      },\n      requestHook: markSpan,\n    }),\n    new NestInstrumentation(),\n    getPrismaInstrumentation(),\n  ],\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "4CbyQ5Cj0iFLiyxeLXEB",
          "page": "ELEUS2FZHtbGkqsAuOx2",
          "section": "0ceb053f684640029fa2853a9b79ed4b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "METIS_TAG=PRODUCTION",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/ELEUS2FZHtbGkqsAuOx2/0ceb053f684640029fa2853a9b79ed4b",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=PRODUCTION",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "zVrzS6x9k0wmDU1xpZ1l",
          "sheet": "xokQ3kNnshQ8QnD7rMZs",
          "section": "fc3a1dd478714823abb78bd85a884f9f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Run a command",
          "body": "One of the very first things you may want to do with metis-cli , is creating a new connection to your database. \n\nmetis-cli add-connection \"connection-name\" \"postgres\" \\\n\"postgresql://user:password@1.2.3.4:5432/database-name\" \\\n\"connection-description\"",
          "anchor": "run-a-command",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/EFCBwThD7QNxucr20kLS/zVrzS6x9k0wmDU1xpZ1l/fc3a1dd478714823abb78bd85a884f9f",
          "_highlightResult": {
            "title": {
              "value": "Run a command",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "One of the very first things you may want to do with metis-cli , is creating a new connection to your database. \n\nmetis-cli add-connection \"connection-name\" \"postgres\" \\\n\"postgresql://user:password@1.2.3.4:5432/database-name\" \\\n\"connection-description\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "zVrzS6x9k0wmDU1xpZ1l",
          "sheet": "xokQ3kNnshQ8QnD7rMZs",
          "section": "e040db57dc0f49398b7a37de405d38aa",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Update the CLI",
          "body": "brew tap metis-data/cli-brew && brew reinstall metis-cli",
          "anchor": "update-the-cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/EFCBwThD7QNxucr20kLS/zVrzS6x9k0wmDU1xpZ1l/e040db57dc0f49398b7a37de405d38aa",
          "_highlightResult": {
            "title": {
              "value": "Update the CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "brew tap metis-data/cli-brew && brew reinstall metis-cli",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "zVrzS6x9k0wmDU1xpZ1l",
          "sheet": "xokQ3kNnshQ8QnD7rMZs",
          "section": "672e642902664b528a375cbd350cccbf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Installation",
          "body": "brew update && brew tap metis-data/cli-brew && brew reinstall metis-cli\n\nElse, you can download the CLI from GitHub. \n\nThe CLI works only with MacOS and Linux\n\nVerify the installation had finished successfully using  metis-cli --version",
          "anchor": "installation",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/EFCBwThD7QNxucr20kLS/zVrzS6x9k0wmDU1xpZ1l/672e642902664b528a375cbd350cccbf",
          "_highlightResult": {
            "title": {
              "value": "Installation",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "brew update && brew tap metis-data/cli-brew && brew reinstall metis-cli\n\nElse, you can download the CLI from GitHub. \n\nThe CLI works only with MacOS and Linux\n\nVerify the installation had finished successfully using  metis-cli --version",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "EFCBwThD7QNxucr20kLS",
          "page": "zVrzS6x9k0wmDU1xpZ1l",
          "sheet": "xokQ3kNnshQ8QnD7rMZs",
          "section": "5b77d8ed94844934974394289519c6f8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Work in the interactive (REPL) Mode",
          "body": "To work in the interactive mode simply run the command metis-cli . The terminal will show you the current version and wait for your next command. \n\nNow you can run the command as a function, parameters are separated by commas. \n\naddConnection(\"connection-name\", \"postgres\", \"postgresql://user:password@1.2.3.4:5432/database-name\",  \"connection-description\")",
          "anchor": "work-in-the-interactive-repl-mode",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/EFCBwThD7QNxucr20kLS/zVrzS6x9k0wmDU1xpZ1l/5b77d8ed94844934974394289519c6f8",
          "_highlightResult": {
            "title": {
              "value": "Work in the interactive (REPL) Mode",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "To work in the interactive mode simply run the command metis-cli . The terminal will show you the current version and wait for your next command. \n\nNow you can run the command as a function, parameters are separated by commas. \n\naddConnection(\"connection-name\", \"postgres\", \"postgresql://user:password@1.2.3.4:5432/database-name\",  \"connection-description\")",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "kt8sNh7JxVBooIZANRg2",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "f654027fd0b54ca59783e43f31438580",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "OpenTelemetry",
          "body": "The SDK generates a Trace, the REST command caller and every SQL command generated in the code. The technical implementation is a Span (part of a Trace) for the REST command and more Spans for each SQL command, all using the same Trace ID, to allow the backend to show all the spans in the same context.\nGenerating Traces in the code is now a simple task using OpenTelemetry. OpenTelemetry is an open source, vendor agnostic, collection of tools, APIs, and SDKs. It is used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.\nOpenTelemetry provides SDKs for all major Frameworks and ORMs. \n\nAnother cool feature about OpenTelemetry is SQLCommenter. SQLCommenter is a suite of middleware / plugins that enable your ORMs to augment SQL statements before execution, with comments containing information about the code that caused its execution. This helps in easily correlating slow performance with source code and giving insights into backend database performance. In short, it provides some observability into the state of your client-side applications and their impact on the database’s server-side.\n\nSELECT\n    booking.title AS booking_title\nFROM \n    booking\n    /*traceparent='00-59888198e0d98e0d9c1e72d4def4387019030-5fd1362f8aa2affe-1'*/",
          "anchor": "opentelemetry",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/f654027fd0b54ca59783e43f31438580",
          "_highlightResult": {
            "title": {
              "value": "OpenTelemetry",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The SDK generates a Trace, the REST command caller and every SQL command generated in the code. The technical implementation is a Span (part of a Trace) for the REST command and more Spans for each SQL command, all using the same Trace ID, to allow the backend to show all the spans in the same context.\nGenerating Traces in the code is now a simple task using OpenTelemetry. OpenTelemetry is an open source, vendor agnostic, collection of tools, APIs, and SDKs. It is used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.\nOpenTelemetry provides SDKs for all major Frameworks and ORMs. \n\nAnother cool feature about OpenTelemetry is SQLCommenter. SQLCommenter is a suite of middleware / plugins that enable your ORMs to augment SQL statements before execution, with comments containing information about the code that caused its execution. This helps in easily correlating slow performance with source code and giving insights into backend database performance. In short, it provides some observability into the state of your client-side applications and their impact on the database’s server-side.\n\nSELECT\n    booking.title AS booking_title\nFROM \n    booking\n    /*traceparent='00-59888198e0d98e0d9c1e72d4def4387019030-5fd1362f8aa2affe-1'*/",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "l5neVQOGn5KcMpu5IxP0",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "e3a1b53d279840edb5ca729a6fa4f00e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "OpenTelemetry",
          "body": "The SDK generates a Trace, the REST command caller and every SQL command generated in the code. The technical implementation is a Span (part of a Trace) for the REST command and more Spans for each SQL command, all using the same Trace ID, to allow the backend to show all the spans in the same context.\nGenerating Traces in the code is now a simple task using OpenTelemetry. OpenTelemetry is an open source, vendor agnostic, collection of tools, APIs, and SDKs. It is used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.\nOpenTelemetry provides SDKs for all major Frameworks and ORMs. \n\nAnother cool feature about OpenTelemetry is SQLCommenter. SQLCommenter is a suite of middleware / plugins that enable your ORMs to augment SQL statements before execution, with comments containing information about the code that caused its execution. This helps in easily correlating slow performance with source code and giving insights into backend database performance. In short, it provides some observability into the state of your client-side applications and their impact on the database’s server-side.\n\nSELECT\n    booking.title AS booking_title\nFROM \n    booking\n    /*traceparent='00-59888198e0d98e0d9c1e72d4def4387019030-5fd1362f8aa2affe-1'*/",
          "anchor": "opentelemetry",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/e3a1b53d279840edb5ca729a6fa4f00e",
          "_highlightResult": {
            "title": {
              "value": "OpenTelemetry",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The SDK generates a Trace, the REST command caller and every SQL command generated in the code. The technical implementation is a Span (part of a Trace) for the REST command and more Spans for each SQL command, all using the same Trace ID, to allow the backend to show all the spans in the same context.\nGenerating Traces in the code is now a simple task using OpenTelemetry. OpenTelemetry is an open source, vendor agnostic, collection of tools, APIs, and SDKs. It is used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.\nOpenTelemetry provides SDKs for all major Frameworks and ORMs. \n\nAnother cool feature about OpenTelemetry is SQLCommenter. SQLCommenter is a suite of middleware / plugins that enable your ORMs to augment SQL statements before execution, with comments containing information about the code that caused its execution. This helps in easily correlating slow performance with source code and giving insights into backend database performance. In short, it provides some observability into the state of your client-side applications and their impact on the database’s server-side.\n\nSELECT\n    booking.title AS booking_title\nFROM \n    booking\n    /*traceparent='00-59888198e0d98e0d9c1e72d4def4387019030-5fd1362f8aa2affe-1'*/",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "mVnRfizkif5hkVUNcejG",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "c6b8af55b1d74b60ae0311b2a9a4b68a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK sends database related data into our servers. The data includes queries, execution plans, context, and metadata. The data then in turn goes through analysis and insights are derived.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/c6b8af55b1d74b60ae0311b2a9a4b68a",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK sends database related data into our servers. The data includes queries, execution plans, context, and metadata. The data then in turn goes through analysis and insights are derived.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "l5neVQOGn5KcMpu5IxP0",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "afdc833c20a34481b628431c00f98fd0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Overview",
          "body": "Metis SDK sends database related data into our servers. The data includes queries, execution plans, context, and metadata. The data then in turn goes through analysis and insights are derived. \n\nResult\n\nSupported Frameworks and ORM: \n\nPython SQLAlchemy + Flask\nPython SQLAlchemy + FastAPI\nJavaScript Sequelize + Express JS\nJavascript Prisma + Express JS - Coming Soon\nPython Django - Coming Soon\nGo GORM - Coming Soon",
          "anchor": "overview",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/afdc833c20a34481b628431c00f98fd0",
          "_highlightResult": {
            "title": {
              "value": "Overview",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK sends database related data into our servers. The data includes queries, execution plans, context, and metadata. The data then in turn goes through analysis and insights are derived. \n\nResult\n\nSupported Frameworks and ORM: \n\nPython SQLAlchemy + Flask\nPython SQLAlchemy + FastAPI\nJavaScript Sequelize + Express JS\nJavascript Prisma + Express JS - Coming Soon\nPython Django - Coming Soon\nGo GORM - Coming Soon",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "kt8sNh7JxVBooIZANRg2",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "87c3638ed2d94515b1110618d2eca08b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Overview",
          "body": "Metis SDK sends traces in to the servers, for deep analysis, which can be viewed in the web app.\n\nSupported Frameworks and ORM: \n\nPython SQLAlchemy + Flask\nPython SQLAlchemy + FastAPI\nJavaScript Sequelize + Express JS\nJavascript Prisma + Express JS - Coming Soon\nPython Django - Coming Soon\nGo GORM - Coming Soon",
          "anchor": "overview",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/87c3638ed2d94515b1110618d2eca08b",
          "_highlightResult": {
            "title": {
              "value": "Overview",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK sends traces in to the servers, for deep analysis, which can be viewed in the web app.\n\nSupported Frameworks and ORM: \n\nPython SQLAlchemy + Flask\nPython SQLAlchemy + FastAPI\nJavaScript Sequelize + Express JS\nJavascript Prisma + Express JS - Coming Soon\nPython Django - Coming Soon\nGo GORM - Coming Soon",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "47b699bd7bc94d7a97752e99493874c7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK sends database related data into our servers. The data includes queries, execution plans, context, and metadata. The data then in turn goes through analysis and insights are derived.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/47b699bd7bc94d7a97752e99493874c7",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK sends database related data into our servers. The data includes queries, execution plans, context, and metadata. The data then in turn goes through analysis and insights are derived.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "mVnRfizkif5hkVUNcejG",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "23fb356a52e6449c8bb6e92f4ff6785d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Supported Frameworks ",
          "body": "Python SQLAlchemy + Flask\nPython SQLAlchemy + FastAPI\n\nJavaScript Sequelize + Express\n\nJavascript Prisma + Express\nJavascript Prisma + NestJS",
          "anchor": "supported-frameworks",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/23fb356a52e6449c8bb6e92f4ff6785d",
          "_highlightResult": {
            "title": {
              "value": "Supported Frameworks ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Python SQLAlchemy + Flask\nPython SQLAlchemy + FastAPI\n\nJavaScript Sequelize + Express\n\nJavascript Prisma + Express\nJavascript Prisma + NestJS",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "mVnRfizkif5hkVUNcejG",
          "page": "E61cZGkIipfjFKNYiEBT",
          "section": "03d013ea62e94c968a43a8335333521e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "How it Works",
          "body": "",
          "anchor": "how-it-works",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/E61cZGkIipfjFKNYiEBT/03d013ea62e94c968a43a8335333521e",
          "_highlightResult": {
            "title": {
              "value": "How it Works",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "e2896e67ceeb46f58ff0d18c1040d17e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Development",
          "body": "METIS_TAG=DEVELOPMENT",
          "anchor": "development",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/e2896e67ceeb46f58ff0d18c1040d17e",
          "_highlightResult": {
            "title": {
              "value": "Development",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=DEVELOPMENT",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "dbb917d17a7540c58a713c85c2dbca2d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "John's Local Enviroment",
          "body": "METIS_TAG=JOHN_LOCAL",
          "anchor": "johns-local-enviroment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/dbb917d17a7540c58a713c85c2dbca2d",
          "_highlightResult": {
            "title": {
              "value": "John's Local Enviroment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=JOHN_LOCAL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "d33e312aba9645c5844ae1c181f1588a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/d33e312aba9645c5844ae1c181f1588a",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "bb39d4e0e1314e3eb57e0011d9567c3f",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-express-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nCreate a file named tracing.ts|js, which will contain your Metis setup code.",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/bb39d4e0e1314e3eb57e0011d9567c3f",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Use the following to install into a project using NPM.\n\nnpm install --save @metis-data/prisma-express-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nCreate a file named tracing.ts|js, which will contain your Metis setup code.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "N9K6FLxy1XBjRqXLwAYq",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "b6d9b5c67a394fceb39b68cbb37f24be",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Already have OpenTelemetry in your app?",
          "body": "",
          "anchor": "already-have-opentelemetry-in-your-app",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/b6d9b5c67a394fceb39b68cbb37f24be",
          "_highlightResult": {
            "title": {
              "value": "Already have OpenTelemetry in your app?",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "PdOQEttRREh0M4qX9exL",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "a925a2aae623413ea8ede676df026dfd",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/a925a2aae623413ea8ede676df026dfd",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "a2ef1f3bd53a4abca86ced8fa653a783",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/a2ef1f3bd53a4abca86ced8fa653a783",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "N9K6FLxy1XBjRqXLwAYq",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "a20cc3e15aae49ed8287bc64e9eede46",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/a20cc3e15aae49ed8287bc64e9eede46",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Prisma ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "701ecb4c385a4a78a6bfa29891063995",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "JavaScript",
          "body": "",
          "anchor": "javascript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/701ecb4c385a4a78a6bfa29891063995",
          "_highlightResult": {
            "title": {
              "value": "JavaScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "6ec6610dd3b44658982aea6e0e19cc2d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/6ec6610dd3b44658982aea6e0e19cc2d",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "3d907f6d38eb48b1b456c61e337f91a5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Declare Environment",
          "body": "Your Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
          "anchor": "declare-environment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/3d907f6d38eb48b1b456c61e337f91a5",
          "_highlightResult": {
            "title": {
              "value": "Declare Environment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Your Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "N9K6FLxy1XBjRqXLwAYq",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "35461057511b40038fd66547cb7a12b2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "New to OpenTelemetry?",
          "body": "",
          "anchor": "new-to-opentelemetry",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/35461057511b40038fd66547cb7a12b2",
          "_highlightResult": {
            "title": {
              "value": "New to OpenTelemetry?",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "2852dc12381942b6a0d4cbb123c40ebb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "TypeScript",
          "body": "import opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider, BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan, ConfigurationHandler, MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {IncomingMessage} from \"http\";\nconst {\n  serviceName,\n  serviceVersion,\n  exporterUrl,\n  exporterApiKey,\n} = ConfigurationHandler.getMergedConfig({\n  serviceName: \"lior-service\",\n  serviceVersion: \"1.0.0\",\n  exporterUrl: process.env.EXPORTER_URL,\n  exporterApiKey: process.env.EXPORTER_API_KEY,\n});\nconsole.log({\n  serviceName,\n  serviceVersion,\n  exporterUrl,\n  exporterApiKey,\n})\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n    [SemanticResourceAttributes.SERVICE_VERSION]: serviceVersion,\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n    exporterUrl,\n    exporterApiKey,\n    {},\n);\ntracerProvider.addSpanProcessor(new BatchSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager();\ncontextManager.enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\n// Initialize the OpenTelemetry APIs to use the NodeTracerProvider bindings\ntracerProvider.register();\nexport const metisPrismaInstrumentation = getPrismaInstrumentation();\nconst urlsFilter = createFilter([/favicon.ico/]);\nregisterInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        if (request.url) {\n          return urlsFilter(request.url);\n        }\n        return false;\n      },\n      requestHook: markSpan,\n    }),\n    metisPrismaInstrumentation,\n  ],\n});",
          "anchor": "typescript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/2852dc12381942b6a0d4cbb123c40ebb",
          "_highlightResult": {
            "title": {
              "value": "TypeScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "import opentelemetry from \"@opentelemetry/api\";\nimport { HttpInstrumentation } from \"@opentelemetry/instrumentation-http\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider, BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport {\n  getPrismaInstrumentation,\n  createFilter,\n  markSpan, ConfigurationHandler, MetisRemoteExporter,\n} from \"@metis-data/prisma-interceptor\";\nimport { AsyncHooksContextManager } from \"@opentelemetry/context-async-hooks\";\nimport {IncomingMessage} from \"http\";\nconst {\n  serviceName,\n  serviceVersion,\n  exporterUrl,\n  exporterApiKey,\n} = ConfigurationHandler.getMergedConfig({\n  serviceName: \"lior-service\",\n  serviceVersion: \"1.0.0\",\n  exporterUrl: process.env.EXPORTER_URL,\n  exporterApiKey: process.env.EXPORTER_API_KEY,\n});\nconsole.log({\n  serviceName,\n  serviceVersion,\n  exporterUrl,\n  exporterApiKey,\n})\nexport const tracerProvider = new BasicTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n    [SemanticResourceAttributes.SERVICE_VERSION]: serviceVersion,\n  }),\n});\nexport const metisExporter = new MetisRemoteExporter(\n    exporterUrl,\n    exporterApiKey,\n    {},\n);\ntracerProvider.addSpanProcessor(new BatchSpanProcessor(metisExporter));\ntracerProvider.addSpanProcessor(\n  new SimpleSpanProcessor(new ConsoleSpanExporter()),\n);\nconst contextManager = new AsyncHooksContextManager();\ncontextManager.enable();\nopentelemetry.context.setGlobalContextManager(contextManager);\n// Initialize the OpenTelemetry APIs to use the NodeTracerProvider bindings\ntracerProvider.register();\nexport const metisPrismaInstrumentation = getPrismaInstrumentation();\nconst urlsFilter = createFilter([/favicon.ico/]);\nregisterInstrumentations({\n  instrumentations: [\n    new HttpInstrumentation({\n      ignoreOutgoingRequestHook: () => true,\n      ignoreIncomingRequestHook: (request: IncomingMessage) => {\n        if (request.url) {\n          return urlsFilter(request.url);\n        }\n        return false;\n      },\n      requestHook: markSpan,\n    }),\n    metisPrismaInstrumentation,\n  ],\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "lIV7b2ccu6t4XZNPsvZo",
          "page": "DXpVPMjdyT5XurjqDup4",
          "section": "0ceb053f684640029fa2853a9b79ed4b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "METIS_TAG=PRODUCTION",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/DXpVPMjdyT5XurjqDup4/0ceb053f684640029fa2853a9b79ed4b",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=PRODUCTION",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "0oV06FbGAlmMmVIzcnLd",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "initial_AzSzkwybKMSW3LMokr4a_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis is a database observability tool that enables you to understand the efficiency of your database and the interactions with it. Metis collects database performance data, analyzes it, tells you what's wrong and how to fix it.\n\nOur interface empowers your team to understand your database, no matter their expertise.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/initial_AzSzkwybKMSW3LMokr4a_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis is a database observability tool that enables you to understand the efficiency of your database and the interactions with it. Metis collects database performance data, analyzes it, tells you what's wrong and how to fix it.\n\nOur interface empowers your team to understand your database, no matter their expertise.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "c07a1cbfe9af49c0b70474adfc7e4922",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Usage Statistics Tables",
          "body": "Statistics data updated by the database management system (DBMS) on tables size, tables access, index usage, and other elements.",
          "anchor": "usage-statistics-tables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/c07a1cbfe9af49c0b70474adfc7e4922",
          "_highlightResult": {
            "title": {
              "value": "Usage Statistics Tables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Statistics data updated by the database management system (DBMS) on tables size, tables access, index usage, and other elements.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "a1ff8b29f37d4b4da4b6efd7303e479c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Schemas",
          "body": "The structure of a database described in a formal language supported by the database management system (DBMS). The schema defines the tables, fields, relationships, views, indexes, packages, procedures, functions, queues, triggers, types, sequences, materialized views, synonyms, database links, directories, XML schemas, and other elements.",
          "anchor": "schemas",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/a1ff8b29f37d4b4da4b6efd7303e479c",
          "_highlightResult": {
            "title": {
              "value": "Schemas",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The structure of a database described in a formal language supported by the database management system (DBMS). The schema defines the tables, fields, relationships, views, indexes, packages, procedures, functions, queues, triggers, types, sequences, materialized views, synonyms, database links, directories, XML schemas, and other elements.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "9ae1dfc6f7b041afaa16369d0792bc58",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Instrumentation",
          "body": "Measuring instruments regarded collectively.",
          "anchor": "instrumentation",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/9ae1dfc6f7b041afaa16369d0792bc58",
          "_highlightResult": {
            "title": {
              "value": "Instrumentation",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Measuring instruments regarded collectively.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "6279f34d9cb54da688a0db58b4e7e7a5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Execution Plans",
          "body": "A description of the data retrieval methods chosen by the SQL server's query optimizer to perform an SQL Command.\n\nA visualization of an execution plan",
          "anchor": "execution-plans",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/6279f34d9cb54da688a0db58b4e7e7a5",
          "_highlightResult": {
            "title": {
              "value": "Execution Plans",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A description of the data retrieval methods chosen by the SQL server's query optimizer to perform an SQL Command.\n\nA visualization of an execution plan",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "46c50d8ea97c40c6a02db3b3c39bfb1c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Introduction to Database Observability",
          "body": "\"The ability to measure the internal states of a system by examining its outputs.\"\n\nMetis' instrumentation collects all relevant performance data: Execution Plans, Schemas, SQL Commands, and Usage Statistics Tables.\n\nMetis does not collect sensitive data like the parameters in which sql commands ran with, or the values within the returned rows from a query run.",
          "anchor": "introduction-to-database-observability",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/46c50d8ea97c40c6a02db3b3c39bfb1c",
          "_highlightResult": {
            "title": {
              "value": "Introduction to Database Observability",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "\"The ability to measure the internal states of a system by examining its outputs.\"\n\nMetis' instrumentation collects all relevant performance data: Execution Plans, Schemas, SQL Commands, and Usage Statistics Tables.\n\nMetis does not collect sensitive data like the parameters in which sql commands ran with, or the values within the returned rows from a query run.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "212d2f6df71d41d9b724577902e80164",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "From Observability to Understanding",
          "body": "The collected performance data is constantly inserted into the Metis Insight Engine. The engine uses a rule-based system and series of tests to find issues and come up with the simplest most powerful solutions.\n\nAt Metis, we aim to provide powerful database insights and communicate them in the simplest way.",
          "anchor": "from-observability-to-understanding",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/212d2f6df71d41d9b724577902e80164",
          "_highlightResult": {
            "title": {
              "value": "From Observability to Understanding",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The collected performance data is constantly inserted into the Metis Insight Engine. The engine uses a rule-based system and series of tests to find issues and come up with the simplest most powerful solutions.\n\nAt Metis, we aim to provide powerful database insights and communicate them in the simplest way.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "2029ecf7479446f7a8be28c6248f7a8e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "SQL Commands",
          "body": "The instructions used to communicate with a database to perform tasks, functions, and queries with data.",
          "anchor": "sql-commands",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/2029ecf7479446f7a8be28c6248f7a8e",
          "_highlightResult": {
            "title": {
              "value": "SQL Commands",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The instructions used to communicate with a database to perform tasks, functions, and queries with data.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "ICAyKrdyJmeDoqhPmzAD",
          "page": "AzSzkwybKMSW3LMokr4a",
          "section": "1bb150cfd36e4cae8b58fcba62d06b56",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Our interface empowers your team to understand your database, no matter their expertise.\n\nMetis is a database observability tool that enables you to understand the efficiency of your database and the interactions with it. Metis collects database performance data, analyzes it, tells you what's wrong and how to fix it.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/AzSzkwybKMSW3LMokr4a/1bb150cfd36e4cae8b58fcba62d06b56",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Our interface empowers your team to understand your database, no matter their expertise.\n\nMetis is a database observability tool that enables you to understand the efficiency of your database and the interactions with it. Metis collects database performance data, analyzes it, tells you what's wrong and how to fix it.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "by95go1uqQqlK7lHsaY4",
          "page": "A9z3WSx0NatZLp8FbjhT",
          "section": "8141a9364b5d44e4ab16b42e0a046544",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Developers can add their own custom tags to spans. For example, a developer can add a tag with the branch name and commit hash so the span could be correlated to a specific version of your application.\n\nThe developer can add a tag from code (see documentation in each language specific SDK), or using environment variables.\n\nTo add a tag using environment variables you must export a variable with a name that starts with METIS_TAG. For example: \n\nexport METIS_TAG_PR=$(git log -1 --format=\"%H\")\n\nThe span will have an additional tag named pr. ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/A9z3WSx0NatZLp8FbjhT/8141a9364b5d44e4ab16b42e0a046544",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Developers can add their own custom tags to spans. For example, a developer can add a tag with the branch name and commit hash so the span could be correlated to a specific version of your application.\n\nThe developer can add a tag from code (see documentation in each language specific SDK), or using environment variables.\n\nTo add a tag using environment variables you must export a variable with a name that starts with METIS_TAG. For example: \n\nexport METIS_TAG_PR=$(git log -1 --format=\"%H\")\n\nThe span will have an additional tag named pr. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Vy6hjdHZhm6toS1AbLwN",
          "page": "8xXOsfOOorIuWkkOG6PD",
          "section": "initial_8xXOsfOOorIuWkkOG6PD_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "The Metis web app is used for: \n\nManaging API Keys: Add new, view existing, delete a Key\nView Recent Activity: REST command, start date, and a breakdown of the problems  by severity\nTrace Details - Detailed analysis of the whole trace and each SQL command it contains\n Tests: view the traces grouped by tags. Usually, a tag is a QA test. \nMetadata Reports: tables size of the production env., indexes usage in the production env... ",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/8xXOsfOOorIuWkkOG6PD/initial_8xXOsfOOorIuWkkOG6PD_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Metis web app is used for: \n\nManaging API Keys: Add new, view existing, delete a Key\nView Recent Activity: REST command, start date, and a breakdown of the problems  by severity\nTrace Details - Detailed analysis of the whole trace and each SQL command it contains\n Tests: view the traces grouped by tags. Usually, a tag is a QA test. \nMetadata Reports: tables size of the production env., indexes usage in the production env... ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "initial_7iJuHSagdVMp2dS9Ehf6_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Your Project is the work area where you can find your insights, analysis and raw data from your database code, and in the different development cycle phase.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/initial_7iJuHSagdVMp2dS9Ehf6_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Your Project is the work area where you can find your insights, analysis and raw data from your database code, and in the different development cycle phase.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "ffc58fee84574f088c8f1ce2c64ebdd8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Parameter",
          "body": "const interceptor = PrismaExpressInterceptor.create({\n  apiKey: string,\n  environment: string,\n  enabled: boolean\n});",
          "anchor": "parameter",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/ffc58fee84574f088c8f1ce2c64ebdd8",
          "_highlightResult": {
            "title": {
              "value": "Parameter",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "const interceptor = PrismaExpressInterceptor.create({\n  apiKey: string,\n  environment: string,\n  enabled: boolean\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "e82171f11a7c487bb37d9af0a49c34dd",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Set Up a New Environment",
          "body": "Go to the Project Page (As shown below).\nTap the +Add Environment button.\nChoose it's name.\nPaste the new environment name in METIS_ENVIRONMENT.\n\nProject page",
          "anchor": "set-up-a-new-environment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/e82171f11a7c487bb37d9af0a49c34dd",
          "_highlightResult": {
            "title": {
              "value": "Set Up a New Environment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Go to the Project Page (As shown below).\nTap the +Add Environment button.\nChoose it's name.\nPaste the new environment name in METIS_ENVIRONMENT.\n\nProject page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "c5a85dac7ccb44d68e5ecf28e052f62c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY=<API_KEY> # e52c013d3748496d9f2f9acb0e6e535b\nMETIS_ENVIRONMENT=<ENVIRONMENT_NAME> # e.g - Metis-Prod\nMETIS_SHOULD_RUN=<BOOLEAN> # TRUE | FALSE",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/c5a85dac7ccb44d68e5ecf28e052f62c",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY=<API_KEY> # e52c013d3748496d9f2f9acb0e6e535b\nMETIS_ENVIRONMENT=<ENVIRONMENT_NAME> # e.g - Metis-Prod\nMETIS_SHOULD_RUN=<BOOLEAN> # TRUE | FALSE",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "b27a157fde0c492bb2f91e932483e839",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Projects Page",
          "body": "Create, Delete or Edit projects.\nGet your API Key.\n\nProjects Page",
          "anchor": "projects-page",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/b27a157fde0c492bb2f91e932483e839",
          "_highlightResult": {
            "title": {
              "value": "Projects Page",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Create, Delete or Edit projects.\nGet your API Key.\n\nProjects Page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "b0967671124f4caa8fc6eecddeca86cb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Pull Requests",
          "body": "Metis can be configured to analyze your Database Code while running tests against real databases during GitHub Pull Requests. Follow this tutorial-",
          "anchor": "pull-requests",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/b0967671124f4caa8fc6eecddeca86cb",
          "_highlightResult": {
            "title": {
              "value": "Pull Requests",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis can be configured to analyze your Database Code while running tests against real databases during GitHub Pull Requests. Follow this tutorial-",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "92998674f5e8414f89fd172d782aec99",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "Production databases are important to companies because they store and manage the data that is critical to the operation of the business. This data may include customer information, financial records, inventory data, and more. Since our SDK sends data about sql queries to our servers, we ask you not to install it in production environment. Instead, Metis offers a Metadata Collector, which collects only metadata and not the actual data.\n\nTo set a Production Metadata Collector follow this tutorial-",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/92998674f5e8414f89fd172d782aec99",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Production databases are important to companies because they store and manage the data that is critical to the operation of the business. This data may include customer information, financial records, inventory data, and more. Since our SDK sends data about sql queries to our servers, we ask you not to install it in production environment. Instead, Metis offers a Metadata Collector, which collects only metadata and not the actual data.\n\nTo set a Production Metadata Collector follow this tutorial-",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "885b2fa593244373a75633ee4c656eaf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environments",
          "body": "When Installing our Metis SDK you are requested to provide three parameters-",
          "anchor": "environments",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/885b2fa593244373a75633ee4c656eaf",
          "_highlightResult": {
            "title": {
              "value": "Environments",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "When Installing our Metis SDK you are requested to provide three parameters-",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "7QxSJtvyYCUz1r96yZC7",
          "page": "7iJuHSagdVMp2dS9Ehf6",
          "section": "5d5ebcfe2d7449a39e8335869e82c185",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Real Life Example",
          "body": "Say you're a developer who's developing an app. Your app has a frontend and a backend connected to a PostgreSQL database.\n\nYou have a Local Environment (Your personal computer) when you develop your app.\nYou open a Pull Request with the code changes on GitHub, where tests run to test your code.\nYou then (usually) deploy the changes to a Staging Environment where you get to play around with your app with the new changes.\nFinally, after feeling comfortable with the added changes, you deploy the changes to your Production Environment.\n\nProject Page",
          "anchor": "real-life-example",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7iJuHSagdVMp2dS9Ehf6/5d5ebcfe2d7449a39e8335869e82c185",
          "_highlightResult": {
            "title": {
              "value": "Real Life Example",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Say you're a developer who's developing an app. Your app has a frontend and a backend connected to a PostgreSQL database.\n\nYou have a Local Environment (Your personal computer) when you develop your app.\nYou open a Pull Request with the code changes on GitHub, where tests run to test your code.\nYou then (usually) deploy the changes to a Staging Environment where you get to play around with your app with the new changes.\nFinally, after feeling comfortable with the added changes, you deploy the changes to your Production Environment.\n\nProject Page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QlEriqQCO5epZrvfOMSV",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "faea938079ad45b5a337c31d0d69c388",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/faea938079ad45b5a337c31d0d69c388",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QlEriqQCO5epZrvfOMSV",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "f98cc950f17941cab2bb0127696e32f0",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Metis SDK supports Sequelize ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/f98cc950f17941cab2bb0127696e32f0",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Metis SDK supports Sequelize ORM, Node.js and Express.\n\nYou will need your project token for initializing your library. You can get your project token from Projects Page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "e018b892c38742b4bf2bd4eb98181a82",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Using NPM:\n\nnpm install --save @metis-data/sequelize-express-interceptor\n\nThe interception of Sequelize queries is done by replacing the query function with a function that opens a span, collects the plan, and then executes the actual query. \n\nTo get the plan we must provide the interceptor with a Sequelize instance. That instance would not be instrumented, and should not be used in the application.\n\nYou must create a new Sequelize instance  after instrumentation started. That should be the instance used in the application.",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/e018b892c38742b4bf2bd4eb98181a82",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Using NPM:\n\nnpm install --save @metis-data/sequelize-express-interceptor\n\nThe interception of Sequelize queries is done by replacing the query function with a function that opens a span, collects the plan, and then executes the actual query. \n\nTo get the plan we must provide the interceptor with a Sequelize instance. That instance would not be instrumented, and should not be used in the application.\n\nYou must create a new Sequelize instance  after instrumentation started. That should be the instance used in the application.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "db22071bdf3e43c4a7a604ed3094b896",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "npm",
          "body": "// package.json\n{\n\"name\": \"my-app\",\n\"main\": \"server.js\", // This is your entry point.\n...\n}",
          "anchor": "npm",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/db22071bdf3e43c4a7a604ed3094b896",
          "_highlightResult": {
            "title": {
              "value": "npm",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "// package.json\n{\n\"name\": \"my-app\",\n\"main\": \"server.js\", // This is your entry point.\n...\n}",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QlEriqQCO5epZrvfOMSV",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "d39d3592671648e79b8fe13f58a469c7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/d39d3592671648e79b8fe13f58a469c7",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QlEriqQCO5epZrvfOMSV",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "d1e59393541d41c2a451836baa5aa417",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/sequelize-express-interceptor\n\nOpen your index.ts and add the following code-\n\nconst { SequelizeExpressInterceptor } = require(‘@metis-data/sequelize-express-interceptor’)\nconst interceptor = SequelizeExpressInterceptor.create({\n    serviceName: ‘<SERVICE_NAME>‘,\n    serviceVersion: ‘<SERVICE_VERSION>’,\n    apiKey: ‘<API_KEY>’\n});\nfunction getSequelizeClient() {\n    const Sequelize = require(‘sequelize’)\n    return new Sequelize(‘postgres://postgres:password@host:port/postgres’)\n}\ninterceptor.instrument(getSequelizeClient(), {\n    // Add URL Regex to exclude instrumentation from.\n    excludedUrls: [/favicon.ico/],\n});\nconst express = require(‘express’);\nconst app = express();\nconst sequelize = getSequelizeClient();\napp.listen(3000, () => {\n    console.log(‘Server listening on port 3000’);\n});",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/d1e59393541d41c2a451836baa5aa417",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/sequelize-express-interceptor\n\nOpen your index.ts and add the following code-\n\nconst { SequelizeExpressInterceptor } = require(‘@metis-data/sequelize-express-interceptor’)\nconst interceptor = SequelizeExpressInterceptor.create({\n    serviceName: ‘<SERVICE_NAME>‘,\n    serviceVersion: ‘<SERVICE_VERSION>’,\n    apiKey: ‘<API_KEY>’\n});\nfunction getSequelizeClient() {\n    const Sequelize = require(‘sequelize’)\n    return new Sequelize(‘postgres://postgres:password@host:port/postgres’)\n}\ninterceptor.instrument(getSequelizeClient(), {\n    // Add URL Regex to exclude instrumentation from.\n    excludedUrls: [/favicon.ico/],\n});\nconst express = require(‘express’);\nconst app = express();\nconst sequelize = getSequelizeClient();\napp.listen(3000, () => {\n    console.log(‘Server listening on port 3000’);\n});",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "CkajllSLHk6NNnKjcYiR",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "cfc0d318b40f4a9c8694bfbba57affdb",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Setup",
          "body": "The interception of Sequelize queries is done by replacing the query function with a function that opens a span, collects the plan, and then executes the actual query. \n\nTo get the plan we must provide the interceptor with a Sequelize instance. That instance would not be instrumented, and should not be used in the application. \n\nYou must create a new Sequelize instance  after instrumentation started. That should be the instance used in the application.",
          "anchor": "2.-setup",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/cfc0d318b40f4a9c8694bfbba57affdb",
          "_highlightResult": {
            "title": {
              "value": "2. Setup",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The interception of Sequelize queries is done by replacing the query function with a function that opens a span, collects the plan, and then executes the actual query. \n\nTo get the plan we must provide the interceptor with a Sequelize instance. That instance would not be instrumented, and should not be used in the application. \n\nYou must create a new Sequelize instance  after instrumentation started. That should be the instance used in the application.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "b2fa8e68cadd4ce788954a8086844864",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_INSTRUMENTATION\nSet false to stop all data collection, any other value activates Metis.\n\nYour Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/b2fa8e68cadd4ce788954a8086844864",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_INSTRUMENTATION\nSet false to stop all data collection, any other value activates Metis.\n\nYour Project Token can be used by your organization in different places, by different developers. In order to be able to distinguish the different sources and of data, we require adding an environment variable METIS_TAG. For example: ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "CkajllSLHk6NNnKjcYiR",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "a82795d09bdc4957a36ec558470531e6",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Configure",
          "body": "The configuration from the environment will override values passed to the create method.\n\nThe URL of Metis API Gateway. Default: https://ingest.metisdata.io/\nMETIS_EXPORTER_API_KEY\nRequired. A valid API key. Use the page API Key in the web app to see existing ones or create a new one\nSERVICE_NAME\nOptional. A short name of the service to easily group the traces belonging to this service\nSERVICE_VERSION\nOptional. An internal version of the service, to help the developers to distinguish between traces of the latest version and older ones. \nMETIS_EXPORTER_URL",
          "anchor": "3.-configure",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/a82795d09bdc4957a36ec558470531e6",
          "_highlightResult": {
            "title": {
              "value": "3. Configure",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The configuration from the environment will override values passed to the create method.\n\nThe URL of Metis API Gateway. Default: https://ingest.metisdata.io/\nMETIS_EXPORTER_API_KEY\nRequired. A valid API key. Use the page API Key in the web app to see existing ones or create a new one\nSERVICE_NAME\nOptional. A short name of the service to easily group the traces belonging to this service\nSERVICE_VERSION\nOptional. An internal version of the service, to help the developers to distinguish between traces of the latest version and older ones. \nMETIS_EXPORTER_URL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "a33b598a7c1747f894098703cb3563f3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "TypeScript",
          "body": "import { SequelizeExpressInterceptor } from '@metis-data/sequelize-express-interceptor';\nconst interceptor = SequelizeExpressInterceptor.create({\n  apiKey: '<API_KEY>',\n  serviceName: '<SERVICE_NAME>', \n  serviceVersion: '<OPTIONAL_SERVICE_VERSION>',\n});\ninterceptor.instrument(\n  // Do Not use \n  getSequelizeInstance()\n);\nconst sequelize = getSequelizeInstance();",
          "anchor": "typescript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/a33b598a7c1747f894098703cb3563f3",
          "_highlightResult": {
            "title": {
              "value": "TypeScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "import { SequelizeExpressInterceptor } from '@metis-data/sequelize-express-interceptor';\nconst interceptor = SequelizeExpressInterceptor.create({\n  apiKey: '<API_KEY>',\n  serviceName: '<SERVICE_NAME>', \n  serviceVersion: '<OPTIONAL_SERVICE_VERSION>',\n});\ninterceptor.instrument(\n  // Do Not use \n  getSequelizeInstance()\n);\nconst sequelize = getSequelizeInstance();",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "9a2e329f5f3844c0a7a7a547fa798378",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Development",
          "body": "METIS_TAG=DEVELOPMENT",
          "anchor": "development",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/9a2e329f5f3844c0a7a7a547fa798378",
          "_highlightResult": {
            "title": {
              "value": "Development",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=DEVELOPMENT",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "CkajllSLHk6NNnKjcYiR",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "881c5dada31f4e67a37290c472e5659b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Known Issues",
          "body": "",
          "anchor": "known-issues",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/881c5dada31f4e67a37290c472e5659b",
          "_highlightResult": {
            "title": {
              "value": "Known Issues",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "QlEriqQCO5epZrvfOMSV",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "782d3d1d58614e75bd2166c5b00cbc71",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/782d3d1d58614e75bd2166c5b00cbc71",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "729471b752254bad888d55488910aa41",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Docker",
          "body": "# Dockerfile\nFROM node:16\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm ci\nCOPY . .\nEXPOSE 8080\n// This is your entry point.\nCMD [ \"node\", \"server.js\" ]",
          "anchor": "docker",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/729471b752254bad888d55488910aa41",
          "_highlightResult": {
            "title": {
              "value": "Docker",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "# Dockerfile\nFROM node:16\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm ci\nCOPY . .\nEXPOSE 8080\n// This is your entry point.\nCMD [ \"node\", \"server.js\" ]",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "5fe8843b0f4247ab941fc41680bb1d12",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "JavaScript",
          "body": "const { SequelizeExpressInterceptor } = require('@metis-data/sequelize-express-interceptor');\nconst interceptor = SequelizeExpressInterceptor.create({\n  apiKey: '<API_KEY>',\n  serviceName: '<SERVICE_NAME>', \n  serviceVersion: '<OPTIONAL_SERVICE_VERSION>',\n});\nconst sequelizeForPlan = getSequelizeInstance()\ninterceptor.instrument(\n  sequelizeForPlan\n);\nconst sequelize = getSequelizeInstance()",
          "anchor": "javascript",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/5fe8843b0f4247ab941fc41680bb1d12",
          "_highlightResult": {
            "title": {
              "value": "JavaScript",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "const { SequelizeExpressInterceptor } = require('@metis-data/sequelize-express-interceptor');\nconst interceptor = SequelizeExpressInterceptor.create({\n  apiKey: '<API_KEY>',\n  serviceName: '<SERVICE_NAME>', \n  serviceVersion: '<OPTIONAL_SERVICE_VERSION>',\n});\nconst sequelizeForPlan = getSequelizeInstance()\ninterceptor.instrument(\n  sequelizeForPlan\n);\nconst sequelize = getSequelizeInstance()",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "36d2820425d645ecbaececc15c727803",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "John's Local Enviroment",
          "body": "METIS_TAG=JOHN_LOCAL",
          "anchor": "johns-local-enviroment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/36d2820425d645ecbaececc15c727803",
          "_highlightResult": {
            "title": {
              "value": "John's Local Enviroment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=JOHN_LOCAL",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "3668e5afc625457f865ed9ccc0e39b25",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/3668e5afc625457f865ed9ccc0e39b25",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "35fe865a4fda4028b267d3cefc3c57b9",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!\n\nES Modules\nCurrently this package can only be used in CommonJS modules, and it will not work with ES modules. The issue stems from the fact that we need to provide a Sequelize instance to the instrumentation. That means we need to import Sequelize, and that causes issues with the patching of Sequelize. To solve this issue we clear the required cache internally when instrument is called.\nTypescript can be used, but it needs to target CommonJS.",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/35fe865a4fda4028b267d3cefc3c57b9",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!\n\nES Modules\nCurrently this package can only be used in CommonJS modules, and it will not work with ES modules. The issue stems from the fact that we need to provide a Sequelize instance to the instrumentation. That means we need to import Sequelize, and that causes issues with the patching of Sequelize. To solve this issue we clear the required cache internally when instrument is called.\nTypescript can be used, but it needs to target CommonJS.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "CkajllSLHk6NNnKjcYiR",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "33954a310c6e462db5f0de72970b59df",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CommonJS and ES Modules.",
          "body": "Currently this package can only be used in CommonJS modules, and it will not work with ES modules. The issue stems from the fact that we need to provide a Sequelize instance to the instrumentation. That means we need to import Sequelize, and that causes issues with the patching of Sequelize. To solve this issue we clear the required cache internally when instrument is called.\n\nTypescript can be used, but it needs to target CommonJS.",
          "anchor": "commonjs-and-es-modules.",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/33954a310c6e462db5f0de72970b59df",
          "_highlightResult": {
            "title": {
              "value": "CommonJS and ES Modules.",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Currently this package can only be used in CommonJS modules, and it will not work with ES modules. The issue stems from the fact that we need to provide a Sequelize instance to the instrumentation. That means we need to import Sequelize, and that causes issues with the patching of Sequelize. To solve this issue we clear the required cache internally when instrument is called.\n\nTypescript can be used, but it needs to target CommonJS.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Hn2VeZiTssBKPf5DPkOP",
          "page": "7cb2SBIYkSLidwb2g7qX",
          "section": "133b24e3192d49ff9d3cfc7cf4d8e596",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Production",
          "body": "METIS_TAG=PRODUCTION",
          "anchor": "production",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7cb2SBIYkSLidwb2g7qX/133b24e3192d49ff9d3cfc7cf4d8e596",
          "_highlightResult": {
            "title": {
              "value": "Production",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_TAG=PRODUCTION",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "DdVnWSlt3RFNk8xI8lQT",
          "page": "7QLZ9VgWtbQY1vLK931j",
          "section": "initial_7QLZ9VgWtbQY1vLK931j_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "exit()\n\nlistTables()",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7QLZ9VgWtbQY1vLK931j/initial_7QLZ9VgWtbQY1vLK931j_block",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "exit()\n\nlistTables()",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "L0DJMXSHoU6hcGUxeUnj",
          "page": "7DnxAKpV0LjUJhxxk0rv",
          "section": "initial_7DnxAKpV0LjUJhxxk0rv_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Instrumentation - AWS Marketplace",
          "body": "This is the simplest option. \n\nOpen the AWS Marketplace\nConfiguration: \nA connections string to the database\nValid API key (Click here to learn how to obtain a new API Key)\nSubnet name - select one from a list of subnets in your AWS account\nSecurity Group - select one from a list of  security groups in your AWS account ",
          "anchor": "instrumentation-aws-marketplace",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7DnxAKpV0LjUJhxxk0rv/initial_7DnxAKpV0LjUJhxxk0rv_block",
          "_highlightResult": {
            "title": {
              "value": "Instrumentation - AWS Marketplace",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "This is the simplest option. \n\nOpen the AWS Marketplace\nConfiguration: \nA connections string to the database\nValid API key (Click here to learn how to obtain a new API Key)\nSubnet name - select one from a list of subnets in your AWS account\nSecurity Group - select one from a list of  security groups in your AWS account ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "bEUMXsptTGGGEVA4O8hs",
          "page": "7DnxAKpV0LjUJhxxk0rv",
          "section": "93cc25a514564bb2923c38ee8ab0836c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Instrumentation - AWS Console",
          "body": "Manually deploy the Docker image to your AWS account using AWS Cloud Formation.\n\nOpen the following link to use a CloudFormation template: https://console.aws.amazon.com/cloudformation/home?#/stacks/create/review?templateURL=https://metis-data-market-public.s3.eu-central-1.amazonaws.com/metadata-collector-cloudformation.yaml&stackName=MetisMetadataCollector\n\nNotice the link populates the field \"Template URL\". \n\n4. Name the stack. The default name is \"MetisMetadataCollector\".\n\nEnter a valid Cluster Name. \n\n5. Enter a valid connection string for the database. \nOnly Postgres 12 and higher are supported. \nFor ex. postgresql://user:password@hostname.eu-central-1.rds.amazonaws.com/db_name\n\n6. Enter a valid API Key. \n\n7. Choose a Security Group\n\n8. Choose a Subnet ID\n\n12. Review the CloudFormation configuration.\n\n13. Select the 3 checkboxes to acknowledge the AWS operations. \n\nClick on Create stack. ",
          "anchor": "instrumentation-aws-console",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/7DnxAKpV0LjUJhxxk0rv/93cc25a514564bb2923c38ee8ab0836c",
          "_highlightResult": {
            "title": {
              "value": "Instrumentation - AWS Console",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Manually deploy the Docker image to your AWS account using AWS Cloud Formation.\n\nOpen the following link to use a CloudFormation template: https://console.aws.amazon.com/cloudformation/home?#/stacks/create/review?templateURL=https://metis-data-market-public.s3.eu-central-1.amazonaws.com/metadata-collector-cloudformation.yaml&stackName=MetisMetadataCollector\n\nNotice the link populates the field \"Template URL\". \n\n4. Name the stack. The default name is \"MetisMetadataCollector\".\n\nEnter a valid Cluster Name. \n\n5. Enter a valid connection string for the database. \nOnly Postgres 12 and higher are supported. \nFor ex. postgresql://user:password@hostname.eu-central-1.rds.amazonaws.com/db_name\n\n6. Enter a valid API Key. \n\n7. Choose a Security Group\n\n8. Choose a Subnet ID\n\n12. Review the CloudFormation configuration.\n\n13. Select the 3 checkboxes to acknowledge the AWS operations. \n\nClick on Create stack. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "6PeS5ok5GPqrCM989R6z",
          "section": "f2504142ada3411ca22e845daab4eaf4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "What is a Test?",
          "body": "A Test is a group of traces. By default, the SDK streams all the traces to Metis servers. It is hard to understand which trace belongs to a QA test of a specific Pull Request (PR) and which trace doesn't. Adding a test name (Tag) when running the app \"signs\" each trace with it. The UI then shows a card for each Test dynamically detected in the system.\n\nThe page: Tests",
          "anchor": "what-is-a-test",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/6PeS5ok5GPqrCM989R6z/f2504142ada3411ca22e845daab4eaf4",
          "_highlightResult": {
            "title": {
              "value": "What is a Test?",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "A Test is a group of traces. By default, the SDK streams all the traces to Metis servers. It is hard to understand which trace belongs to a QA test of a specific Pull Request (PR) and which trace doesn't. Adding a test name (Tag) when running the app \"signs\" each trace with it. The UI then shows a card for each Test dynamically detected in the system.\n\nThe page: Tests",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "6PeS5ok5GPqrCM989R6z",
          "section": "64360ee3a71243128b51a7547d504bff",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Adding a New Test using the SDK",
          "body": "The technical implementation of a Test called Tag. When a Trace is created using the SDK, you can add a Tag to it. Adding Tags is optional.\nA tag is a key:value pair. The page \"Tests\" is looking for traces with a tag with the key \"PR\".\n\nWhen the SDK runs as part of testing a specific Pull Request, the SDK should be configured with that PR id. Ror ex. for the web app to show all the traces grouped under the tag \"v12345\", configure the SDK to add the Tag\n\n \"PR\":\"v12345\"",
          "anchor": "adding-a-new-test-using-the-sdk",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/6PeS5ok5GPqrCM989R6z/64360ee3a71243128b51a7547d504bff",
          "_highlightResult": {
            "title": {
              "value": "Adding a New Test using the SDK",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The technical implementation of a Test called Tag. When a Trace is created using the SDK, you can add a Tag to it. Adding Tags is optional.\nA tag is a key:value pair. The page \"Tests\" is looking for traces with a tag with the key \"PR\".\n\nWhen the SDK runs as part of testing a specific Pull Request, the SDK should be configured with that PR id. Ror ex. for the web app to show all the traces grouped under the tag \"v12345\", configure the SDK to add the Tag\n\n \"PR\":\"v12345\"",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "6PeS5ok5GPqrCM989R6z",
          "section": "01a87f84e8154058acd15c44911c6b5e",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Group Traces around a logical events, such as a new Pull Requests",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/6PeS5ok5GPqrCM989R6z/01a87f84e8154058acd15c44911c6b5e",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Group Traces around a logical events, such as a new Pull Requests",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "You2FnMFNjPwX2rjIe9J",
          "page": "65qcWBHPhJIRDX5woVi5",
          "section": "b26ec61936f448fea086bd3a13f60fb3",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Dive into the REST API Commands",
          "body": "",
          "anchor": "dive-into-the-rest-api-commands",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/65qcWBHPhJIRDX5woVi5/b26ec61936f448fea086bd3a13f60fb3",
          "_highlightResult": {
            "title": {
              "value": "Dive into the REST API Commands",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "You2FnMFNjPwX2rjIe9J",
          "page": "65qcWBHPhJIRDX5woVi5",
          "section": "a647a571830d47138dfe71639a9bc161",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "",
          "body": "Each Project can set up Environments. An Environment is a running app with our SDK installed.\n\nCurrently we support only a Single Environment per Project.\nMultiple Environments support is coming soon!\n\nProject's page, with the Environments column is marked.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/65qcWBHPhJIRDX5woVi5/a647a571830d47138dfe71639a9bc161",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Each Project can set up Environments. An Environment is a running app with our SDK installed.\n\nCurrently we support only a Single Environment per Project.\nMultiple Environments support is coming soon!\n\nProject's page, with the Environments column is marked.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "You2FnMFNjPwX2rjIe9J",
          "page": "65qcWBHPhJIRDX5woVi5",
          "section": "6d7acd5981ca45cbb46839e3920e4ca7",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Inside an Environment",
          "body": "Clicking on an environment, moves you to the recent activity page where you can see the latest REST API Commands send from the SDK only consist SQL Commands.\n\nStaging Environment Page",
          "anchor": "inside-an-environment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/65qcWBHPhJIRDX5woVi5/6d7acd5981ca45cbb46839e3920e4ca7",
          "_highlightResult": {
            "title": {
              "value": "Inside an Environment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Clicking on an environment, moves you to the recent activity page where you can see the latest REST API Commands send from the SDK only consist SQL Commands.\n\nStaging Environment Page",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "e1867a8d7f03451bb923cab8ff0424d4",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "This page should be deleted and merged into \"Getting Started\"",
          "body": "",
          "anchor": "this-page-should-be-deleted-and-merged-into-getting-started",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/e1867a8d7f03451bb923cab8ff0424d4",
          "_highlightResult": {
            "title": {
              "value": "This page should be deleted and merged into \"Getting Started\"",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "db5aa9434b28474eabf7d2cb7aa1f052",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Adding Tags",
          "body": "The Basic flow simply streams the Traces to the Web App. Using Tags the Traces can be grouped. Usually testing every Pull Request (PR) gets a Tag with the Pull Request ID. Now it is very easy to identify all insights (problems and how to solve them) related to this specific PR. \n\nAdding Tag is very simple and done using a single line of code.  ",
          "anchor": "2.-adding-tags",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/db5aa9434b28474eabf7d2cb7aa1f052",
          "_highlightResult": {
            "title": {
              "value": "2. Adding Tags",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Basic flow simply streams the Traces to the Web App. Using Tags the Traces can be grouped. Usually testing every Pull Request (PR) gets a Tag with the Pull Request ID. Now it is very easy to identify all insights (problems and how to solve them) related to this specific PR. \n\nAdding Tag is very simple and done using a single line of code.  ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "d26b14d916b74a3d87e1e60d21e9e4ca",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Enrichment of the Insight Engine ",
          "body": "Detecting a problem and suggesting a good solution is not an easy task. With more metadata the Insights Engine can perform wider analysis and provider better recommendations with a higher confidence they solve the root cause of the problem. For that the user can easily configure collecting more data \n\nDB Schema \nMetadata from the Production Environment \n\nIt is important to clarify the Insight Engine can provide useful insight even by just analyzing the Traces and the Estimated Query Execution Plan they generate. While adding the enrichments is optional, it is highly recommended. ",
          "anchor": "enrichment-of-the-insight-engine",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/d26b14d916b74a3d87e1e60d21e9e4ca",
          "_highlightResult": {
            "title": {
              "value": "Enrichment of the Insight Engine ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Detecting a problem and suggesting a good solution is not an easy task. With more metadata the Insights Engine can perform wider analysis and provider better recommendations with a higher confidence they solve the root cause of the problem. For that the user can easily configure collecting more data \n\nDB Schema \nMetadata from the Production Environment \n\nIt is important to clarify the Insight Engine can provide useful insight even by just analyzing the Traces and the Estimated Query Execution Plan they generate. While adding the enrichments is optional, it is highly recommended. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "9dd98816c8a2492684e604c42b4f94c2",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. The basic workflow ",
          "body": "Register to Metis to get an API Key. \ninstall the SDK. We provide SDK for Python, JS and Go, which can be installed from NPM or PyPi respectively.  \nInstrument the SDK with 2 lines of code, using the API key.  \nRun the Application as usual. It can be manually, via QA tests or using CI/CD. As long at the app is working, it sends Traces to Metis. We worked very hard to minimize the impact on performances. \nLogin to the Web App to view the recent activity. \nReview the REST / GraphQL commands and the SQL Commands they generated. The UI helps detecting the most problematic Traces. \nReview the Insights generated by the system to point on the main problems, their impact and how to solve them (remediation plan). Here the web app have all the relevant information well organized to get a deep understanding of the problem. From a simple overview to a deep technical dive. ",
          "anchor": "1.-the-basic-workflow",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/9dd98816c8a2492684e604c42b4f94c2",
          "_highlightResult": {
            "title": {
              "value": "1. The basic workflow ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Register to Metis to get an API Key. \ninstall the SDK. We provide SDK for Python, JS and Go, which can be installed from NPM or PyPi respectively.  \nInstrument the SDK with 2 lines of code, using the API key.  \nRun the Application as usual. It can be manually, via QA tests or using CI/CD. As long at the app is working, it sends Traces to Metis. We worked very hard to minimize the impact on performances. \nLogin to the Web App to view the recent activity. \nReview the REST / GraphQL commands and the SQL Commands they generated. The UI helps detecting the most problematic Traces. \nReview the Insights generated by the system to point on the main problems, their impact and how to solve them (remediation plan). Here the web app have all the relevant information well organized to get a deep understanding of the problem. From a simple overview to a deep technical dive. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "96c2bf96ea9c4845a06aa4a94ad0c554",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Sending the DB Schema",
          "body": "The Schema of the DB is the structure of the tables and indexes. It can be sent to the server \n\nPush the schema using the CLI\nAs part of the Instrumentation\nProviding a connection string too the Web App to pull the schema. ",
          "anchor": "3.-sending-the-db-schema",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/96c2bf96ea9c4845a06aa4a94ad0c554",
          "_highlightResult": {
            "title": {
              "value": "3. Sending the DB Schema",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The Schema of the DB is the structure of the tables and indexes. It can be sent to the server \n\nPush the schema using the CLI\nAs part of the Instrumentation\nProviding a connection string too the Web App to pull the schema. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "378076d323f045159c8c65093b0e3d39",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "The Main Workflows",
          "body": "The main workflow of Metis is collecting the REST / GraphQL commands with their related SQL command (Traces) and sending them to Metis Server. The users can view the collected traces and the insights generated by Metis to highlight the main problems and how to solve them. ",
          "anchor": "the-main-workflows",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/378076d323f045159c8c65093b0e3d39",
          "_highlightResult": {
            "title": {
              "value": "The Main Workflows",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "The main workflow of Metis is collecting the REST / GraphQL commands with their related SQL command (Traces) and sending them to Metis Server. The users can view the collected traces and the insights generated by Metis to highlight the main problems and how to solve them. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "Ovt9z3Gd1rcjREQnoAvX",
          "page": "4BCFA41QfxKY8ku71FkQ",
          "section": "1d6b5b67c038401ab42c60dea937ba56",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "4. Collecting Metadata from the Production Environment",
          "body": "In many organizations the Dev Env is much smaller than the Production one. That means the system might not be able to detect problem in the Dev Env. Sending metadata from the Production environment can help preventing problems before they hit production. \n\nThe metadata does NOT contain any sensitive user data, only general statistics about the DB size and activity. \n\nThe medata collector has almost NO impact on performances, as the queries run on the system tables, 1-4 times a day. ",
          "anchor": "4.-collecting-metadata-from-the-production-environment",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/4BCFA41QfxKY8ku71FkQ/1d6b5b67c038401ab42c60dea937ba56",
          "_highlightResult": {
            "title": {
              "value": "4. Collecting Metadata from the Production Environment",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "In many organizations the Dev Env is much smaller than the Production one. That means the system might not be able to detect problem in the Dev Env. Sending metadata from the Production environment can help preventing problems before they hit production. \n\nThe metadata does NOT contain any sensitive user data, only general statistics about the DB size and activity. \n\nThe medata collector has almost NO impact on performances, as the queries run on the system tables, 1-4 times a day. ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "35NaFSV2xM9V2JhI0lXC",
          "section": "83902e589da34a8c9c5736fd763a6bdf",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "3. Check for Success",
          "body": "Open Up Metis Recent Activity to view your insights!",
          "anchor": "3.-check-for-success",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/35NaFSV2xM9V2JhI0lXC/83902e589da34a8c9c5736fd763a6bdf",
          "_highlightResult": {
            "title": {
              "value": "3. Check for Success",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open Up Metis Recent Activity to view your insights!",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "35NaFSV2xM9V2JhI0lXC",
          "section": "551f69b79efa4e368be40c549f5472fc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "1. Install",
          "body": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nIf you followed the NestJS docs to implement Prisma, you already created a prisma.service.ts. Open it and add the following code-\n\nimport { setInstrumentedPrismaClient } from \"@metis-data/prisma-interceptor\";\nimport { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    constructor() {\n        super({\n            log: [{\n                emit: \"event\",\n                level: \"query\",\n            }]\n        });\n    }\n    async onModuleInit() {\n        await this.$connect();\n        setInstrumentedPrismaClient(this)\n    }\n}\n\nOpen your main.ts and add the following code-\n\nimport { AppModule } from './app.module';\nimport { NestFactory } from '@nestjs/core';\nimport { PrismaNestInterceptor } from '@metis-data/prisma-nest-interceptor';\nconst interceptor = PrismaNestInterceptor.create({\n  serviceName: '<SERVICE_NAME>',\n  serviceVersion: '<SERVICE_VERSION>',\n  apiKey: '<API_KEY>'\n});\n// Add URL Regex to exclude instrumentation from.\ninterceptor.instrument({ excludedUrls: [/favicon.ico/] });\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n}\nbootstrap();",
          "anchor": "1.-install",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/35NaFSV2xM9V2JhI0lXC/551f69b79efa4e368be40c549f5472fc",
          "_highlightResult": {
            "title": {
              "value": "1. Install",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Run the following command to install the SDK using npm-\n\nnpm install --save @metis-data/prisma-interceptor\n\nOpen your prisma.schema and add to your generator client struct the following line-\n\ngenerator client {\n  ...\n  previewFeatures = [\"tracing\"] // Add this line.\n}\n\nRun the following command-\n\nprisma generate\n\nIf you followed the NestJS docs to implement Prisma, you already created a prisma.service.ts. Open it and add the following code-\n\nimport { setInstrumentedPrismaClient } from \"@metis-data/prisma-interceptor\";\nimport { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    constructor() {\n        super({\n            log: [{\n                emit: \"event\",\n                level: \"query\",\n            }]\n        });\n    }\n    async onModuleInit() {\n        await this.$connect();\n        setInstrumentedPrismaClient(this)\n    }\n}\n\nOpen your main.ts and add the following code-\n\nimport { AppModule } from './app.module';\nimport { NestFactory } from '@nestjs/core';\nimport { PrismaNestInterceptor } from '@metis-data/prisma-nest-interceptor';\nconst interceptor = PrismaNestInterceptor.create({\n  serviceName: '<SERVICE_NAME>',\n  serviceVersion: '<SERVICE_VERSION>',\n  apiKey: '<API_KEY>'\n});\n// Add URL Regex to exclude instrumentation from.\ninterceptor.instrument({ excludedUrls: [/favicon.ico/] });\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n}\nbootstrap();",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "35NaFSV2xM9V2JhI0lXC",
          "section": "2780c88dea7c4d14894a1511c17b32ae",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Environment Variables",
          "body": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
          "anchor": "environment-variables",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/35NaFSV2xM9V2JhI0lXC/2780c88dea7c4d14894a1511c17b32ae",
          "_highlightResult": {
            "title": {
              "value": "Environment Variables",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "METIS_API_KEY\n<String> API Key to use\nMETIS_ENVIRONMENT\n<String> Text used to identify the source that sends the instrumentation data.\nWe suggest you Read This Page to fully understand this feature\nMETIS_DISABLED\n<Boolean> If True Metis Instrumentation is fully disabled. We strongly advise to disable the instrumentation when in production to prevent sensitive data from leaving your organization's database.\nMETIS_SERVICE_NAME\n<String> Gives ability to distinguish between services. Useful when working with Micro Services.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "dVb3WLLLX3XknjURX31U",
          "page": "35NaFSV2xM9V2JhI0lXC",
          "section": "0bd73026381d4994941cc56ce097171b",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "2. Send Data",
          "body": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
          "anchor": "2.-send-data",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/35NaFSV2xM9V2JhI0lXC/0bd73026381d4994941cc56ce097171b",
          "_highlightResult": {
            "title": {
              "value": "2. Send Data",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Now you can run your application as you normally would, and interact with it in a manner that causes the server to interact with your database.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "2uEecBvYqfgkhKRZpztW",
          "section": "initial_2uEecBvYqfgkhKRZpztW_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Connect to a DB",
          "body": "Connect to a DB using\n\nREPL: connect(connection-name)",
          "anchor": "connect-to-a-db",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/2uEecBvYqfgkhKRZpztW/initial_2uEecBvYqfgkhKRZpztW_block",
          "_highlightResult": {
            "title": {
              "value": "Connect to a DB",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Connect to a DB using\n\nREPL: connect(connection-name)",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "iWfu8yq3GHuN5zDSYdMb",
          "page": "2uEecBvYqfgkhKRZpztW",
          "section": "0f84c479c0b94483b03de8b11aba4178",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Troubleshooting",
          "body": "",
          "anchor": "troubleshooting",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/2uEecBvYqfgkhKRZpztW/0f84c479c0b94483b03de8b11aba4178",
          "_highlightResult": {
            "title": {
              "value": "Troubleshooting",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "qhEfpOgrqjOwdU2DlwHx",
          "page": "2uEecBvYqfgkhKRZpztW",
          "section": "0edd436deab548feac1449c2c1a78a88",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View Existing Connections",
          "body": "REPL: listConnections()\n\nCLI:  metis-cli list-connections\n\nView existing connections",
          "anchor": "view-existing-connections",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/2uEecBvYqfgkhKRZpztW/0edd436deab548feac1449c2c1a78a88",
          "_highlightResult": {
            "title": {
              "value": "View Existing Connections",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "REPL: listConnections()\n\nCLI:  metis-cli list-connections\n\nView existing connections",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "YY9p9UcCBeznyUewTqge",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "initial_0Q0tL3BDUqaUTHDM0MF2_block",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "addConnection() - the wizard asks for the necessary properties. \n\nAdding a new connection using a Wizard",
          "anchor": "repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/initial_0Q0tL3BDUqaUTHDM0MF2_block",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "addConnection() - the wizard asks for the necessary properties. \n\nAdding a new connection using a Wizard",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "f8584a8ce7074bebad872b627797cd01",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Connect",
          "body": "",
          "anchor": "connect",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/f8584a8ce7074bebad872b627797cd01",
          "_highlightResult": {
            "title": {
              "value": "Connect",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "c968b790d67e435fb3efbdb6e04e2824",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Overview",
          "body": "When analyzing queries via the queryAnalysis() command, by default our engines analyze the query regardless of the database it'll run against. You can however provide a connection to the database that you would like to test your query against.\n\nWe highly recommend adding a connection when analyzing queries, as we provide stronger insights against the scenario the queries will actually be tested in.",
          "anchor": "overview",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/c968b790d67e435fb3efbdb6e04e2824",
          "_highlightResult": {
            "title": {
              "value": "Overview",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "When analyzing queries via the queryAnalysis() command, by default our engines analyze the query regardless of the database it'll run against. You can however provide a connection to the database that you would like to test your query against.\n\nWe highly recommend adding a connection when analyzing queries, as we provide stronger insights against the scenario the queries will actually be tested in.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "aca9d9852a5a44509a961a8eb77f9fd5",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "connect('connection-name')",
          "anchor": "repl-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/aca9d9852a5a44509a961a8eb77f9fd5",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "connect('connection-name')",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "959c3485d8f548eea178baf52cc1a5de",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "metis-cli list-connections",
          "anchor": "cli-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/959c3485d8f548eea178baf52cc1a5de",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli list-connections",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "8ef9a8cae0d149a28c7d6d4e482240c8",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "No need to connect in CLI mode. Your default connection will be used.\n\nYou can set the default connection by running-\n\n\nmetis-cli set-default-connection 'connection-name'",
          "anchor": "cli-2",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/8ef9a8cae0d149a28c7d6d4e482240c8",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "No need to connect in CLI mode. Your default connection will be used.\n\nYou can set the default connection by running-\n\n\nmetis-cli set-default-connection 'connection-name'",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "8891ce29366049d7bd1cef96b64aeefc",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "View existing Connections",
          "body": "",
          "anchor": "view-existing-connections",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/8891ce29366049d7bd1cef96b64aeefc",
          "_highlightResult": {
            "title": {
              "value": "View existing Connections",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "73c1fe3e37a446f18c4c8e6973c9c14a",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "addConnection()",
          "anchor": "repl",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/73c1fe3e37a446f18c4c8e6973c9c14a",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "addConnection()",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "275b9200b1014045b9abe66268f8878c",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "CLI",
          "body": "metis-cli add-connection",
          "anchor": "cli",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/275b9200b1014045b9abe66268f8878c",
          "_highlightResult": {
            "title": {
              "value": "CLI",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "metis-cli add-connection",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "242d2fdca35f4a07b812efd599d7f67d",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "Create a New Connection",
          "body": "Open the CLI tool and type the following command-",
          "anchor": "create-a-new-connection",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/242d2fdca35f4a07b812efd599d7f67d",
          "_highlightResult": {
            "title": {
              "value": "Create a New Connection",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Open the CLI tool and type the following command-",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "gxIEa87NSrGAQEdyh6Nd",
          "page": "0Q0tL3BDUqaUTHDM0MF2",
          "section": "13a26775851f4f27aabfafa337fcc790",
          "organization": "hVI7T71faXKTWjb2jdNw",
          "title": "REPL",
          "body": "listConnections()",
          "anchor": "repl-1",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/0Q0tL3BDUqaUTHDM0MF2/13a26775851f4f27aabfafa337fcc790",
          "_highlightResult": {
            "title": {
              "value": "REPL",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "listConnections()",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "-MiqMZk-AZOT3oW6LvAt",
          "page": "-MiqJQP8ylv2v1WS1rNl",
          "section": "f490533b95e84c54b427794b742b1192",
          "user": "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
          "title": "SQL: ",
          "body": "SELECT\n\tSCH.name AS Schema_Name\n\t,Tab.name  AS Table_Name\n\t,TAB.object_id as Object_ID\n\t,IND.name AS Index_Name\n\t,IND.index_id\n\t,IND.type_desc AS Index_Type\n\t,COL.name as Column_Name\n\t,IXC.column_id as Column_ID\n\t,IXC.key_ordinal\n\t,TYP.name as DataType\n\t,COL.max_length\n\t,IXC.is_included_column\n\t,IXC.is_descending_key\nFROM  sys.indexes IND\n\tINNER JOIN sys.index_columns AS IXC\n\t\tON  IND.object_id   =   IXC.object_id\n\t\tAND  IND.index_id  =  IXC.index_id\n\tINNER JOIN sys.columns as COL\n\t\tON IXC.column_id = COL.column_ID\n\t\tAND IXC.object_id = COL.object_id\n\tINNER JOIN sys.types as TYP\n\t\tON COL.user_type_id = TYP.user_type_id\n    INNER JOIN sys.tables AS TAB\n\t\tON  IND.object_id = Tab.object_id\n\tINNER JOIN sys.schemas as SCH\n\t\tON TAB.schema_id = SCH.schema_id\nWHERE\n\t(TAB.object_ID = @objectID OR @ObjectID IS NULL)\nORDER BY\n\tSchema_Name, Table_Name, Index_Name, key_Ordinal\"\"\"\n    \n\nParameters\n\nparameter-name\ndata-type\ndefault-value\nobject-id\nint\n\nRelated Commands: None\n\nGranularity: index-name, column-name\n\nMore Information: \n\nIndex Related DMV \nsys.index_columns ",
          "anchor": "sql",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/-MiqJQP8ylv2v1WS1rNl/f490533b95e84c54b427794b742b1192",
          "_highlightResult": {
            "title": {
              "value": "SQL: ",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "SELECT\n\tSCH.name AS Schema_Name\n\t,Tab.name  AS Table_Name\n\t,TAB.object_id as Object_ID\n\t,IND.name AS Index_Name\n\t,IND.index_id\n\t,IND.type_desc AS Index_Type\n\t,COL.name as Column_Name\n\t,IXC.column_id as Column_ID\n\t,IXC.key_ordinal\n\t,TYP.name as DataType\n\t,COL.max_length\n\t,IXC.is_included_column\n\t,IXC.is_descending_key\nFROM  sys.indexes IND\n\tINNER JOIN sys.index_columns AS IXC\n\t\tON  IND.object_id   =   IXC.object_id\n\t\tAND  IND.index_id  =  IXC.index_id\n\tINNER JOIN sys.columns as COL\n\t\tON IXC.column_id = COL.column_ID\n\t\tAND IXC.object_id = COL.object_id\n\tINNER JOIN sys.types as TYP\n\t\tON COL.user_type_id = TYP.user_type_id\n    INNER JOIN sys.tables AS TAB\n\t\tON  IND.object_id = Tab.object_id\n\tINNER JOIN sys.schemas as SCH\n\t\tON TAB.schema_id = SCH.schema_id\nWHERE\n\t(TAB.object_ID = @objectID OR @ObjectID IS NULL)\nORDER BY\n\tSchema_Name, Table_Name, Index_Name, key_Ordinal\"\"\"\n    \n\nParameters\n\nparameter-name\ndata-type\ndefault-value\nobject-id\nint\n\nRelated Commands: None\n\nGranularity: index-name, column-name\n\nMore Information: \n\nIndex Related DMV \nsys.index_columns ",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "-MiqMZk-AZOT3oW6LvAt",
          "page": "-MiqJQP8ylv2v1WS1rNl",
          "section": "16589944ece245a6b5323f0886613459",
          "user": "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
          "title": "Query: indexes-columns",
          "body": "Description: The columns (name, data type) of each index, sorted by the internal index column order",
          "anchor": "query-indexes-columns",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/-MiqJQP8ylv2v1WS1rNl/16589944ece245a6b5323f0886613459",
          "_highlightResult": {
            "title": {
              "value": "Query: indexes-columns",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Description: The columns (name, data type) of each index, sorted by the internal index column order",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "-MiqMZk-AZOT3oW6LvAt",
          "page": "-MiqI_c2cwJw3w8viEIj",
          "section": "16589944ece245a6b5323f0886613459",
          "user": "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
          "title": "Package Name: indexes",
          "body": "Description: useful queries and commands around indexes\nLast Update: Aug 15 2021 17:45\nAuthor: Metis Data",
          "anchor": "package-name-indexes",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/-MiqI_c2cwJw3w8viEIj/16589944ece245a6b5323f0886613459",
          "_highlightResult": {
            "title": {
              "value": "Package Name: indexes",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "Description: useful queries and commands around indexes\nLast Update: Aug 15 2021 17:45\nAuthor: Metis Data",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        },
        {
          "space": "-MiqIHa1G-OhMZ7Fui__",
          "revision": "5KOw6wTvwkjmffF1an2Z",
          "page": "-MiqIPNDXl5PRTLg9A6H",
          "section": "32a7d6de2fa64881a93c6c29431f0bf1",
          "user": "FPqu5OHU9xVhxOzdbNITkmP7qXg2",
          "title": "",
          "body": "With the exponential growth of data within organizations, companies seek more proactive solutions to manage the complex infrastructure that supports it. \n\n \n\nUsing the Metis data layer guardrails, software development teams can move faster while ensuring that their data layer code will not cause outages and SLA issues in their production DBs.  Metis not only alerts developers of potential problems and risks before they reach production but also mitigates them and provides a solution so developers can focus on the software application without worrying about the integrity of their data infrastructure.",
          "anchor": "",
          "viewableBySpaces": [
            "-MiqIHa1G-OhMZ7Fui__"
          ],
          "viewableByPublicSpaces": [
            "-MiqIHa1G-OhMZ7Fui__-1"
          ],
          "projectId": "gitbook-x-prod",
          "objectID": "-MiqIHa1G-OhMZ7Fui__/-MiqIPNDXl5PRTLg9A6H/32a7d6de2fa64881a93c6c29431f0bf1",
          "_highlightResult": {
            "title": {
              "value": "",
              "matchLevel": "none",
              "matchedWords": []
            },
            "body": {
              "value": "With the exponential growth of data within organizations, companies seek more proactive solutions to manage the complex infrastructure that supports it. \n\n \n\nUsing the Metis data layer guardrails, software development teams can move faster while ensuring that their data layer code will not cause outages and SLA issues in their production DBs.  Metis not only alerts developers of potential problems and risks before they reach production but also mitigates them and provides a solution so developers can focus on the software application without worrying about the integrity of their data infrastructure.",
              "matchLevel": "none",
              "matchedWords": []
            }
          }
        }
      ],
      "nbHits": 524,
      "page": 0,
      "nbPages": 1,
      "hitsPerPage": 1000,
      "exhaustiveNbHits": true,
      "exhaustiveTypo": true,
      "exhaustive": {
        "nbHits": true,
        "typo": true
      },
      "query": "",
      "params": "query=&hitsPerPage=100000&analyticsTags=%5B%22space%2F-MiqIHa1G-OhMZ7Fui__%22%5D&highlightPreTag=%3Cgb-search-highlight%3E&highlightPostTag=%3C%2Fgb-search-highlight%3E&filters=(viewableByPublicSpaces%3A-MiqIHa1G-OhMZ7Fui__-1)%20AND%20projectId%3Agitbook-x-prod",
      "index": "sections",
      "renderingContent": {},
      "processingTimeMS": 50,
      "processingTimingsMS": {
        "afterFetch": {
          "format": {
            "highlighting": 28,
            "total": 42
          },
          "total": 48
        },
        "fetch": {
          "total": 2
        },
        "request": {
          "roundTrip": 364
        },
        "total": 50
      },
      "serverTimeMS": 62
    }
  ]
}